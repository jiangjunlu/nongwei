<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Oracle.DataAccess.2.112.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy">
            <summary>Oracle.DataAccess.Client.OracleBulkCopy 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.#ctor(Oracle.DataAccess.Client.OracleBulkCopy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.Abort">
            <summary>设置 OracleBulkCopy.Abort() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.Abort">
            <summary>设置 OracleBulkCopy.Abort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BatchSizeGet">
            <summary>设置 OracleBulkCopy.get_BatchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BatchSizeSetInt32">
            <summary>设置 OracleBulkCopy.set_BatchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BulkCopyOptionsGet">
            <summary>设置 OracleBulkCopy.get_BulkCopyOptions() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BulkCopyOptionsSetOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.set_BulkCopyOptions(OracleBulkCopyOptions value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BulkCopyTimeoutGet">
            <summary>设置 OracleBulkCopy.get_BulkCopyTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.BulkCopyTimeoutSetInt32">
            <summary>设置 OracleBulkCopy.set_BulkCopyTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.Close">
            <summary>设置 OracleBulkCopy.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.ColumnMappingsGet">
            <summary>设置 OracleBulkCopy.get_ColumnMappings() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.ConnectionGet">
            <summary>设置 OracleBulkCopy.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.DestinationPartitionNameGet">
            <summary>设置 OracleBulkCopy.get_DestinationPartitionName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.DestinationPartitionNameSetString">
            <summary>设置 OracleBulkCopy.set_DestinationPartitionName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.DestinationTableNameGet">
            <summary>设置 OracleBulkCopy.get_DestinationTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.DestinationTableNameSetString">
            <summary>设置 OracleBulkCopy.set_DestinationTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.Dispose">
            <summary>设置 OracleBulkCopy.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.DisposeBoolean">
            <summary>设置 OracleBulkCopy.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.FireRowsCopiedEventInt64">
            <summary>设置 OracleBulkCopy.FireRowsCopiedEvent(Int64 rowsCopied) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.GetMetaData">
            <summary>设置 OracleBulkCopy.GetMetaData() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.IsBulkCopyOptionOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.IsBulkCopyOption(OracleBulkCopyOptions copyOption) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.NotifyAfterGet">
            <summary>设置 OracleBulkCopy.get_NotifyAfter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.NotifyAfterSetInt32">
            <summary>设置 OracleBulkCopy.set_NotifyAfter(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.OnRowsCopiedOracleRowsCopiedEventArgs">
            <summary>设置 OracleBulkCopy.OnRowsCopied(OracleRowsCopiedEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.OracleRowsCopiedAddOracleRowsCopiedEventHandler">
            <summary>设置 OracleBulkCopy.add_OracleRowsCopied(OracleRowsCopiedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.OracleRowsCopiedRemoveOracleRowsCopiedEventHandler">
            <summary>设置 OracleBulkCopy.remove_OracleRowsCopied(OracleRowsCopiedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.PerformBulkCopy">
            <summary>设置 OracleBulkCopy.PerformBulkCopy() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.PerformBulkCopyForOraDataReader">
            <summary>设置 OracleBulkCopy.PerformBulkCopyForOraDataReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.ProcessSrcColumns">
            <summary>设置 OracleBulkCopy.ProcessSrcColumns() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.ReadFromSource">
            <summary>设置 OracleBulkCopy.ReadFromSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.ValidateConnection">
            <summary>设置 OracleBulkCopy.ValidateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteDataSourceToServer">
            <summary>设置 OracleBulkCopy.WriteDataSourceToServer() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteToServerDataRowArray">
            <summary>设置 OracleBulkCopy.WriteToServer(DataRow[] rows) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteToServerDataTable">
            <summary>设置 OracleBulkCopy.WriteToServer(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteToServerDataTableDataRowState">
            <summary>设置 OracleBulkCopy.WriteToServer(DataTable table, DataRowState rowState) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteToServerIDataReader">
            <summary>设置 OracleBulkCopy.WriteToServer(IDataReader reader) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.AllInstances.WriteToServerOracleRefCursor">
            <summary>设置 OracleBulkCopy.WriteToServer(OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BatchSizeGet">
            <summary>设置 OracleBulkCopy.get_BatchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BatchSizeSetInt32">
            <summary>设置 OracleBulkCopy.set_BatchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BulkCopyOptionsGet">
            <summary>设置 OracleBulkCopy.get_BulkCopyOptions() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BulkCopyOptionsSetOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.set_BulkCopyOptions(OracleBulkCopyOptions value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BulkCopyTimeoutGet">
            <summary>设置 OracleBulkCopy.get_BulkCopyTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.BulkCopyTimeoutSetInt32">
            <summary>设置 OracleBulkCopy.set_BulkCopyTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.Close">
            <summary>设置 OracleBulkCopy.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ColumnMappingsGet">
            <summary>设置 OracleBulkCopy.get_ColumnMappings() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ConnectionGet">
            <summary>设置 OracleBulkCopy.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ConstructorOracleConnection">
            <summary>设置 OracleBulkCopy.OracleBulkCopy(OracleConnection connection) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ConstructorOracleConnectionOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.OracleBulkCopy(OracleConnection connection, OracleBulkCopyOptions copyOptions) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ConstructorString">
            <summary>设置 OracleBulkCopy.OracleBulkCopy(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ConstructorStringOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.OracleBulkCopy(String connectionString, OracleBulkCopyOptions copyOptions) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.DestinationPartitionNameGet">
            <summary>设置 OracleBulkCopy.get_DestinationPartitionName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.DestinationPartitionNameSetString">
            <summary>设置 OracleBulkCopy.set_DestinationPartitionName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.DestinationTableNameGet">
            <summary>设置 OracleBulkCopy.get_DestinationTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.DestinationTableNameSetString">
            <summary>设置 OracleBulkCopy.set_DestinationTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.Dispose">
            <summary>设置 OracleBulkCopy.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.DisposeBoolean">
            <summary>设置 OracleBulkCopy.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.FireRowsCopiedEventInt64">
            <summary>设置 OracleBulkCopy.FireRowsCopiedEvent(Int64 rowsCopied) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.GetMetaData">
            <summary>设置 OracleBulkCopy.GetMetaData() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.IsBulkCopyOptionOracleBulkCopyOptions">
            <summary>设置 OracleBulkCopy.IsBulkCopyOption(OracleBulkCopyOptions copyOption) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.NotifyAfterGet">
            <summary>设置 OracleBulkCopy.get_NotifyAfter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.NotifyAfterSetInt32">
            <summary>设置 OracleBulkCopy.set_NotifyAfter(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.OnRowsCopiedOracleRowsCopiedEventArgs">
            <summary>设置 OracleBulkCopy.OnRowsCopied(OracleRowsCopiedEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.OnTimeElapsedObjectElapsedEventArgs">
            <summary>设置 OracleBulkCopy.OnTimeElapsed(Object source, ElapsedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.OracleRowsCopiedAddOracleRowsCopiedEventHandler">
            <summary>设置 OracleBulkCopy.add_OracleRowsCopied(OracleRowsCopiedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.OracleRowsCopiedRemoveOracleRowsCopiedEventHandler">
            <summary>设置 OracleBulkCopy.remove_OracleRowsCopied(OracleRowsCopiedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.PerformBulkCopy">
            <summary>设置 OracleBulkCopy.PerformBulkCopy() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.PerformBulkCopyForOraDataReader">
            <summary>设置 OracleBulkCopy.PerformBulkCopyForOraDataReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ProcessSrcColumns">
            <summary>设置 OracleBulkCopy.ProcessSrcColumns() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ReadFromSource">
            <summary>设置 OracleBulkCopy.ReadFromSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.StaticConstructor">
            <summary>设置 OracleBulkCopy.OracleBulkCopy() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.ValidateConnection">
            <summary>设置 OracleBulkCopy.ValidateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteDataSourceToServer">
            <summary>设置 OracleBulkCopy.WriteDataSourceToServer() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteToServerDataRowArray">
            <summary>设置 OracleBulkCopy.WriteToServer(DataRow[] rows) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteToServerDataTable">
            <summary>设置 OracleBulkCopy.WriteToServer(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteToServerDataTableDataRowState">
            <summary>设置 OracleBulkCopy.WriteToServer(DataTable table, DataRowState rowState) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteToServerIDataReader">
            <summary>设置 OracleBulkCopy.WriteToServer(IDataReader reader) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopy.WriteToServerOracleRefCursor">
            <summary>设置 OracleBulkCopy.WriteToServer(OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping">
            <summary>Oracle.DataAccess.Client.OracleBulkCopyColumnMapping 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.#ctor(Oracle.DataAccess.Client.OracleBulkCopyColumnMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.CompareToObject">
            <summary>设置 OracleBulkCopyColumnMapping.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.DestinationColumnGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_DestinationColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.DestinationColumnSetString">
            <summary>设置 OracleBulkCopyColumnMapping.set_DestinationColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.DestinationOrdinalGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_DestinationOrdinal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.DestinationOrdinalSetInt32">
            <summary>设置 OracleBulkCopyColumnMapping.set_DestinationOrdinal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.SourceColumnGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_SourceColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.SourceColumnSetString">
            <summary>设置 OracleBulkCopyColumnMapping.set_SourceColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.SourceOrdinalGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_SourceOrdinal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.AllInstances.SourceOrdinalSetInt32">
            <summary>设置 OracleBulkCopyColumnMapping.set_SourceOrdinal(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.CompareToObject">
            <summary>设置 OracleBulkCopyColumnMapping.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.Constructor">
            <summary>设置 OracleBulkCopyColumnMapping.OracleBulkCopyColumnMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.ConstructorInt32Int32">
            <summary>设置 OracleBulkCopyColumnMapping.OracleBulkCopyColumnMapping(Int32 sourceColumnOrdinal, Int32 destinationOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.ConstructorInt32String">
            <summary>设置 OracleBulkCopyColumnMapping.OracleBulkCopyColumnMapping(Int32 sourceColumnOrdinal, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.ConstructorStringInt32">
            <summary>设置 OracleBulkCopyColumnMapping.OracleBulkCopyColumnMapping(String sourceColumn, Int32 destinationOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.ConstructorStringString">
            <summary>设置 OracleBulkCopyColumnMapping.OracleBulkCopyColumnMapping(String sourceColumn, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.DestinationColumnGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_DestinationColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.DestinationColumnSetString">
            <summary>设置 OracleBulkCopyColumnMapping.set_DestinationColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.DestinationOrdinalGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_DestinationOrdinal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.DestinationOrdinalSetInt32">
            <summary>设置 OracleBulkCopyColumnMapping.set_DestinationOrdinal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.SourceColumnGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_SourceColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.SourceColumnSetString">
            <summary>设置 OracleBulkCopyColumnMapping.set_SourceColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.SourceOrdinalGet">
            <summary>设置 OracleBulkCopyColumnMapping.get_SourceOrdinal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMapping.SourceOrdinalSetInt32">
            <summary>设置 OracleBulkCopyColumnMapping.set_SourceOrdinal(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection">
            <summary>Oracle.DataAccess.Client.OracleBulkCopyColumnMappingCollection 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.#ctor(Oracle.DataAccess.Client.OracleBulkCopyColumnMappingCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AddInt32Int32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(Int32 sourceColumnIndex, Int32 destinationColumnIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AddInt32String">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(Int32 sourceColumnIndex, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AddOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(OracleBulkCopyColumnMapping bulkCopyColumnMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AddStringInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(String sourceColumn, Int32 destinationColumnIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AddStringString">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(String sourceColumn, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.AddInt32Int32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(Int32 sourceColumnIndex, Int32 destinationColumnIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.AddInt32String">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(Int32 sourceColumnIndex, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.AddOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(OracleBulkCopyColumnMapping bulkCopyColumnMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.AddStringInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(String sourceColumn, Int32 destinationColumnIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.AddStringString">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Add(String sourceColumn, String destinationColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.BulkCopyInProgressGet">
            <summary>设置 OracleBulkCopyColumnMappingCollection.get_BulkCopyInProgress() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.BulkCopyInProgressSetBoolean">
            <summary>设置 OracleBulkCopyColumnMappingCollection.set_BulkCopyInProgress(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.Clear">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.ContainsOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Contains(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.CopyToOracleBulkCopyColumnMappingArrayInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.CopyTo(OracleBulkCopyColumnMapping[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.CreateDefaultColumnMappingInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.CreateDefaultColumnMapping(Int32 columnCount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.IndexOfOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.IndexOf(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.InsertInt32OracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Insert(Int32 index, OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.ItemGetInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.ItemSetInt32OracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.set_Item(Int32 index, OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.RemoveAtInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.RemoveOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Remove(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.Sort">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.AllInstances.ValidateCollection">
            <summary>设置 OracleBulkCopyColumnMappingCollection.ValidateCollection() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.BulkCopyInProgressGet">
            <summary>设置 OracleBulkCopyColumnMappingCollection.get_BulkCopyInProgress() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.BulkCopyInProgressSetBoolean">
            <summary>设置 OracleBulkCopyColumnMappingCollection.set_BulkCopyInProgress(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Clear">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Constructor">
            <summary>设置 OracleBulkCopyColumnMappingCollection.OracleBulkCopyColumnMappingCollection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.ContainsOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Contains(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.CopyToOracleBulkCopyColumnMappingArrayInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.CopyTo(OracleBulkCopyColumnMapping[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.CreateDefaultColumnMappingInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.CreateDefaultColumnMapping(Int32 columnCount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.IndexOfOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.IndexOf(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.InsertInt32OracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Insert(Int32 index, OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.IsEmptyString">
            <summary>设置 OracleBulkCopyColumnMappingCollection.IsEmpty(String str) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.ItemGetInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.ItemSetInt32OracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.set_Item(Int32 index, OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.RemoveAtInt32">
            <summary>设置 OracleBulkCopyColumnMappingCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.RemoveOracleBulkCopyColumnMapping">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Remove(OracleBulkCopyColumnMapping value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.Sort">
            <summary>设置 OracleBulkCopyColumnMappingCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleBulkCopyColumnMappingCollection.ValidateCollection">
            <summary>设置 OracleBulkCopyColumnMappingCollection.ValidateCollection() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory">
            <summary>Oracle.DataAccess.Client.OracleClientFactory 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.#ctor(Oracle.DataAccess.Client.OracleClientFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CanCreateDataSourceEnumeratorGet">
            <summary>设置 OracleClientFactory.get_CanCreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateCommand">
            <summary>设置 OracleClientFactory.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateCommandBuilder">
            <summary>设置 OracleClientFactory.CreateCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateConnection">
            <summary>设置 OracleClientFactory.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateConnectionStringBuilder">
            <summary>设置 OracleClientFactory.CreateConnectionStringBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateDataAdapter">
            <summary>设置 OracleClientFactory.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateDataSourceEnumerator">
            <summary>设置 OracleClientFactory.CreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreateParameter">
            <summary>设置 OracleClientFactory.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.AllInstances.CreatePermissionPermissionState">
            <summary>设置 OracleClientFactory.CreatePermission(PermissionState state) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CanCreateDataSourceEnumeratorGet">
            <summary>设置 OracleClientFactory.get_CanCreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.Constructor">
            <summary>设置 OracleClientFactory.OracleClientFactory() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateCommand">
            <summary>设置 OracleClientFactory.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateCommandBuilder">
            <summary>设置 OracleClientFactory.CreateCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateConnection">
            <summary>设置 OracleClientFactory.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateConnectionStringBuilder">
            <summary>设置 OracleClientFactory.CreateConnectionStringBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateDataAdapter">
            <summary>设置 OracleClientFactory.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateDataSourceEnumerator">
            <summary>设置 OracleClientFactory.CreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreateParameter">
            <summary>设置 OracleClientFactory.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.CreatePermissionPermissionState">
            <summary>设置 OracleClientFactory.CreatePermission(PermissionState state) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleClientFactory.StaticConstructor">
            <summary>设置 OracleClientFactory.OracleClientFactory() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleCommand">
            <summary>Oracle.DataAccess.Client.OracleCommand 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.#ctor(Oracle.DataAccess.Client.OracleCommand)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AddRowidGet">
            <summary>设置 OracleCommand.get_AddRowid() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AddRowidSetBoolean">
            <summary>设置 OracleCommand.set_AddRowid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AddToStatementCacheGet">
            <summary>设置 OracleCommand.get_AddToStatementCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AddToStatementCacheSetBoolean">
            <summary>设置 OracleCommand.set_AddToStatementCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.AddRowidGet">
            <summary>设置 OracleCommand.get_AddRowid() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.AddRowidSetBoolean">
            <summary>设置 OracleCommand.set_AddRowid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.AddToStatementCacheGet">
            <summary>设置 OracleCommand.get_AddToStatementCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.AddToStatementCacheSetBoolean">
            <summary>设置 OracleCommand.set_AddToStatementCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ArrayBindCountGet">
            <summary>设置 OracleCommand.get_ArrayBindCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ArrayBindCountSetInt32">
            <summary>设置 OracleCommand.set_ArrayBindCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.BindByNameGet">
            <summary>设置 OracleCommand.get_BindByName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.BindByNameSetBoolean">
            <summary>设置 OracleCommand.set_BindByName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Build8iXslCommandTextForXmlSaveStringBuilderString">
            <summary>设置 OracleCommand.Build8iXslCommandTextForXmlSave(StringBuilder strBldr, String xsltParams) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Build9iXslCommandTextForXmlGenStringBuilderBooleanString">
            <summary>设置 OracleCommand.Build9iXslCommandTextForXmlGen(StringBuilder strBldr, Boolean wantResult, String xsltParams) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.BuildCommandText">
            <summary>设置 OracleCommand.BuildCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.BuildXmlQueryCommandTextBooleanString">
            <summary>设置 OracleCommand.BuildXmlQueryCommandText(Boolean wantResult, String resultParamName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.BuildXmlSaveCommandText">
            <summary>设置 OracleCommand.BuildXmlSaveCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Cancel">
            <summary>设置 OracleCommand.Cancel() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CheckConStatus">
            <summary>设置 OracleCommand.CheckConStatus() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Clone">
            <summary>设置 OracleCommand.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTextGet">
            <summary>设置 OracleCommand.get_CommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTextSetString">
            <summary>设置 OracleCommand.set_CommandText(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTimeoutGet">
            <summary>设置 OracleCommand.get_CommandTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTimeoutSetInt32">
            <summary>设置 OracleCommand.set_CommandTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTypeGet">
            <summary>设置 OracleCommand.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CommandTypeSetCommandType">
            <summary>设置 OracleCommand.set_CommandType(CommandType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ConnectionGet">
            <summary>设置 OracleCommand.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ConnectionSetOracleConnection">
            <summary>设置 OracleCommand.set_Connection(OracleConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CreateDbParameter">
            <summary>设置 OracleCommand.CreateDbParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.CreateParameter">
            <summary>设置 OracleCommand.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DbConnectionGet">
            <summary>设置 OracleCommand.get_DbConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DbConnectionSetDbConnection">
            <summary>设置 OracleCommand.set_DbConnection(DbConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DbParameterCollectionGet">
            <summary>设置 OracleCommand.get_DbParameterCollection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DbTransactionGet">
            <summary>设置 OracleCommand.get_DbTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DbTransactionSetDbTransaction">
            <summary>设置 OracleCommand.set_DbTransaction(DbTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DesignTimeVisibleGet">
            <summary>设置 OracleCommand.get_DesignTimeVisible() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DesignTimeVisibleSetBoolean">
            <summary>设置 OracleCommand.set_DesignTimeVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.DisposeBoolean">
            <summary>设置 OracleCommand.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteDbDataReaderCommandBehavior">
            <summary>设置 OracleCommand.ExecuteDbDataReader(CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteNonQuery">
            <summary>设置 OracleCommand.ExecuteNonQuery() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteReader">
            <summary>设置 OracleCommand.ExecuteReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteReaderBooleanBooleanCommandBehavior">
            <summary>设置 OracleCommand.ExecuteReader(Boolean requery, Boolean fillRequest, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteReaderCommandBehavior">
            <summary>设置 OracleCommand.ExecuteReader(CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteScalar">
            <summary>设置 OracleCommand.ExecuteScalar() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteStream">
            <summary>设置 OracleCommand.ExecuteStream() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteToStreamStream">
            <summary>设置 OracleCommand.ExecuteToStream(Stream outputStream) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteXmlQueryBoolean">
            <summary>设置 OracleCommand.ExecuteXmlQuery(Boolean wantResult) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteXmlReader">
            <summary>设置 OracleCommand.ExecuteXmlReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ExecuteXmlSave">
            <summary>设置 OracleCommand.ExecuteXmlSave() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.FetchSizeGet">
            <summary>设置 OracleCommand.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.FetchSizeSetInt64">
            <summary>设置 OracleCommand.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.FreeAllCtx">
            <summary>设置 OracleCommand.FreeAllCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.FreeNonCachedOpoPrmCtx">
            <summary>设置 OracleCommand.FreeNonCachedOpoPrmCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.GetPlsqlOutput">
            <summary>设置 OracleCommand.GetPlsqlOutput() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.GetReturnValueParam">
            <summary>设置 OracleCommand.GetReturnValueParam() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.InitialLOBFetchSizeGet">
            <summary>设置 OracleCommand.get_InitialLOBFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.InitialLOBFetchSizeSetInt32">
            <summary>设置 OracleCommand.set_InitialLOBFetchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.InitialLONGFetchSizeGet">
            <summary>设置 OracleCommand.get_InitialLONGFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.InitialLONGFetchSizeSetInt32">
            <summary>设置 OracleCommand.set_InitialLONGFetchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Initialize">
            <summary>设置 OracleCommand.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.NotificationAutoEnlistGet">
            <summary>设置 OracleCommand.get_NotificationAutoEnlist() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.NotificationAutoEnlistSetBoolean">
            <summary>设置 OracleCommand.set_NotificationAutoEnlist(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.NotificationGet">
            <summary>设置 OracleCommand.get_Notification() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.NotificationSetOracleNotificationRequest">
            <summary>设置 OracleCommand.set_Notification(OracleNotificationRequest value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ParametersGet">
            <summary>设置 OracleCommand.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ParseCommandText">
            <summary>设置 OracleCommand.ParseCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.ParseXsltParamsStringStringArrayOutStringArrayOut">
            <summary>设置 OracleCommand.ParseXsltParams(String xsltParams, String[]&amp; xsltParamNames, String[]&amp; xsltParamValues) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.Prepare">
            <summary>设置 OracleCommand.Prepare() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.RowSizeGet">
            <summary>设置 OracleCommand.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.SetSqlValCtxBoolean">
            <summary>设置 OracleCommand.SetSqlValCtx(Boolean bXmlQuerySave) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.TimeoutObject">
            <summary>设置 OracleCommand.Timeout(Object state) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.TransactionGet">
            <summary>设置 OracleCommand.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.TransactionSetOracleTransaction">
            <summary>设置 OracleCommand.set_Transaction(OracleTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.UpdatedRowSourceGet">
            <summary>设置 OracleCommand.get_UpdatedRowSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.UpdatedRowSourceSetUpdateRowSource">
            <summary>设置 OracleCommand.set_UpdatedRowSource(UpdateRowSource value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlCommandTypeGet">
            <summary>设置 OracleCommand.get_XmlCommandType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlCommandTypeSetOracleXmlCommandType">
            <summary>设置 OracleCommand.set_XmlCommandType(OracleXmlCommandType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlHandleExceptionOracleException">
            <summary>设置 OracleCommand.XmlHandleException(OracleException e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlQueryPropertiesGet">
            <summary>设置 OracleCommand.get_XmlQueryProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlQueryPropertiesSetOracleXmlQueryProperties">
            <summary>设置 OracleCommand.set_XmlQueryProperties(OracleXmlQueryProperties value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlSavePropertiesGet">
            <summary>设置 OracleCommand.get_XmlSaveProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.AllInstances.XmlSavePropertiesSetOracleXmlSaveProperties">
            <summary>设置 OracleCommand.set_XmlSaveProperties(OracleXmlSaveProperties value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ArrayBindCountGet">
            <summary>设置 OracleCommand.get_ArrayBindCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ArrayBindCountSetInt32">
            <summary>设置 OracleCommand.set_ArrayBindCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Bind(System.Data.IDbCommand)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BindByNameGet">
            <summary>设置 OracleCommand.get_BindByName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BindByNameSetBoolean">
            <summary>设置 OracleCommand.set_BindByName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Build8iXslCommandTextForXmlSaveStringBuilderString">
            <summary>设置 OracleCommand.Build8iXslCommandTextForXmlSave(StringBuilder strBldr, String xsltParams) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Build9iXslCommandTextForXmlGenStringBuilderBooleanString">
            <summary>设置 OracleCommand.Build9iXslCommandTextForXmlGen(StringBuilder strBldr, Boolean wantResult, String xsltParams) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BuildCommandText">
            <summary>设置 OracleCommand.BuildCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BuildXmlQueryCommandTextBooleanString">
            <summary>设置 OracleCommand.BuildXmlQueryCommandText(Boolean wantResult, String resultParamName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.BuildXmlSaveCommandText">
            <summary>设置 OracleCommand.BuildXmlSaveCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Cancel">
            <summary>设置 OracleCommand.Cancel() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CheckConStatus">
            <summary>设置 OracleCommand.CheckConStatus() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Clone">
            <summary>设置 OracleCommand.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTextGet">
            <summary>设置 OracleCommand.get_CommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTextSetString">
            <summary>设置 OracleCommand.set_CommandText(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTimeoutGet">
            <summary>设置 OracleCommand.get_CommandTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTimeoutSetInt32">
            <summary>设置 OracleCommand.set_CommandTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTypeGet">
            <summary>设置 OracleCommand.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CommandTypeSetCommandType">
            <summary>设置 OracleCommand.set_CommandType(CommandType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ConnectionGet">
            <summary>设置 OracleCommand.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ConnectionSetOracleConnection">
            <summary>设置 OracleCommand.set_Connection(OracleConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Constructor">
            <summary>设置 OracleCommand.OracleCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ConstructorString">
            <summary>设置 OracleCommand.OracleCommand(String cmdText) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ConstructorStringOracleConnection">
            <summary>设置 OracleCommand.OracleCommand(String cmdText, OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CreateDbParameter">
            <summary>设置 OracleCommand.CreateDbParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.CreateParameter">
            <summary>设置 OracleCommand.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DbConnectionGet">
            <summary>设置 OracleCommand.get_DbConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DbConnectionSetDbConnection">
            <summary>设置 OracleCommand.set_DbConnection(DbConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DbParameterCollectionGet">
            <summary>设置 OracleCommand.get_DbParameterCollection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DbTransactionGet">
            <summary>设置 OracleCommand.get_DbTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DbTransactionSetDbTransaction">
            <summary>设置 OracleCommand.set_DbTransaction(DbTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DesignTimeVisibleGet">
            <summary>设置 OracleCommand.get_DesignTimeVisible() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DesignTimeVisibleSetBoolean">
            <summary>设置 OracleCommand.set_DesignTimeVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.DisposeBoolean">
            <summary>设置 OracleCommand.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteDbDataReaderCommandBehavior">
            <summary>设置 OracleCommand.ExecuteDbDataReader(CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteNonQuery">
            <summary>设置 OracleCommand.ExecuteNonQuery() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteReader">
            <summary>设置 OracleCommand.ExecuteReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteReaderBooleanBooleanCommandBehavior">
            <summary>设置 OracleCommand.ExecuteReader(Boolean requery, Boolean fillRequest, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteReaderCommandBehavior">
            <summary>设置 OracleCommand.ExecuteReader(CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteScalar">
            <summary>设置 OracleCommand.ExecuteScalar() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteStream">
            <summary>设置 OracleCommand.ExecuteStream() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteToStreamStream">
            <summary>设置 OracleCommand.ExecuteToStream(Stream outputStream) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteXmlQueryBoolean">
            <summary>设置 OracleCommand.ExecuteXmlQuery(Boolean wantResult) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteXmlReader">
            <summary>设置 OracleCommand.ExecuteXmlReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ExecuteXmlSave">
            <summary>设置 OracleCommand.ExecuteXmlSave() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.FetchSizeGet">
            <summary>设置 OracleCommand.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.FetchSizeSetInt64">
            <summary>设置 OracleCommand.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.FreeAllCtx">
            <summary>设置 OracleCommand.FreeAllCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.FreeNonCachedOpoPrmCtx">
            <summary>设置 OracleCommand.FreeNonCachedOpoPrmCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.GetPlsqlOutput">
            <summary>设置 OracleCommand.GetPlsqlOutput() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.GetReturnValueParam">
            <summary>设置 OracleCommand.GetReturnValueParam() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.InitialLOBFetchSizeGet">
            <summary>设置 OracleCommand.get_InitialLOBFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.InitialLOBFetchSizeSetInt32">
            <summary>设置 OracleCommand.set_InitialLOBFetchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.InitialLONGFetchSizeGet">
            <summary>设置 OracleCommand.get_InitialLONGFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.InitialLONGFetchSizeSetInt32">
            <summary>设置 OracleCommand.set_InitialLONGFetchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Initialize">
            <summary>设置 OracleCommand.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.NotificationAutoEnlistGet">
            <summary>设置 OracleCommand.get_NotificationAutoEnlist() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.NotificationAutoEnlistSetBoolean">
            <summary>设置 OracleCommand.set_NotificationAutoEnlist(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.NotificationGet">
            <summary>设置 OracleCommand.get_Notification() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.NotificationSetOracleNotificationRequest">
            <summary>设置 OracleCommand.set_Notification(OracleNotificationRequest value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ParametersGet">
            <summary>设置 OracleCommand.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ParseCommandText">
            <summary>设置 OracleCommand.ParseCommandText() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.ParseXsltParamsStringStringArrayOutStringArrayOut">
            <summary>设置 OracleCommand.ParseXsltParams(String xsltParams, String[]&amp; xsltParamNames, String[]&amp; xsltParamValues) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.Prepare">
            <summary>设置 OracleCommand.Prepare() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.RowSizeGet">
            <summary>设置 OracleCommand.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.SetSqlValCtxBoolean">
            <summary>设置 OracleCommand.SetSqlValCtx(Boolean bXmlQuerySave) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.TimeoutObject">
            <summary>设置 OracleCommand.Timeout(Object state) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.TransactionGet">
            <summary>设置 OracleCommand.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.TransactionSetOracleTransaction">
            <summary>设置 OracleCommand.set_Transaction(OracleTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.UpdatedRowSourceGet">
            <summary>设置 OracleCommand.get_UpdatedRowSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.UpdatedRowSourceSetUpdateRowSource">
            <summary>设置 OracleCommand.set_UpdatedRowSource(UpdateRowSource value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlCommandTypeGet">
            <summary>设置 OracleCommand.get_XmlCommandType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlCommandTypeSetOracleXmlCommandType">
            <summary>设置 OracleCommand.set_XmlCommandType(OracleXmlCommandType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlHandleExceptionOracleException">
            <summary>设置 OracleCommand.XmlHandleException(OracleException e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlQueryPropertiesGet">
            <summary>设置 OracleCommand.get_XmlQueryProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlQueryPropertiesSetOracleXmlQueryProperties">
            <summary>设置 OracleCommand.set_XmlQueryProperties(OracleXmlQueryProperties value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlSavePropertiesGet">
            <summary>设置 OracleCommand.get_XmlSaveProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.XmlSavePropertiesSetOracleXmlSaveProperties">
            <summary>设置 OracleCommand.set_XmlSaveProperties(OracleXmlSaveProperties value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommand.isSelectStatementString">
            <summary>设置 OracleCommand.isSelectStatement(String text) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder">
            <summary>Oracle.DataAccess.Client.OracleCommandBuilder 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.#ctor(Oracle.DataAccess.Client.OracleCommandBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.ApplyParameterInfoDbParameterDataRowStatementTypeBoolean">
            <summary>设置 OracleCommandBuilder.ApplyParameterInfo(DbParameter parameter, DataRow row, StatementType statementType, Boolean whereClause) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CaseSensitiveGet">
            <summary>设置 OracleCommandBuilder.get_CaseSensitive() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CaseSensitiveSetBoolean">
            <summary>设置 OracleCommandBuilder.set_CaseSensitive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CatalogLocationGet">
            <summary>设置 OracleCommandBuilder.get_CatalogLocation() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CatalogLocationSetCatalogLocation">
            <summary>设置 OracleCommandBuilder.set_CatalogLocation(CatalogLocation value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CatalogSeparatorGet">
            <summary>设置 OracleCommandBuilder.get_CatalogSeparator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CatalogSeparatorSetString">
            <summary>设置 OracleCommandBuilder.set_CatalogSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CheckDataTableDataTable">
            <summary>设置 OracleCommandBuilder.CheckDataTable(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CheckPrimaryKey">
            <summary>设置 OracleCommandBuilder.CheckPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CheckPrimaryKeyDataRow">
            <summary>设置 OracleCommandBuilder.CheckPrimaryKey(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.CreateParamsStringStringOracleDbTypeDataRowVersionObject">
            <summary>设置 OracleCommandBuilder.CreateParams(String paramName, String colName, OracleDbType colType, DataRowVersion version, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.DataAdapterGet">
            <summary>设置 OracleCommandBuilder.get_DataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.DataAdapterSetOracleDataAdapter">
            <summary>设置 OracleCommandBuilder.set_DataAdapter(OracleDataAdapter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.DisposeBoolean">
            <summary>设置 OracleCommandBuilder.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.FindBaseColumnOrdinalDataColumn">
            <summary>设置 OracleCommandBuilder.FindBaseColumnOrdinal(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GenerateParameterNameStringInt32StringInt32">
            <summary>设置 OracleCommandBuilder.GenerateParameterName(String prefix, Int32 srcColumnLen, String srcColumn, Int32 paramId) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetBaseTableName">
            <summary>设置 OracleCommandBuilder.GetBaseTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetBaseTableNameBoolean">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetBaseTableNameDataTable">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetBaseTableNameDataTableBoolean">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(DataTable table, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnNameDataColumnBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(DataColumn col, Boolean baseColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnNameDataColumnBooleanBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(DataColumn col, Boolean baseColumn, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnNameInt32Boolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(Int32 col, Boolean baseColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnNameInt32BooleanBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(Int32 col, Boolean baseColumn, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnTypeDataColumn">
            <summary>设置 OracleCommandBuilder.GetColumnType(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetColumnTypeInt32">
            <summary>设置 OracleCommandBuilder.GetColumnType(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetDeleteCommand">
            <summary>设置 OracleCommandBuilder.GetDeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetDeleteCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetDeleteCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetInsertCommand">
            <summary>设置 OracleCommandBuilder.GetInsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetInsertCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetInsertCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetNumOfColumns">
            <summary>设置 OracleCommandBuilder.GetNumOfColumns() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetParameterNameInt32">
            <summary>设置 OracleCommandBuilder.GetParameterName(Int32 parameterOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetParameterNameString">
            <summary>设置 OracleCommandBuilder.GetParameterName(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetParameterPlaceholderInt32">
            <summary>设置 OracleCommandBuilder.GetParameterPlaceholder(Int32 parameterOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetSchemaName">
            <summary>设置 OracleCommandBuilder.GetSchemaName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetSchemaNameDataTable">
            <summary>设置 OracleCommandBuilder.GetSchemaName(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetSchemaTableDbCommand">
            <summary>设置 OracleCommandBuilder.GetSchemaTable(DbCommand srcCommand) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetUdtTypeNameDataColumn">
            <summary>设置 OracleCommandBuilder.GetUdtTypeName(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetUdtTypeNameInt32">
            <summary>设置 OracleCommandBuilder.GetUdtTypeName(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetUpdateCommand">
            <summary>设置 OracleCommandBuilder.GetUpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.GetUpdateCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetUpdateCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.InitializeCommandDbCommand">
            <summary>设置 OracleCommandBuilder.InitializeCommand(DbCommand command) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsColumnModifiedDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsColumnModified(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsNullableColInt32">
            <summary>设置 OracleCommandBuilder.IsNullableCol(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsOraLOBOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraLOB(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsOraLONGOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraLONG(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsOraUDTOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraUDT(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsOraXmlTypeOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraXmlType(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsRowCurrentValueNullDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsRowCurrentValueNull(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.IsRowOrigValueNullDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsRowOrigValueNull(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.ODTDesignModeGet">
            <summary>设置 OracleCommandBuilder.get_ODTDesignMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.ODTDesignModeSetBoolean">
            <summary>设置 OracleCommandBuilder.set_ODTDesignMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.QuoteIdentifierString">
            <summary>设置 OracleCommandBuilder.QuoteIdentifier(String unquotedIdentifier) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.QuotePrefixGet">
            <summary>设置 OracleCommandBuilder.get_QuotePrefix() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.QuotePrefixSetString">
            <summary>设置 OracleCommandBuilder.set_QuotePrefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.QuoteSuffixGet">
            <summary>设置 OracleCommandBuilder.get_QuoteSuffix() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.QuoteSuffixSetString">
            <summary>设置 OracleCommandBuilder.set_QuoteSuffix(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.RefreshSchema">
            <summary>设置 OracleCommandBuilder.RefreshSchema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.RowUpdatingObjectOracleRowUpdatingEventArgs">
            <summary>设置 OracleCommandBuilder.RowUpdating(Object src, OracleRowUpdatingEventArgs arg) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.SchemaSeparatorGet">
            <summary>设置 OracleCommandBuilder.get_SchemaSeparator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.SchemaSeparatorSetString">
            <summary>设置 OracleCommandBuilder.set_SchemaSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.SetParamStringOracleDbTypeDataRowVersionObjectOracleParameter">
            <summary>设置 OracleCommandBuilder.SetParam(String colName, OracleDbType colType, DataRowVersion version, Object value, OracleParameter param) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.SetRowUpdatingHandlerDbDataAdapter">
            <summary>设置 OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter adapter) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.AllInstances.UnquoteIdentifierString">
            <summary>设置 OracleCommandBuilder.UnquoteIdentifier(String quotedIdentifier) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.ApplyParameterInfoDbParameterDataRowStatementTypeBoolean">
            <summary>设置 OracleCommandBuilder.ApplyParameterInfo(DbParameter parameter, DataRow row, StatementType statementType, Boolean whereClause) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CaseSensitiveGet">
            <summary>设置 OracleCommandBuilder.get_CaseSensitive() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CaseSensitiveSetBoolean">
            <summary>设置 OracleCommandBuilder.set_CaseSensitive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CatalogLocationGet">
            <summary>设置 OracleCommandBuilder.get_CatalogLocation() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CatalogLocationSetCatalogLocation">
            <summary>设置 OracleCommandBuilder.set_CatalogLocation(CatalogLocation value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CatalogSeparatorGet">
            <summary>设置 OracleCommandBuilder.get_CatalogSeparator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CatalogSeparatorSetString">
            <summary>设置 OracleCommandBuilder.set_CatalogSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CheckDataTableDataTable">
            <summary>设置 OracleCommandBuilder.CheckDataTable(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CheckPrimaryKey">
            <summary>设置 OracleCommandBuilder.CheckPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CheckPrimaryKeyDataRow">
            <summary>设置 OracleCommandBuilder.CheckPrimaryKey(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.Constructor">
            <summary>设置 OracleCommandBuilder.OracleCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.ConstructorOracleDataAdapter">
            <summary>设置 OracleCommandBuilder.OracleCommandBuilder(OracleDataAdapter da) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.CreateParamsStringStringOracleDbTypeDataRowVersionObject">
            <summary>设置 OracleCommandBuilder.CreateParams(String paramName, String colName, OracleDbType colType, DataRowVersion version, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.DataAdapterGet">
            <summary>设置 OracleCommandBuilder.get_DataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.DataAdapterSetOracleDataAdapter">
            <summary>设置 OracleCommandBuilder.set_DataAdapter(OracleDataAdapter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.DeriveParametersOracleCommand">
            <summary>设置 OracleCommandBuilder.DeriveParameters(OracleCommand command) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.DisposeBoolean">
            <summary>设置 OracleCommandBuilder.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.FindBaseColumnOrdinalDataColumn">
            <summary>设置 OracleCommandBuilder.FindBaseColumnOrdinal(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GenerateParameterNameStringInt32StringInt32">
            <summary>设置 OracleCommandBuilder.GenerateParameterName(String prefix, Int32 srcColumnLen, String srcColumn, Int32 paramId) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetBaseTableName">
            <summary>设置 OracleCommandBuilder.GetBaseTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetBaseTableNameBoolean">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetBaseTableNameDataTable">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetBaseTableNameDataTableBoolean">
            <summary>设置 OracleCommandBuilder.GetBaseTableName(DataTable table, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnNameDataColumnBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(DataColumn col, Boolean baseColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnNameDataColumnBooleanBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(DataColumn col, Boolean baseColumn, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnNameInt32Boolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(Int32 col, Boolean baseColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnNameInt32BooleanBoolean">
            <summary>设置 OracleCommandBuilder.GetColumnName(Int32 col, Boolean baseColumn, Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnTypeDataColumn">
            <summary>设置 OracleCommandBuilder.GetColumnType(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetColumnTypeInt32">
            <summary>设置 OracleCommandBuilder.GetColumnType(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetDeleteCommand">
            <summary>设置 OracleCommandBuilder.GetDeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetDeleteCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetDeleteCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetInsertCommand">
            <summary>设置 OracleCommandBuilder.GetInsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetInsertCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetInsertCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetNumOfColumns">
            <summary>设置 OracleCommandBuilder.GetNumOfColumns() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetParameterNameInt32">
            <summary>设置 OracleCommandBuilder.GetParameterName(Int32 parameterOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetParameterNameString">
            <summary>设置 OracleCommandBuilder.GetParameterName(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetParameterPlaceholderInt32">
            <summary>设置 OracleCommandBuilder.GetParameterPlaceholder(Int32 parameterOrdinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetSchemaName">
            <summary>设置 OracleCommandBuilder.GetSchemaName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetSchemaNameDataTable">
            <summary>设置 OracleCommandBuilder.GetSchemaName(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetSchemaTableDbCommand">
            <summary>设置 OracleCommandBuilder.GetSchemaTable(DbCommand srcCommand) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetUdtTypeNameDataColumn">
            <summary>设置 OracleCommandBuilder.GetUdtTypeName(DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetUdtTypeNameInt32">
            <summary>设置 OracleCommandBuilder.GetUdtTypeName(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetUpdateCommand">
            <summary>设置 OracleCommandBuilder.GetUpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.GetUpdateCommandDataRow">
            <summary>设置 OracleCommandBuilder.GetUpdateCommand(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.InitializeCommandDbCommand">
            <summary>设置 OracleCommandBuilder.InitializeCommand(DbCommand command) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsColumnModifiedDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsColumnModified(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsNullableColInt32">
            <summary>设置 OracleCommandBuilder.IsNullableCol(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsOraLOBOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraLOB(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsOraLONGOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraLONG(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsOraUDTOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraUDT(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsOraXmlTypeOracleDbType">
            <summary>设置 OracleCommandBuilder.IsOraXmlType(OracleDbType colType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsRowCurrentValueNullDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsRowCurrentValueNull(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.IsRowOrigValueNullDataRowDataColumn">
            <summary>设置 OracleCommandBuilder.IsRowOrigValueNull(DataRow row, DataColumn col) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.ODTDesignModeGet">
            <summary>设置 OracleCommandBuilder.get_ODTDesignMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.ODTDesignModeSetBoolean">
            <summary>设置 OracleCommandBuilder.set_ODTDesignMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.QuoteIdentifierString">
            <summary>设置 OracleCommandBuilder.QuoteIdentifier(String unquotedIdentifier) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.QuotePrefixGet">
            <summary>设置 OracleCommandBuilder.get_QuotePrefix() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.QuotePrefixSetString">
            <summary>设置 OracleCommandBuilder.set_QuotePrefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.QuoteSuffixGet">
            <summary>设置 OracleCommandBuilder.get_QuoteSuffix() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.QuoteSuffixSetString">
            <summary>设置 OracleCommandBuilder.set_QuoteSuffix(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.RefreshSchema">
            <summary>设置 OracleCommandBuilder.RefreshSchema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.RowUpdatingObjectOracleRowUpdatingEventArgs">
            <summary>设置 OracleCommandBuilder.RowUpdating(Object src, OracleRowUpdatingEventArgs arg) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.SchemaSeparatorGet">
            <summary>设置 OracleCommandBuilder.get_SchemaSeparator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.SchemaSeparatorSetString">
            <summary>设置 OracleCommandBuilder.set_SchemaSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.SetParamStringOracleDbTypeDataRowVersionObjectOracleParameter">
            <summary>设置 OracleCommandBuilder.SetParam(String colName, OracleDbType colType, DataRowVersion version, Object value, OracleParameter param) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.SetRowUpdatingHandlerDbDataAdapter">
            <summary>设置 OracleCommandBuilder.SetRowUpdatingHandler(DbDataAdapter adapter) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.StaticConstructor">
            <summary>设置 OracleCommandBuilder.OracleCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleCommandBuilder.UnquoteIdentifierString">
            <summary>设置 OracleCommandBuilder.UnquoteIdentifier(String quotedIdentifier) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleConnection">
            <summary>Oracle.DataAccess.Client.OracleConnection 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.#ctor(Oracle.DataAccess.Client.OracleConnection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ActionNameSetString">
            <summary>设置 OracleConnection.set_ActionName(String value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ActionNameSetString">
            <summary>设置 OracleConnection.set_ActionName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.BeginDbTransactionIsolationLevel">
            <summary>设置 OracleConnection.BeginDbTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.BeginTransaction">
            <summary>设置 OracleConnection.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.BeginTransactionIsolationLevel">
            <summary>设置 OracleConnection.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ChangeDatabaseString">
            <summary>设置 OracleConnection.ChangeDatabase(String databaseName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ClientIdSetString">
            <summary>设置 OracleConnection.set_ClientId(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.Clone">
            <summary>设置 OracleConnection.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.Close">
            <summary>设置 OracleConnection.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ComparenormalizedDBVersionsStringString">
            <summary>设置 OracleConnection.ComparenormalizedDBVersions(String normalizedDBVersion, String xmlnormalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ConnectionStringGet">
            <summary>设置 OracleConnection.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ConnectionStringSetString">
            <summary>设置 OracleConnection.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ConnectionTimeoutGet">
            <summary>设置 OracleConnection.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ConstructConString">
            <summary>设置 OracleConnection.ConstructConString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.CreateCommand">
            <summary>设置 OracleConnection.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.CreateDbCommand">
            <summary>设置 OracleConnection.CreateDbCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.DataSourceGet">
            <summary>设置 OracleConnection.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.DatabaseGet">
            <summary>设置 OracleConnection.get_Database() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.DisposeBoolean">
            <summary>设置 OracleConnection.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.EndTransaction">
            <summary>设置 OracleConnection.EndTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.EnlistDistributedTransactionITransaction">
            <summary>设置 OracleConnection.EnlistDistributedTransaction(ITransaction itrans) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.EnlistTransactionTransaction">
            <summary>设置 OracleConnection.EnlistTransaction(Transaction transaction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.FailoverAddOracleFailoverEventHandler">
            <summary>设置 OracleConnection.add_Failover(OracleFailoverEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.FailoverRemoveOracleFailoverEventHandler">
            <summary>设置 OracleConnection.remove_Failover(OracleFailoverEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.FlushCache">
            <summary>设置 OracleConnection.FlushCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetCustomUdtString">
            <summary>设置 OracleConnection.GetCustomUdt(String udtName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetPasswordLessStringString">
            <summary>设置 OracleConnection.GetPasswordLessString(String ConString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetSchema">
            <summary>设置 OracleConnection.GetSchema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetSchemaString">
            <summary>设置 OracleConnection.GetSchema(String collectionName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetSchemaStringStringArray">
            <summary>设置 OracleConnection.GetSchema(String collectionName, String[] restrictionsArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetSessionInfo">
            <summary>设置 OracleConnection.GetSessionInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetSessionInfoOracleGlobalization">
            <summary>设置 OracleConnection.GetSessionInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.GetTransaction">
            <summary>设置 OracleConnection.GetTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.InfoMessageAddOracleInfoMessageEventHandler">
            <summary>设置 OracleConnection.add_InfoMessage(OracleInfoMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.InfoMessageRemoveOracleInfoMessageEventHandler">
            <summary>设置 OracleConnection.remove_InfoMessage(OracleInfoMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.Init">
            <summary>设置 OracleConnection.Init() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.IsDBVer10gR2OrHigherGet">
            <summary>设置 OracleConnection.get_IsDBVer10gR2OrHigher() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.IsDBVer11gR1OrHigherGet">
            <summary>设置 OracleConnection.get_IsDBVer11gR1OrHigher() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.IsInMtsTxn">
            <summary>设置 OracleConnection.IsInMtsTxn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.LoadMetaDataXmlDS">
            <summary>设置 OracleConnection.LoadMetaDataXmlDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ModuleNameSetString">
            <summary>设置 OracleConnection.set_ModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.NormalizeDBVersionString">
            <summary>设置 OracleConnection.NormalizeDBVersion(String str) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OnFailoverCallback_fnIntPtrIntPtrIntPtrInt32Int32">
            <summary>设置 OracleConnection.OnFailoverCallback_fn(IntPtr svchp, IntPtr envhp, IntPtr fo_ctx, Int32 fo_type, Int32 fo_event) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OnFailoverOracleFailoverEventArgs">
            <summary>设置 OracleConnection.OnFailover(OracleFailoverEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OnInfoMessageObjectOracleInfoMessageEventArgs">
            <summary>设置 OracleConnection.OnInfoMessage(Object obj, OracleInfoMessageEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OnStateChangeStateChangeEventArgs">
            <summary>设置 OracleConnection.OnStateChange(StateChangeEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.Open">
            <summary>设置 OracleConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OpenExtprocConnection">
            <summary>设置 OracleConnection.OpenExtprocConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.OpenWithNewPasswordString">
            <summary>设置 OracleConnection.OpenWithNewPassword(String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ParseConnectionString">
            <summary>设置 OracleConnection.ParseConnectionString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.PopulateSupportedDataRowsDataTableStringString">
            <summary>设置 OracleConnection.PopulateSupportedDataRows(DataTable dt, String collectionName, String normalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.PurgeStatementCache">
            <summary>设置 OracleConnection.PurgeStatementCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.RaiseStateChangeConnectionStateConnectionState">
            <summary>设置 OracleConnection.RaiseStateChange(ConnectionState originalState, ConnectionState currentState) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ResetAttribsToDefaults">
            <summary>设置 OracleConnection.ResetAttribsToDefaults() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.RestoreConStrVals">
            <summary>设置 OracleConnection.RestoreConStrVals() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ServerVersionGet">
            <summary>设置 OracleConnection.get_ServerVersion() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.SetSessionInfoOracleGlobalization">
            <summary>设置 OracleConnection.SetSessionInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.StateChangeAddStateChangeEventHandler">
            <summary>设置 OracleConnection.add_StateChange(StateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.StateChangeRemoveStateChangeEventHandler">
            <summary>设置 OracleConnection.remove_StateChange(StateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.StateGet">
            <summary>设置 OracleConnection.get_State() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.SupportedInCurrentVersionDataRowString">
            <summary>设置 OracleConnection.SupportedInCurrentVersion(DataRow row, String normalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.TransactionCompleteObjectTransactionEventArgs">
            <summary>设置 OracleConnection.TransactionComplete(Object sender, TransactionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.TxnHndAllocatedGet">
            <summary>设置 OracleConnection.get_TxnHndAllocated() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.TxnHndAllocatedSetInt32">
            <summary>设置 OracleConnection.set_TxnHndAllocated(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.AllInstances.ValidateValues">
            <summary>设置 OracleConnection.ValidateValues() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.BeginDbTransactionIsolationLevel">
            <summary>设置 OracleConnection.BeginDbTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.BeginTransaction">
            <summary>设置 OracleConnection.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.BeginTransactionIsolationLevel">
            <summary>设置 OracleConnection.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Bind(System.Data.IDbConnection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ChangeDatabaseString">
            <summary>设置 OracleConnection.ChangeDatabase(String databaseName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ClearAllPools">
            <summary>设置 OracleConnection.ClearAllPools() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ClearPoolOracleConnection">
            <summary>设置 OracleConnection.ClearPool(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ClientIdSetString">
            <summary>设置 OracleConnection.set_ClientId(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Clone">
            <summary>设置 OracleConnection.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Close">
            <summary>设置 OracleConnection.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.CloseExtprocConnection">
            <summary>设置 OracleConnection.CloseExtprocConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ComparenormalizedDBVersionsStringString">
            <summary>设置 OracleConnection.ComparenormalizedDBVersions(String normalizedDBVersion, String xmlnormalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ConnectionStringGet">
            <summary>设置 OracleConnection.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ConnectionStringSetString">
            <summary>设置 OracleConnection.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ConnectionTimeoutGet">
            <summary>设置 OracleConnection.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ConstructConString">
            <summary>设置 OracleConnection.ConstructConString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Constructor">
            <summary>设置 OracleConnection.OracleConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ConstructorString">
            <summary>设置 OracleConnection.OracleConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.CreateCommand">
            <summary>设置 OracleConnection.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.CreateDbCommand">
            <summary>设置 OracleConnection.CreateDbCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.CreateExtprocTDS">
            <summary>设置 OracleConnection.CreateExtprocTDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.DataSourceGet">
            <summary>设置 OracleConnection.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.DatabaseGet">
            <summary>设置 OracleConnection.get_Database() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.DisposeBoolean">
            <summary>设置 OracleConnection.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.EndTransaction">
            <summary>设置 OracleConnection.EndTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.EnlistDistributedTransactionITransaction">
            <summary>设置 OracleConnection.EnlistDistributedTransaction(ITransaction itrans) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.EnlistTransactionTransaction">
            <summary>设置 OracleConnection.EnlistTransaction(Transaction transaction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ExternalContextConnectionGet">
            <summary>设置 OracleConnection.get_ExternalContextConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ExternalContextConnectionSetOracleConnection">
            <summary>设置 OracleConnection.set_ExternalContextConnection(OracleConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.FailoverAddOracleFailoverEventHandler">
            <summary>设置 OracleConnection.add_Failover(OracleFailoverEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.FailoverRemoveOracleFailoverEventHandler">
            <summary>设置 OracleConnection.remove_Failover(OracleFailoverEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.FlushCache">
            <summary>设置 OracleConnection.FlushCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetCustomUdtString">
            <summary>设置 OracleConnection.GetCustomUdt(String udtName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetInternalConnection">
            <summary>设置 OracleConnection.GetInternalConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetOciExtProcContext">
            <summary>设置 OracleConnection.GetOciExtProcContext() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetPasswordLessStringString">
            <summary>设置 OracleConnection.GetPasswordLessString(String ConString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetSchema">
            <summary>设置 OracleConnection.GetSchema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetSchemaString">
            <summary>设置 OracleConnection.GetSchema(String collectionName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetSchemaStringStringArray">
            <summary>设置 OracleConnection.GetSchema(String collectionName, String[] restrictionsArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetSessionInfo">
            <summary>设置 OracleConnection.GetSessionInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetSessionInfoOracleGlobalization">
            <summary>设置 OracleConnection.GetSessionInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.GetTransaction">
            <summary>设置 OracleConnection.GetTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.InfoMessageAddOracleInfoMessageEventHandler">
            <summary>设置 OracleConnection.add_InfoMessage(OracleInfoMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.InfoMessageRemoveOracleInfoMessageEventHandler">
            <summary>设置 OracleConnection.remove_InfoMessage(OracleInfoMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Init">
            <summary>设置 OracleConnection.Init() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.InternalContextConnectionGet">
            <summary>设置 OracleConnection.get_InternalContextConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.InternalContextConnectionSetOracleConnection">
            <summary>设置 OracleConnection.set_InternalContextConnection(OracleConnection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.IsAvailableGet">
            <summary>设置 OracleConnection.get_IsAvailable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.IsCtxConnAvailableGet">
            <summary>设置 OracleConnection.get_IsCtxConnAvailable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.IsDBVer10gR2OrHigherGet">
            <summary>设置 OracleConnection.get_IsDBVer10gR2OrHigher() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.IsDBVer11gR1OrHigherGet">
            <summary>设置 OracleConnection.get_IsDBVer11gR1OrHigher() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.IsInMtsTxn">
            <summary>设置 OracleConnection.IsInMtsTxn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.LoadMetaDataXmlDS">
            <summary>设置 OracleConnection.LoadMetaDataXmlDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ModuleNameSetString">
            <summary>设置 OracleConnection.set_ModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.NormalizeDBVersionString">
            <summary>设置 OracleConnection.NormalizeDBVersion(String str) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OnFailoverCallback_fnIntPtrIntPtrIntPtrInt32Int32">
            <summary>设置 OracleConnection.OnFailoverCallback_fn(IntPtr svchp, IntPtr envhp, IntPtr fo_ctx, Int32 fo_type, Int32 fo_event) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OnFailoverOracleFailoverEventArgs">
            <summary>设置 OracleConnection.OnFailover(OracleFailoverEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OnInfoMessageObjectOracleInfoMessageEventArgs">
            <summary>设置 OracleConnection.OnInfoMessage(Object obj, OracleInfoMessageEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OnStateChangeStateChangeEventArgs">
            <summary>设置 OracleConnection.OnStateChange(StateChangeEventArgs eventArgs) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.Open">
            <summary>设置 OracleConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OpenExtprocConnection">
            <summary>设置 OracleConnection.OpenExtprocConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.OpenWithNewPasswordString">
            <summary>设置 OracleConnection.OpenWithNewPassword(String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ParseConnectionString">
            <summary>设置 OracleConnection.ParseConnectionString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.PopulateSupportedDataRowsDataTableStringString">
            <summary>设置 OracleConnection.PopulateSupportedDataRows(DataTable dt, String collectionName, String normalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.PurgeStatementCache">
            <summary>设置 OracleConnection.PurgeStatementCache() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.RaiseStateChangeConnectionStateConnectionState">
            <summary>设置 OracleConnection.RaiseStateChange(ConnectionState originalState, ConnectionState currentState) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ResetAttribsToDefaults">
            <summary>设置 OracleConnection.ResetAttribsToDefaults() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.RestoreConStrVals">
            <summary>设置 OracleConnection.RestoreConStrVals() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ServerVersionGet">
            <summary>设置 OracleConnection.get_ServerVersion() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.SetExtProcContextIntPtr">
            <summary>设置 OracleConnection.SetExtProcContext(IntPtr extProcContext) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.SetExtProcFlag">
            <summary>设置 OracleConnection.SetExtProcFlag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.SetOdtConnectionBoolean">
            <summary>设置 OracleConnection.SetOdtConnection(Boolean bIsOdtConnection) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.SetSessionInfoOracleGlobalization">
            <summary>设置 OracleConnection.SetSessionInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.StateChangeAddStateChangeEventHandler">
            <summary>设置 OracleConnection.add_StateChange(StateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.StateChangeRemoveStateChangeEventHandler">
            <summary>设置 OracleConnection.remove_StateChange(StateChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.StateGet">
            <summary>设置 OracleConnection.get_State() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.StaticConstructor">
            <summary>设置 OracleConnection.OracleConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.SupportedInCurrentVersionDataRowString">
            <summary>设置 OracleConnection.SupportedInCurrentVersion(DataRow row, String normalizedDBVersion) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.TransactionCompleteObjectTransactionEventArgs">
            <summary>设置 OracleConnection.TransactionComplete(Object sender, TransactionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.TxnHndAllocatedGet">
            <summary>设置 OracleConnection.get_TxnHndAllocated() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.TxnHndAllocatedSetInt32">
            <summary>设置 OracleConnection.set_TxnHndAllocated(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ValidateAdminValuesOracleConnection">
            <summary>设置 OracleConnection.ValidateAdminValues(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnection.ValidateValues">
            <summary>设置 OracleConnection.ValidateValues() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder">
            <summary>Oracle.DataAccess.Client.OracleConnectionStringBuilder 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.#ctor(Oracle.DataAccess.Client.OracleConnectionStringBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.Clear">
            <summary>设置 OracleConnectionStringBuilder.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ConnectionLifeTimeGet">
            <summary>设置 OracleConnectionStringBuilder.get_ConnectionLifeTime() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ConnectionLifeTimeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_ConnectionLifeTime(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ConnectionTimeoutGet">
            <summary>设置 OracleConnectionStringBuilder.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ConnectionTimeoutSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_ConnectionTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ContainsKeyString">
            <summary>设置 OracleConnectionStringBuilder.ContainsKey(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ContextConnectionGet">
            <summary>设置 OracleConnectionStringBuilder.get_ContextConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ContextConnectionSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_ContextConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DBAPrivilegeGet">
            <summary>设置 OracleConnectionStringBuilder.get_DBAPrivilege() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DBAPrivilegeSetString">
            <summary>设置 OracleConnectionStringBuilder.set_DBAPrivilege(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DataSourceGet">
            <summary>设置 OracleConnectionStringBuilder.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DataSourceSetString">
            <summary>设置 OracleConnectionStringBuilder.set_DataSource(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DecrPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_DecrPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.DecrPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_DecrPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.EnlistGet">
            <summary>设置 OracleConnectionStringBuilder.get_Enlist() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.EnlistSetString">
            <summary>设置 OracleConnectionStringBuilder.set_Enlist(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.GetPropertiesHashtable">
            <summary>设置 OracleConnectionStringBuilder.GetProperties(Hashtable propertyDescriptors) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.HAEventsGet">
            <summary>设置 OracleConnectionStringBuilder.get_HAEvents() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.HAEventsSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_HAEvents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.IncrPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_IncrPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.IncrPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_IncrPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.Initialize">
            <summary>设置 OracleConnectionStringBuilder.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.IntializeStaticTables">
            <summary>设置 OracleConnectionStringBuilder.IntializeStaticTables() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.IsFixedSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ItemGetString">
            <summary>设置 OracleConnectionStringBuilder.get_Item(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ItemSetStringObject">
            <summary>设置 OracleConnectionStringBuilder.set_Item(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.KeysGet">
            <summary>设置 OracleConnectionStringBuilder.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.LoadBalancingGet">
            <summary>设置 OracleConnectionStringBuilder.get_LoadBalancing() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.LoadBalancingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_LoadBalancing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MaxPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_MaxPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MaxPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_MaxPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MetadataPoolingGet">
            <summary>设置 OracleConnectionStringBuilder.get_MetadataPooling() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MetadataPoolingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_MetadataPooling(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MinPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_MinPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.MinPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_MinPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PasswordGet">
            <summary>设置 OracleConnectionStringBuilder.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PasswordSetString">
            <summary>设置 OracleConnectionStringBuilder.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PersistSecurityInfoGet">
            <summary>设置 OracleConnectionStringBuilder.get_PersistSecurityInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PersistSecurityInfoSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_PersistSecurityInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PoolingGet">
            <summary>设置 OracleConnectionStringBuilder.get_Pooling() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PoolingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_Pooling(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PromotableTransactionGet">
            <summary>设置 OracleConnectionStringBuilder.get_PromotableTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.PromotableTransactionSetString">
            <summary>设置 OracleConnectionStringBuilder.set_PromotableTransaction(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ProxyPasswordGet">
            <summary>设置 OracleConnectionStringBuilder.get_ProxyPassword() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ProxyPasswordSetString">
            <summary>设置 OracleConnectionStringBuilder.set_ProxyPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ProxyUserIdGet">
            <summary>设置 OracleConnectionStringBuilder.get_ProxyUserId() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ProxyUserIdSetString">
            <summary>设置 OracleConnectionStringBuilder.set_ProxyUserId(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.RemoveString">
            <summary>设置 OracleConnectionStringBuilder.Remove(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ResetValues">
            <summary>设置 OracleConnectionStringBuilder.ResetValues() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.SetPropertyStringObject">
            <summary>设置 OracleConnectionStringBuilder.SetProperty(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.SetValueToBaseAndListStringObject">
            <summary>设置 OracleConnectionStringBuilder.SetValueToBaseAndList(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.StatementCachePurgeGet">
            <summary>设置 OracleConnectionStringBuilder.get_StatementCachePurge() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.StatementCachePurgeSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_StatementCachePurge(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.StatementCacheSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_StatementCacheSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.StatementCacheSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_StatementCacheSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.TryGetValueStringObjectOut">
            <summary>设置 OracleConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.UserIDGet">
            <summary>设置 OracleConnectionStringBuilder.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.UserIDSetString">
            <summary>设置 OracleConnectionStringBuilder.set_UserID(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ValidateConnectionGet">
            <summary>设置 OracleConnectionStringBuilder.get_ValidateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ValidateConnectionSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_ValidateConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.AllInstances.ValuesGet">
            <summary>设置 OracleConnectionStringBuilder.get_Values() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Clear">
            <summary>设置 OracleConnectionStringBuilder.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ConnectionLifeTimeGet">
            <summary>设置 OracleConnectionStringBuilder.get_ConnectionLifeTime() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ConnectionLifeTimeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_ConnectionLifeTime(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ConnectionTimeoutGet">
            <summary>设置 OracleConnectionStringBuilder.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ConnectionTimeoutSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_ConnectionTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Constructor">
            <summary>设置 OracleConnectionStringBuilder.OracleConnectionStringBuilder() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ConstructorString">
            <summary>设置 OracleConnectionStringBuilder.OracleConnectionStringBuilder(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ContainsKeyString">
            <summary>设置 OracleConnectionStringBuilder.ContainsKey(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ContextConnectionGet">
            <summary>设置 OracleConnectionStringBuilder.get_ContextConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ContextConnectionSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_ContextConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DBAPrivilegeGet">
            <summary>设置 OracleConnectionStringBuilder.get_DBAPrivilege() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DBAPrivilegeSetString">
            <summary>设置 OracleConnectionStringBuilder.set_DBAPrivilege(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DataSourceGet">
            <summary>设置 OracleConnectionStringBuilder.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DataSourceSetString">
            <summary>设置 OracleConnectionStringBuilder.set_DataSource(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DecrPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_DecrPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.DecrPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_DecrPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.EnlistGet">
            <summary>设置 OracleConnectionStringBuilder.get_Enlist() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.EnlistSetString">
            <summary>设置 OracleConnectionStringBuilder.set_Enlist(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.GetPropertiesHashtable">
            <summary>设置 OracleConnectionStringBuilder.GetProperties(Hashtable propertyDescriptors) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.HAEventsGet">
            <summary>设置 OracleConnectionStringBuilder.get_HAEvents() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.HAEventsSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_HAEvents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.IncrPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_IncrPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.IncrPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_IncrPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.Initialize">
            <summary>设置 OracleConnectionStringBuilder.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.IntializeStaticTables">
            <summary>设置 OracleConnectionStringBuilder.IntializeStaticTables() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.IsFixedSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ItemGetString">
            <summary>设置 OracleConnectionStringBuilder.get_Item(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ItemSetStringObject">
            <summary>设置 OracleConnectionStringBuilder.set_Item(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.KeysGet">
            <summary>设置 OracleConnectionStringBuilder.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.LoadBalancingGet">
            <summary>设置 OracleConnectionStringBuilder.get_LoadBalancing() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.LoadBalancingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_LoadBalancing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MaxPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_MaxPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MaxPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_MaxPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MetadataPoolingGet">
            <summary>设置 OracleConnectionStringBuilder.get_MetadataPooling() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MetadataPoolingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_MetadataPooling(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MinPoolSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_MinPoolSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.MinPoolSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_MinPoolSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PasswordGet">
            <summary>设置 OracleConnectionStringBuilder.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PasswordSetString">
            <summary>设置 OracleConnectionStringBuilder.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PersistSecurityInfoGet">
            <summary>设置 OracleConnectionStringBuilder.get_PersistSecurityInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PersistSecurityInfoSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_PersistSecurityInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PoolingGet">
            <summary>设置 OracleConnectionStringBuilder.get_Pooling() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PoolingSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_Pooling(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PromotableTransactionGet">
            <summary>设置 OracleConnectionStringBuilder.get_PromotableTransaction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.PromotableTransactionSetString">
            <summary>设置 OracleConnectionStringBuilder.set_PromotableTransaction(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ProxyPasswordGet">
            <summary>设置 OracleConnectionStringBuilder.get_ProxyPassword() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ProxyPasswordSetString">
            <summary>设置 OracleConnectionStringBuilder.set_ProxyPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ProxyUserIdGet">
            <summary>设置 OracleConnectionStringBuilder.get_ProxyUserId() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ProxyUserIdSetString">
            <summary>设置 OracleConnectionStringBuilder.set_ProxyUserId(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.RemoveString">
            <summary>设置 OracleConnectionStringBuilder.Remove(String keyword) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ResetValues">
            <summary>设置 OracleConnectionStringBuilder.ResetValues() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.SetPropertyStringObject">
            <summary>设置 OracleConnectionStringBuilder.SetProperty(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.SetValueToBaseAndListStringObject">
            <summary>设置 OracleConnectionStringBuilder.SetValueToBaseAndList(String keyword, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.StatementCachePurgeGet">
            <summary>设置 OracleConnectionStringBuilder.get_StatementCachePurge() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.StatementCachePurgeSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_StatementCachePurge(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.StatementCacheSizeGet">
            <summary>设置 OracleConnectionStringBuilder.get_StatementCacheSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.StatementCacheSizeSetInt32">
            <summary>设置 OracleConnectionStringBuilder.set_StatementCacheSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.TryGetValueStringObjectOut">
            <summary>设置 OracleConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.UserIDGet">
            <summary>设置 OracleConnectionStringBuilder.get_UserID() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.UserIDSetString">
            <summary>设置 OracleConnectionStringBuilder.set_UserID(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ValidateConnectionGet">
            <summary>设置 OracleConnectionStringBuilder.get_ValidateConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ValidateConnectionSetBoolean">
            <summary>设置 OracleConnectionStringBuilder.set_ValidateConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleConnectionStringBuilder.ValuesGet">
            <summary>设置 OracleConnectionStringBuilder.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter">
            <summary>Oracle.DataAccess.Client.OracleDataAdapter 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.#ctor(Oracle.DataAccess.Client.OracleDataAdapter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AddToBatchIDbCommand">
            <summary>设置 OracleDataAdapter.AddToBatch(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.AddToBatchIDbCommand">
            <summary>设置 OracleDataAdapter.AddToBatch(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.ClearBatch">
            <summary>设置 OracleDataAdapter.ClearBatch() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.CreateRowUpdatedEventDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleDataAdapter.CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.CreateRowUpdatingEventDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleDataAdapter.CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.DeleteCommandGet">
            <summary>设置 OracleDataAdapter.get_DeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.DeleteCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_DeleteCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.DeleteCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_DeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.DeleteCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.DisposeBoolean">
            <summary>设置 OracleDataAdapter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.ExecuteBatch">
            <summary>设置 OracleDataAdapter.ExecuteBatch() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataSetInt32Int32StringIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataSetInt32Int32StringOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataSetOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataSetStringIDataReaderInt32Int32">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, String srcTable, IDataReader dataReader, Int32 startRecord, Int32 maxRecords) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataSetStringOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, String srcTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataTableArrayInt32Int32IDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataTable[] dataTables, Int32 startRecord, Int32 maxRecords, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataTableIDataReader">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, IDataReader dataReader) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataTableIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillDataTableOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillSchemaDataSetSchemaTypeIDbCommandStringCommandBehavior">
            <summary>设置 OracleDataAdapter.FillSchema(DataSet dataSet, SchemaType schemaType, IDbCommand command, String srcTable, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.FillSchemaDataTableSchemaTypeIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.FillSchema(DataTable dataTable, SchemaType schemaType, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.GetBatchedParameterInt32Int32">
            <summary>设置 OracleDataAdapter.GetBatchedParameter(Int32 commandIdentifier, Int32 parameterIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.GetBatchedRecordsAffectedInt32Int32OutExceptionOut">
            <summary>设置 OracleDataAdapter.GetBatchedRecordsAffected(Int32 commandIdentifier, Int32&amp; recordsAffected, Exception&amp; error) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.InitializeBatching">
            <summary>设置 OracleDataAdapter.InitializeBatching() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.InsertCommandGet">
            <summary>设置 OracleDataAdapter.get_InsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.InsertCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_InsertCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.InsertCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_InsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.InsertCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.OnRowUpdatedRowUpdatedEventArgs">
            <summary>设置 OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.OnRowUpdatingRowUpdatingEventArgs">
            <summary>设置 OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RequeryGet">
            <summary>设置 OracleDataAdapter.get_Requery() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RequerySetBoolean">
            <summary>设置 OracleDataAdapter.set_Requery(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RowUpdatedAddOracleRowUpdatedEventHandler">
            <summary>设置 OracleDataAdapter.add_RowUpdated(OracleRowUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RowUpdatedRemoveOracleRowUpdatedEventHandler">
            <summary>设置 OracleDataAdapter.remove_RowUpdated(OracleRowUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RowUpdatingAddOracleRowUpdatingEventHandler">
            <summary>设置 OracleDataAdapter.add_RowUpdating(OracleRowUpdatingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.RowUpdatingRemoveOracleRowUpdatingEventHandler">
            <summary>设置 OracleDataAdapter.remove_RowUpdating(OracleRowUpdatingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.SafeMappingGet">
            <summary>设置 OracleDataAdapter.get_SafeMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.SelectCommandGet">
            <summary>设置 OracleDataAdapter.get_SelectCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.SelectCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_SelectCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.SelectCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_SelectCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.SelectCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.TerminateBatching">
            <summary>设置 OracleDataAdapter.TerminateBatching() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateBatchSizeGet">
            <summary>设置 OracleDataAdapter.get_UpdateBatchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateBatchSizeSetInt32">
            <summary>设置 OracleDataAdapter.set_UpdateBatchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateCommandGet">
            <summary>设置 OracleDataAdapter.get_UpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_UpdateCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_UpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.AllInstances.UpdateDataRowArrayDataTableMapping">
            <summary>设置 OracleDataAdapter.Update(DataRow[] dataRows, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Bind(System.Data.IDataAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Bind(System.Data.IDbDataAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.ClearBatch">
            <summary>设置 OracleDataAdapter.ClearBatch() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.Constructor">
            <summary>设置 OracleDataAdapter.OracleDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.ConstructorOracleCommand">
            <summary>设置 OracleDataAdapter.OracleDataAdapter(OracleCommand selectCommand) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.ConstructorStringOracleConnection">
            <summary>设置 OracleDataAdapter.OracleDataAdapter(String selectCommandText, OracleConnection selectConnection) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.ConstructorStringString">
            <summary>设置 OracleDataAdapter.OracleDataAdapter(String selectCommandText, String selectConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.CreateRowUpdatedEventDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleDataAdapter.CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.CreateRowUpdatingEventDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleDataAdapter.CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.DeleteCommandGet">
            <summary>设置 OracleDataAdapter.get_DeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.DeleteCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_DeleteCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.DeleteCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_DeleteCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.DeleteCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.DisposeBoolean">
            <summary>设置 OracleDataAdapter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.ExecuteBatch">
            <summary>设置 OracleDataAdapter.ExecuteBatch() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataSetInt32Int32StringIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataSetInt32Int32StringOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataSetOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataSetStringIDataReaderInt32Int32">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, String srcTable, IDataReader dataReader, Int32 startRecord, Int32 maxRecords) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataSetStringOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataSet dataSet, String srcTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataTableArrayInt32Int32IDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataTable[] dataTables, Int32 startRecord, Int32 maxRecords, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataTableIDataReader">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, IDataReader dataReader) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataTableIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillDataTableOracleRefCursor">
            <summary>设置 OracleDataAdapter.Fill(DataTable dataTable, OracleRefCursor refCursor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillSchemaDataSetSchemaTypeIDbCommandStringCommandBehavior">
            <summary>设置 OracleDataAdapter.FillSchema(DataSet dataSet, SchemaType schemaType, IDbCommand command, String srcTable, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.FillSchemaDataTableSchemaTypeIDbCommandCommandBehavior">
            <summary>设置 OracleDataAdapter.FillSchema(DataTable dataTable, SchemaType schemaType, IDbCommand command, CommandBehavior behavior) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.GetBatchedParameterInt32Int32">
            <summary>设置 OracleDataAdapter.GetBatchedParameter(Int32 commandIdentifier, Int32 parameterIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.GetBatchedRecordsAffectedInt32Int32OutExceptionOut">
            <summary>设置 OracleDataAdapter.GetBatchedRecordsAffected(Int32 commandIdentifier, Int32&amp; recordsAffected, Exception&amp; error) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.InitializeBatching">
            <summary>设置 OracleDataAdapter.InitializeBatching() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.InsertCommandGet">
            <summary>设置 OracleDataAdapter.get_InsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.InsertCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_InsertCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.InsertCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_InsertCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.InsertCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.OnRowUpdatedRowUpdatedEventArgs">
            <summary>设置 OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.OnRowUpdatingRowUpdatingEventArgs">
            <summary>设置 OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RequeryGet">
            <summary>设置 OracleDataAdapter.get_Requery() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RequerySetBoolean">
            <summary>设置 OracleDataAdapter.set_Requery(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RowUpdatedAddOracleRowUpdatedEventHandler">
            <summary>设置 OracleDataAdapter.add_RowUpdated(OracleRowUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RowUpdatedRemoveOracleRowUpdatedEventHandler">
            <summary>设置 OracleDataAdapter.remove_RowUpdated(OracleRowUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RowUpdatingAddOracleRowUpdatingEventHandler">
            <summary>设置 OracleDataAdapter.add_RowUpdating(OracleRowUpdatingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.RowUpdatingRemoveOracleRowUpdatingEventHandler">
            <summary>设置 OracleDataAdapter.remove_RowUpdating(OracleRowUpdatingEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.SafeMappingGet">
            <summary>设置 OracleDataAdapter.get_SafeMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.SelectCommandGet">
            <summary>设置 OracleDataAdapter.get_SelectCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.SelectCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_SelectCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.SelectCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_SelectCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.SelectCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.StaticConstructor">
            <summary>设置 OracleDataAdapter.OracleDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.TerminateBatching">
            <summary>设置 OracleDataAdapter.TerminateBatching() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateBatchSizeGet">
            <summary>设置 OracleDataAdapter.get_UpdateBatchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateBatchSizeSetInt32">
            <summary>设置 OracleDataAdapter.set_UpdateBatchSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateCommandGet">
            <summary>设置 OracleDataAdapter.get_UpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateCommandSetOracleCommand">
            <summary>设置 OracleDataAdapter.set_UpdateCommand(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateCommandSystemDataIDbDataAdapterget">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.get_UpdateCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateCommandSystemDataIDbDataAdaptersetIDbCommand">
            <summary>设置 OracleDataAdapter.System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataAdapter.UpdateDataRowArrayDataTableMapping">
            <summary>设置 OracleDataAdapter.Update(DataRow[] dataRows, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader">
            <summary>Oracle.DataAccess.Client.OracleDataReader 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.#ctor(Oracle.DataAccess.Client.OracleDataReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.CheckParametersInt32Int32Int32">
            <summary>设置 OracleDataReader.CheckParameters(Int32 bufferLength, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.Close">
            <summary>设置 OracleDataReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.CurrentRowGet">
            <summary>设置 OracleDataReader.get_CurrentRow() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.DepthGet">
            <summary>设置 OracleDataReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.Dispose">
            <summary>设置 OracleDataReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.DisposeBoolean">
            <summary>设置 OracleDataReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FetchSizeGet">
            <summary>设置 OracleDataReader.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FetchSizeInRowsGet">
            <summary>设置 OracleDataReader.get_FetchSizeInRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FetchSizeInRowsSetInt64">
            <summary>设置 OracleDataReader.set_FetchSizeInRows(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FetchSizeSetInt64">
            <summary>设置 OracleDataReader.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FieldCountGet">
            <summary>设置 OracleDataReader.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FreeSqlCtxGet">
            <summary>设置 OracleDataReader.get_FreeSqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.FreeSqlCtxSetInt32">
            <summary>设置 OracleDataReader.set_FreeSqlCtx(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetBooleanInt32">
            <summary>设置 OracleDataReader.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetByteInt32">
            <summary>设置 OracleDataReader.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 OracleDataReader.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetBytesInternalInt32Int64ByteArrayInt32Int32Boolean">
            <summary>设置 OracleDataReader.GetBytesInternal(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferOffset, Int32 length, Boolean bThrowException) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetCharInt32">
            <summary>设置 OracleDataReader.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 OracleDataReader.GetChars(Int32 i, Int64 fieldOffset, Char[] buffer, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetColMetaRefBooleanBoolean">
            <summary>设置 OracleDataReader.GetColMetaRef(Boolean bFetchMoreMetaIfRequired, Boolean bLocalParsed) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetCustomObjectInt32">
            <summary>设置 OracleDataReader.GetCustomObject(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetDataInt32">
            <summary>设置 OracleDataReader.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetDataTypeNameInt32">
            <summary>设置 OracleDataReader.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetDateTimeInt32">
            <summary>设置 OracleDataReader.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetDecimalInt32">
            <summary>设置 OracleDataReader.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetDoubleInt32">
            <summary>设置 OracleDataReader.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetEnumerator">
            <summary>设置 OracleDataReader.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetFieldTypeInt32">
            <summary>设置 OracleDataReader.GetFieldType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetFloatInt32">
            <summary>设置 OracleDataReader.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetGuidInt32">
            <summary>设置 OracleDataReader.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetInt16Int32">
            <summary>设置 OracleDataReader.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetInt32Int32">
            <summary>设置 OracleDataReader.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetInt64Int32">
            <summary>设置 OracleDataReader.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetMinSchemaTable">
            <summary>设置 OracleDataReader.GetMinSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetNameInt32">
            <summary>设置 OracleDataReader.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOraDbTypeInt32">
            <summary>设置 OracleDataReader.GetOraDbType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleBFileInt32">
            <summary>设置 OracleDataReader.GetOracleBFile(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleBinaryInt32">
            <summary>设置 OracleDataReader.GetOracleBinary(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleBlobForUpdateInt32">
            <summary>设置 OracleDataReader.GetOracleBlobForUpdate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleBlobForUpdateInt32Int32">
            <summary>设置 OracleDataReader.GetOracleBlobForUpdate(Int32 i, Int32 wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleBlobInt32">
            <summary>设置 OracleDataReader.GetOracleBlob(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleClobForUpdateInt32">
            <summary>设置 OracleDataReader.GetOracleClobForUpdate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleClobForUpdateInt32Int32">
            <summary>设置 OracleDataReader.GetOracleClobForUpdate(Int32 i, Int32 wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleClobInt32">
            <summary>设置 OracleDataReader.GetOracleClob(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleDateInt32">
            <summary>设置 OracleDataReader.GetOracleDate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleDecimalInt32">
            <summary>设置 OracleDataReader.GetOracleDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleIntervalDSInt32">
            <summary>设置 OracleDataReader.GetOracleIntervalDS(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleIntervalYMInt32">
            <summary>设置 OracleDataReader.GetOracleIntervalYM(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleRefInt32">
            <summary>设置 OracleDataReader.GetOracleRef(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleStringInt32">
            <summary>设置 OracleDataReader.GetOracleString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleTimeStampInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStamp(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleTimeStampLTZInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStampLTZ(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleTimeStampTZInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStampTZ(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleValueInt32">
            <summary>设置 OracleDataReader.GetOracleValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleValuesObjectArray">
            <summary>设置 OracleDataReader.GetOracleValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOracleXmlTypeInt32">
            <summary>设置 OracleDataReader.GetOracleXmlType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetOrdinalString">
            <summary>设置 OracleDataReader.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetProviderSpecificFieldTypeInt32">
            <summary>设置 OracleDataReader.GetProviderSpecificFieldType(Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetProviderSpecificValueInt32">
            <summary>设置 OracleDataReader.GetProviderSpecificValue(Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetProviderSpecificValuesObjectArray">
            <summary>设置 OracleDataReader.GetProviderSpecificValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetSchemaTable">
            <summary>设置 OracleDataReader.GetSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetStringInt32">
            <summary>设置 OracleDataReader.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetTimeSpanInt32">
            <summary>设置 OracleDataReader.GetTimeSpan(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetValueInt32">
            <summary>设置 OracleDataReader.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetValuesObjectArray">
            <summary>设置 OracleDataReader.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.GetXmlReaderInt32">
            <summary>设置 OracleDataReader.GetXmlReader(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.HasRowsGet">
            <summary>设置 OracleDataReader.get_HasRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.HiddenFieldCountGet">
            <summary>设置 OracleDataReader.get_HiddenFieldCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.InitialLOBFetchSizeGet">
            <summary>设置 OracleDataReader.get_InitialLOBFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.InitialLONGFetchSizeGet">
            <summary>设置 OracleDataReader.get_InitialLONGFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.IsClosedGet">
            <summary>设置 OracleDataReader.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.IsDBNullInt32">
            <summary>设置 OracleDataReader.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.IsEOFGet">
            <summary>设置 OracleDataReader.get_IsEOF() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.IsFillReaderGet">
            <summary>设置 OracleDataReader.get_IsFillReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.IsFillReaderSetBoolean">
            <summary>设置 OracleDataReader.set_IsFillReader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.ItemGetInt32">
            <summary>设置 OracleDataReader.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.ItemGetString">
            <summary>设置 OracleDataReader.get_Item(String columnName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.NextResult">
            <summary>设置 OracleDataReader.NextResult() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.Read">
            <summary>设置 OracleDataReader.Read() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.RecordsAffectedGet">
            <summary>设置 OracleDataReader.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.RefCursorGet">
            <summary>设置 OracleDataReader.get_RefCursor() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.RefCursorSetOracleRefCursor">
            <summary>设置 OracleDataReader.set_RefCursor(OracleRefCursor value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.RowSizeGet">
            <summary>设置 OracleDataReader.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.SafeMappingGet">
            <summary>设置 OracleDataReader.get_SafeMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.SafeMappingSetHashtable">
            <summary>设置 OracleDataReader.set_SafeMapping(Hashtable value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.SchemaTablesGet">
            <summary>设置 OracleDataReader.get_SchemaTables() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.SqlCtxGet">
            <summary>设置 OracleDataReader.get_SqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.UpdateMetaDataPool">
            <summary>设置 OracleDataReader.UpdateMetaDataPool() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.AllInstances.VisibleFieldCountGet">
            <summary>设置 OracleDataReader.get_VisibleFieldCount() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Bind(System.Data.IDataReader)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Bind(System.Data.IDataRecord)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.CheckParametersInt32Int32Int32">
            <summary>设置 OracleDataReader.CheckParameters(Int32 bufferLength, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Close">
            <summary>设置 OracleDataReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.CurrentRowGet">
            <summary>设置 OracleDataReader.get_CurrentRow() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.DepthGet">
            <summary>设置 OracleDataReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Dispose">
            <summary>设置 OracleDataReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.DisposeBoolean">
            <summary>设置 OracleDataReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FetchSizeGet">
            <summary>设置 OracleDataReader.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FetchSizeInRowsGet">
            <summary>设置 OracleDataReader.get_FetchSizeInRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FetchSizeInRowsSetInt64">
            <summary>设置 OracleDataReader.set_FetchSizeInRows(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FetchSizeSetInt64">
            <summary>设置 OracleDataReader.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FieldCountGet">
            <summary>设置 OracleDataReader.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FreeSqlCtxGet">
            <summary>设置 OracleDataReader.get_FreeSqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.FreeSqlCtxSetInt32">
            <summary>设置 OracleDataReader.set_FreeSqlCtx(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetBooleanInt32">
            <summary>设置 OracleDataReader.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetByteInt32">
            <summary>设置 OracleDataReader.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 OracleDataReader.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetBytesInternalInt32Int64ByteArrayInt32Int32Boolean">
            <summary>设置 OracleDataReader.GetBytesInternal(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferOffset, Int32 length, Boolean bThrowException) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetCharInt32">
            <summary>设置 OracleDataReader.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 OracleDataReader.GetChars(Int32 i, Int64 fieldOffset, Char[] buffer, Int32 bufferOffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetColMetaRefBooleanBoolean">
            <summary>设置 OracleDataReader.GetColMetaRef(Boolean bFetchMoreMetaIfRequired, Boolean bLocalParsed) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetCustomObjectInt32">
            <summary>设置 OracleDataReader.GetCustomObject(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetDataInt32">
            <summary>设置 OracleDataReader.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetDataTypeNameInt32">
            <summary>设置 OracleDataReader.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetDateTimeInt32">
            <summary>设置 OracleDataReader.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetDecimalInt32">
            <summary>设置 OracleDataReader.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetDoubleInt32">
            <summary>设置 OracleDataReader.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetEnumerator">
            <summary>设置 OracleDataReader.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetFieldTypeInt32">
            <summary>设置 OracleDataReader.GetFieldType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetFloatInt32">
            <summary>设置 OracleDataReader.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetGuidInt32">
            <summary>设置 OracleDataReader.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetInt16Int32">
            <summary>设置 OracleDataReader.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetInt32Int32">
            <summary>设置 OracleDataReader.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetInt64Int32">
            <summary>设置 OracleDataReader.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetMinSchemaTable">
            <summary>设置 OracleDataReader.GetMinSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetNameInt32">
            <summary>设置 OracleDataReader.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOraDbTypeInt32">
            <summary>设置 OracleDataReader.GetOraDbType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleBFileInt32">
            <summary>设置 OracleDataReader.GetOracleBFile(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleBinaryInt32">
            <summary>设置 OracleDataReader.GetOracleBinary(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleBlobForUpdateInt32">
            <summary>设置 OracleDataReader.GetOracleBlobForUpdate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleBlobForUpdateInt32Int32">
            <summary>设置 OracleDataReader.GetOracleBlobForUpdate(Int32 i, Int32 wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleBlobInt32">
            <summary>设置 OracleDataReader.GetOracleBlob(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleClobForUpdateInt32">
            <summary>设置 OracleDataReader.GetOracleClobForUpdate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleClobForUpdateInt32Int32">
            <summary>设置 OracleDataReader.GetOracleClobForUpdate(Int32 i, Int32 wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleClobInt32">
            <summary>设置 OracleDataReader.GetOracleClob(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleDateInt32">
            <summary>设置 OracleDataReader.GetOracleDate(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleDecimalInt32">
            <summary>设置 OracleDataReader.GetOracleDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleIntervalDSInt32">
            <summary>设置 OracleDataReader.GetOracleIntervalDS(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleIntervalYMInt32">
            <summary>设置 OracleDataReader.GetOracleIntervalYM(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleRefInt32">
            <summary>设置 OracleDataReader.GetOracleRef(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleStringInt32">
            <summary>设置 OracleDataReader.GetOracleString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleTimeStampInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStamp(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleTimeStampLTZInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStampLTZ(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleTimeStampTZInt32">
            <summary>设置 OracleDataReader.GetOracleTimeStampTZ(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleValueInt32">
            <summary>设置 OracleDataReader.GetOracleValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleValuesObjectArray">
            <summary>设置 OracleDataReader.GetOracleValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOracleXmlTypeInt32">
            <summary>设置 OracleDataReader.GetOracleXmlType(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetOrdinalString">
            <summary>设置 OracleDataReader.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetProviderSpecificFieldTypeInt32">
            <summary>设置 OracleDataReader.GetProviderSpecificFieldType(Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetProviderSpecificValueInt32">
            <summary>设置 OracleDataReader.GetProviderSpecificValue(Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetProviderSpecificValuesObjectArray">
            <summary>设置 OracleDataReader.GetProviderSpecificValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetSchemaTable">
            <summary>设置 OracleDataReader.GetSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetStringInt32">
            <summary>设置 OracleDataReader.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetTimeSpanInt32">
            <summary>设置 OracleDataReader.GetTimeSpan(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetValueInt32">
            <summary>设置 OracleDataReader.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetValuesObjectArray">
            <summary>设置 OracleDataReader.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.GetXmlReaderInt32">
            <summary>设置 OracleDataReader.GetXmlReader(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.HasRowsGet">
            <summary>设置 OracleDataReader.get_HasRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.HiddenFieldCountGet">
            <summary>设置 OracleDataReader.get_HiddenFieldCount() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.InitialLOBFetchSizeGet">
            <summary>设置 OracleDataReader.get_InitialLOBFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.InitialLONGFetchSizeGet">
            <summary>设置 OracleDataReader.get_InitialLONGFetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.IsClosedGet">
            <summary>设置 OracleDataReader.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.IsDBNullInt32">
            <summary>设置 OracleDataReader.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.IsEOFGet">
            <summary>设置 OracleDataReader.get_IsEOF() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.IsFillReaderGet">
            <summary>设置 OracleDataReader.get_IsFillReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.IsFillReaderSetBoolean">
            <summary>设置 OracleDataReader.set_IsFillReader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.ItemGetInt32">
            <summary>设置 OracleDataReader.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.ItemGetString">
            <summary>设置 OracleDataReader.get_Item(String columnName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.NextResult">
            <summary>设置 OracleDataReader.NextResult() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.Read">
            <summary>设置 OracleDataReader.Read() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.RecordsAffectedGet">
            <summary>设置 OracleDataReader.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.RefCursorGet">
            <summary>设置 OracleDataReader.get_RefCursor() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.RefCursorSetOracleRefCursor">
            <summary>设置 OracleDataReader.set_RefCursor(OracleRefCursor value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.RowSizeGet">
            <summary>设置 OracleDataReader.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.SafeMappingGet">
            <summary>设置 OracleDataReader.get_SafeMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.SafeMappingSetHashtable">
            <summary>设置 OracleDataReader.set_SafeMapping(Hashtable value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.SchemaTablesGet">
            <summary>设置 OracleDataReader.get_SchemaTables() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.SqlCtxGet">
            <summary>设置 OracleDataReader.get_SqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.UpdateMetaDataPool">
            <summary>设置 OracleDataReader.UpdateMetaDataPool() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataReader.VisibleFieldCountGet">
            <summary>设置 OracleDataReader.get_VisibleFieldCount() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator">
            <summary>Oracle.DataAccess.Client.OracleDataSourceEnumerator 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.#ctor(Oracle.DataAccess.Client.OracleDataSourceEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.AllInstances.GetDataSources">
            <summary>设置 OracleDataSourceEnumerator.GetDataSources() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.Constructor">
            <summary>设置 OracleDataSourceEnumerator.OracleDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDataSourceEnumerator.GetDataSources">
            <summary>设置 OracleDataSourceEnumerator.GetDataSources() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDependency">
            <summary>Oracle.DataAccess.Client.OracleDependency 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.#ctor(Oracle.DataAccess.Client.OracleDependency)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AddCommandDependencyOracleCommand">
            <summary>设置 OracleDependency.AddCommandDependency(OracleCommand cmd) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.AddCommandDependencyOracleCommand">
            <summary>设置 OracleDependency.AddCommandDependency(OracleCommand cmd) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.DataSourceGet">
            <summary>设置 OracleDependency.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.FiredEventOracleNotificationEventArgs">
            <summary>设置 OracleDependency.FiredEvent(OracleNotificationEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.GetPort">
            <summary>设置 OracleDependency.GetPort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.HasChangesGet">
            <summary>设置 OracleDependency.get_HasChanges() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.IdGet">
            <summary>设置 OracleDependency.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.InitializeBooleanInt64Boolean">
            <summary>设置 OracleDependency.Initialize(Boolean isNotifiedOnce, Int64 timeout, Boolean isPersistent) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.InvalidationStringGet">
            <summary>设置 OracleDependency.get_InvalidationString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.IsEnabledGet">
            <summary>设置 OracleDependency.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.OnChangeAddOnChangeEventHandler">
            <summary>设置 OracleDependency.add_OnChange(OnChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.OnChangeRemoveOnChangeEventHandler">
            <summary>设置 OracleDependency.remove_OnChange(OnChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.QueryBasedNotificationGet">
            <summary>设置 OracleDependency.get_QueryBasedNotification() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.QueryBasedNotificationSetBoolean">
            <summary>设置 OracleDependency.set_QueryBasedNotification(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.RegisteredQueryIDsGet">
            <summary>设置 OracleDependency.get_RegisteredQueryIDs() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.RegisteredResourcesGet">
            <summary>设置 OracleDependency.get_RegisteredResources() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.RemoveRegistrationOracleConnection">
            <summary>设置 OracleDependency.RemoveRegistration(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.RowidInfoGet">
            <summary>设置 OracleDependency.get_RowidInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.RowidInfoSetOracleRowidInfo">
            <summary>设置 OracleDependency.set_RowidInfo(OracleRowidInfo value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.SetRegisterInfoStringStringBooleanBooleanInt64">
            <summary>设置 OracleDependency.SetRegisterInfo(String username, String dataSource, Boolean IsNotifiedOnce, Boolean IsPersistent, Int64 timeout) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.AllInstances.UserNameGet">
            <summary>设置 OracleDependency.get_UserName() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.Constructor">
            <summary>设置 OracleDependency.OracleDependency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.ConstructorOracleCommand">
            <summary>设置 OracleDependency.OracleDependency(OracleCommand cmd) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.ConstructorOracleCommandBooleanInt64Boolean">
            <summary>设置 OracleDependency.OracleDependency(OracleCommand cmd, Boolean isNotifiedOnce, Int64 timeout, Boolean isPersistent) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.CreateDependencyEnv">
            <summary>设置 OracleDependency.CreateDependencyEnv() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.DataSourceGet">
            <summary>设置 OracleDependency.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.FiredEventOracleNotificationEventArgs">
            <summary>设置 OracleDependency.FiredEvent(OracleNotificationEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.GetMachineAddress">
            <summary>设置 OracleDependency.GetMachineAddress() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.GetOracleDependencyFromNTFNIdString">
            <summary>设置 OracleDependency.GetOracleDependencyFromNTFNId(String id) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.GetOracleDependencyString">
            <summary>设置 OracleDependency.GetOracleDependency(String guid) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.GetPort">
            <summary>设置 OracleDependency.GetPort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.HasChangesGet">
            <summary>设置 OracleDependency.get_HasChanges() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.IdGet">
            <summary>设置 OracleDependency.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.InitializeBooleanInt64Boolean">
            <summary>设置 OracleDependency.Initialize(Boolean isNotifiedOnce, Int64 timeout, Boolean isPersistent) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.InvalidationStringGet">
            <summary>设置 OracleDependency.get_InvalidationString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.IsEnabledGet">
            <summary>设置 OracleDependency.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.OnChangeAddOnChangeEventHandler">
            <summary>设置 OracleDependency.add_OnChange(OnChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.OnChangeRemoveOnChangeEventHandler">
            <summary>设置 OracleDependency.remove_OnChange(OnChangeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.PortGet">
            <summary>设置 OracleDependency.get_Port() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.PortSetInt32">
            <summary>设置 OracleDependency.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.QueryBasedNotificationGet">
            <summary>设置 OracleDependency.get_QueryBasedNotification() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.QueryBasedNotificationSetBoolean">
            <summary>设置 OracleDependency.set_QueryBasedNotification(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.RegisteredQueryIDsGet">
            <summary>设置 OracleDependency.get_RegisteredQueryIDs() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.RegisteredResourcesGet">
            <summary>设置 OracleDependency.get_RegisteredResources() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.RemoveRegistrationOracleConnection">
            <summary>设置 OracleDependency.RemoveRegistration(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.RowidInfoGet">
            <summary>设置 OracleDependency.get_RowidInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.RowidInfoSetOracleRowidInfo">
            <summary>设置 OracleDependency.set_RowidInfo(OracleRowidInfo value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.SetRegisterInfoStringStringBooleanBooleanInt64">
            <summary>设置 OracleDependency.SetRegisterInfo(String username, String dataSource, Boolean IsNotifiedOnce, Boolean IsPersistent, Int64 timeout) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.StaticConstructor">
            <summary>设置 OracleDependency.OracleDependency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleDependency.UserNameGet">
            <summary>设置 OracleDependency.get_UserName() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleError">
            <summary>Oracle.DataAccess.Client.OracleError 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleError.#ctor(Oracle.DataAccess.Client.OracleError)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.ArrayBindIndexGet">
            <summary>设置 OracleError.get_ArrayBindIndex() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.DataSourceGet">
            <summary>设置 OracleError.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.MessageGet">
            <summary>设置 OracleError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.NumberGet">
            <summary>设置 OracleError.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.ProcedureGet">
            <summary>设置 OracleError.get_Procedure() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.SourceGet">
            <summary>设置 OracleError.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.AllInstances.ToString01">
            <summary>设置 OracleError.ToString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.ArrayBindIndexGet">
            <summary>设置 OracleError.get_ArrayBindIndex() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.ConstructorInt32StringStringString">
            <summary>设置 OracleError.OracleError(Int32 errNumber, String dataSrc, String procedure, String errMsg) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.DataSourceGet">
            <summary>设置 OracleError.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.MessageGet">
            <summary>设置 OracleError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.NumberGet">
            <summary>设置 OracleError.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.ProcedureGet">
            <summary>设置 OracleError.get_Procedure() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.SourceGet">
            <summary>设置 OracleError.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleError.ToString">
            <summary>设置 OracleError.ToString() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection">
            <summary>Oracle.DataAccess.Client.OracleErrorCollection 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.#ctor(Oracle.DataAccess.Client.OracleErrorCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.AllInstances.ItemGetInt32">
            <summary>设置 OracleErrorCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.AllInstances.ItemSetInt32OracleError">
            <summary>设置 OracleErrorCollection.set_Item(Int32 index, OracleError value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.Constructor">
            <summary>设置 OracleErrorCollection.OracleErrorCollection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.ItemGetInt32">
            <summary>设置 OracleErrorCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleErrorCollection.ItemSetInt32OracleError">
            <summary>设置 OracleErrorCollection.set_Item(Int32 index, OracleError value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleException">
            <summary>Oracle.DataAccess.Client.OracleException 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleException.#ctor(Oracle.DataAccess.Client.OracleException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AddOraMesgPrefixInt32String">
            <summary>设置 OracleException.AddOraMesgPrefix(Int32 errNum, String errMsg) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.DataSourceGet">
            <summary>设置 OracleException.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.ErrorsGet">
            <summary>设置 OracleException.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 OracleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.MessageGet">
            <summary>设置 OracleException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.NumberGet">
            <summary>设置 OracleException.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.ProcedureGet">
            <summary>设置 OracleException.get_Procedure() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.SourceGet">
            <summary>设置 OracleException.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.AllInstances.ToString01">
            <summary>设置 OracleException.ToString() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ConstructorInt32">
            <summary>设置 OracleException.OracleException(Int32 errCode) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ConstructorInt32StringStringString">
            <summary>设置 OracleException.OracleException(Int32 errCode, String dataSrc, String procedure, String errMsg) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ConstructorOracleErrorCollection">
            <summary>设置 OracleException.OracleException(OracleErrorCollection oec) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 OracleException.OracleException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.DataSourceGet">
            <summary>设置 OracleException.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ErrorsGet">
            <summary>设置 OracleException.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 OracleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.GetOraMesgInt32StringArray">
            <summary>设置 OracleException.GetOraMesg(Int32 errNum, String[] args) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.HandleErrorInt32OracleConnectionIntPtrObject">
            <summary>设置 OracleException.HandleError(Int32 errCode, OracleConnection conn, IntPtr opsErrCtx, Object src) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.IssueWarningOracleConnectionObjectOracleErrorCollection">
            <summary>设置 OracleException.IssueWarning(OracleConnection conn, Object src, OracleErrorCollection c) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.MessageGet">
            <summary>设置 OracleException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.NumberGet">
            <summary>设置 OracleException.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ProcedureGet">
            <summary>设置 OracleException.get_Procedure() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.SourceGet">
            <summary>设置 OracleException.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.StaticConstructor">
            <summary>设置 OracleException.OracleException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleException.ToString">
            <summary>设置 OracleException.ToString() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs">
            <summary>Oracle.DataAccess.Client.OracleFailoverEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.#ctor(Oracle.DataAccess.Client.OracleFailoverEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.AllInstances.FailoverEventGet">
            <summary>设置 OracleFailoverEventArgs.get_FailoverEvent() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.AllInstances.FailoverTypeGet">
            <summary>设置 OracleFailoverEventArgs.get_FailoverType() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.ConstructorIntPtrIntPtrIntPtrInt32Int32">
            <summary>设置 OracleFailoverEventArgs.OracleFailoverEventArgs(IntPtr svchp, IntPtr envhp, IntPtr fo_ctx, Int32 fo_type, Int32 fo_event) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.FailoverEventGet">
            <summary>设置 OracleFailoverEventArgs.get_FailoverEvent() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleFailoverEventArgs.FailoverTypeGet">
            <summary>设置 OracleFailoverEventArgs.get_FailoverType() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization">
            <summary>Oracle.DataAccess.Client.OracleGlobalization 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.#ctor(Oracle.DataAccess.Client.OracleGlobalization)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.CalendarGet">
            <summary>设置 OracleGlobalization.get_Calendar() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.CalendarSetString">
            <summary>设置 OracleGlobalization.set_Calendar(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ClientCharacterSetGet">
            <summary>设置 OracleGlobalization.get_ClientCharacterSet() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.Clone">
            <summary>设置 OracleGlobalization.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ComparisonGet">
            <summary>设置 OracleGlobalization.get_Comparison() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ComparisonSetString">
            <summary>设置 OracleGlobalization.set_Comparison(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.CurrencyGet">
            <summary>设置 OracleGlobalization.get_Currency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.CurrencySetString">
            <summary>设置 OracleGlobalization.set_Currency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DateFormatGet">
            <summary>设置 OracleGlobalization.get_DateFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DateFormatSetString">
            <summary>设置 OracleGlobalization.set_DateFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DateLanguageGet">
            <summary>设置 OracleGlobalization.get_DateLanguage() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DateLanguageSetString">
            <summary>设置 OracleGlobalization.set_DateLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.Dispose">
            <summary>设置 OracleGlobalization.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DualCurrencyGet">
            <summary>设置 OracleGlobalization.get_DualCurrency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.DualCurrencySetString">
            <summary>设置 OracleGlobalization.set_DualCurrency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ISOCurrencyGet">
            <summary>设置 OracleGlobalization.get_ISOCurrency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ISOCurrencySetString">
            <summary>设置 OracleGlobalization.set_ISOCurrency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.LanguageGet">
            <summary>设置 OracleGlobalization.get_Language() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.LanguageSetString">
            <summary>设置 OracleGlobalization.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.LengthSemanticsGet">
            <summary>设置 OracleGlobalization.get_LengthSemantics() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.LengthSemanticsSetString">
            <summary>设置 OracleGlobalization.set_LengthSemantics(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.NCharConversionExceptionGet">
            <summary>设置 OracleGlobalization.get_NCharConversionException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.NCharConversionExceptionSetBoolean">
            <summary>设置 OracleGlobalization.set_NCharConversionException(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.NumericCharactersGet">
            <summary>设置 OracleGlobalization.get_NumericCharacters() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.NumericCharactersSetString">
            <summary>设置 OracleGlobalization.set_NumericCharacters(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.SortGet">
            <summary>设置 OracleGlobalization.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.SortSetString">
            <summary>设置 OracleGlobalization.set_Sort(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TerritoryGet">
            <summary>设置 OracleGlobalization.get_Territory() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TerritorySetString">
            <summary>设置 OracleGlobalization.set_Territory(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeStampFormatGet">
            <summary>设置 OracleGlobalization.get_TimeStampFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeStampFormatSetString">
            <summary>设置 OracleGlobalization.set_TimeStampFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeStampTZFormatGet">
            <summary>设置 OracleGlobalization.get_TimeStampTZFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeStampTZFormatSetString">
            <summary>设置 OracleGlobalization.set_TimeStampTZFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeZoneGet">
            <summary>设置 OracleGlobalization.get_TimeZone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.TimeZoneSetString">
            <summary>设置 OracleGlobalization.set_TimeZone(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.AllInstances.ValidateSettingInt32String">
            <summary>设置 OracleGlobalization.ValidateSetting(Int32 paramKey, String paramVal) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.CalendarGet">
            <summary>设置 OracleGlobalization.get_Calendar() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.CalendarSetString">
            <summary>设置 OracleGlobalization.set_Calendar(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ClientCharacterSetGet">
            <summary>设置 OracleGlobalization.get_ClientCharacterSet() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Clone">
            <summary>设置 OracleGlobalization.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ComparisonGet">
            <summary>设置 OracleGlobalization.get_Comparison() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ComparisonSetString">
            <summary>设置 OracleGlobalization.set_Comparison(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Constructor">
            <summary>设置 OracleGlobalization.OracleGlobalization() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.CurrencyGet">
            <summary>设置 OracleGlobalization.get_Currency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.CurrencySetString">
            <summary>设置 OracleGlobalization.set_Currency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DateFormatGet">
            <summary>设置 OracleGlobalization.get_DateFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DateFormatSetString">
            <summary>设置 OracleGlobalization.set_DateFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DateLanguageGet">
            <summary>设置 OracleGlobalization.get_DateLanguage() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DateLanguageSetString">
            <summary>设置 OracleGlobalization.set_DateLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.Dispose">
            <summary>设置 OracleGlobalization.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DualCurrencyGet">
            <summary>设置 OracleGlobalization.get_DualCurrency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.DualCurrencySetString">
            <summary>设置 OracleGlobalization.set_DualCurrency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.GetClientInfo">
            <summary>设置 OracleGlobalization.GetClientInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.GetClientInfoOracleGlobalization">
            <summary>设置 OracleGlobalization.GetClientInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.GetThreadInfo">
            <summary>设置 OracleGlobalization.GetThreadInfo() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.GetThreadInfoOracleGlobalization">
            <summary>设置 OracleGlobalization.GetThreadInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ISOCurrencyGet">
            <summary>设置 OracleGlobalization.get_ISOCurrency() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ISOCurrencySetString">
            <summary>设置 OracleGlobalization.set_ISOCurrency(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.LanguageGet">
            <summary>设置 OracleGlobalization.get_Language() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.LanguageSetString">
            <summary>设置 OracleGlobalization.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.LengthSemanticsGet">
            <summary>设置 OracleGlobalization.get_LengthSemantics() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.LengthSemanticsSetString">
            <summary>设置 OracleGlobalization.set_LengthSemantics(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.NCharConversionExceptionGet">
            <summary>设置 OracleGlobalization.get_NCharConversionException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.NCharConversionExceptionSetBoolean">
            <summary>设置 OracleGlobalization.set_NCharConversionException(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.NumericCharactersGet">
            <summary>设置 OracleGlobalization.get_NumericCharacters() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.NumericCharactersSetString">
            <summary>设置 OracleGlobalization.set_NumericCharacters(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.SetThreadInfoOracleGlobalization">
            <summary>设置 OracleGlobalization.SetThreadInfo(OracleGlobalization oraGlob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.SortGet">
            <summary>设置 OracleGlobalization.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.SortSetString">
            <summary>设置 OracleGlobalization.set_Sort(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TerritoryGet">
            <summary>设置 OracleGlobalization.get_Territory() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TerritorySetString">
            <summary>设置 OracleGlobalization.set_Territory(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeStampFormatGet">
            <summary>设置 OracleGlobalization.get_TimeStampFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeStampFormatSetString">
            <summary>设置 OracleGlobalization.set_TimeStampFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeStampTZFormatGet">
            <summary>设置 OracleGlobalization.get_TimeStampTZFormat() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeStampTZFormatSetString">
            <summary>设置 OracleGlobalization.set_TimeStampTZFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeZoneGet">
            <summary>设置 OracleGlobalization.get_TimeZone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.TimeZoneSetString">
            <summary>设置 OracleGlobalization.set_TimeZone(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleGlobalization.ValidateSettingInt32String">
            <summary>设置 OracleGlobalization.ValidateSetting(Int32 paramKey, String paramVal) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs">
            <summary>Oracle.DataAccess.Client.OracleInfoMessageEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.#ctor(Oracle.DataAccess.Client.OracleInfoMessageEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.AllInstances.ErrorsGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.AllInstances.MessageGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.AllInstances.SourceGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.AllInstances.ToString01">
            <summary>设置 OracleInfoMessageEventArgs.ToString() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.ConstructorOracleErrorCollection">
            <summary>设置 OracleInfoMessageEventArgs.OracleInfoMessageEventArgs(OracleErrorCollection oraErrors) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.ErrorsGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.MessageGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.SourceGet">
            <summary>设置 OracleInfoMessageEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleInfoMessageEventArgs.ToString">
            <summary>设置 OracleInfoMessageEventArgs.ToString() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs">
            <summary>Oracle.DataAccess.Client.OracleNotificationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.#ctor(Oracle.DataAccess.Client.OracleNotificationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AddRowDetailStringOracleNotificationInfoStringInt64">
            <summary>设置 OracleNotificationEventArgs.AddRowDetail(String name, OracleNotificationInfo info, String rowid, Int64 queryid) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.AddRowDetailStringOracleNotificationInfoStringInt64">
            <summary>设置 OracleNotificationEventArgs.AddRowDetail(String name, OracleNotificationInfo info, String rowid, Int64 queryid) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.DetailsGet">
            <summary>设置 OracleNotificationEventArgs.get_Details() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.InfoGet">
            <summary>设置 OracleNotificationEventArgs.get_Info() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.ResourceNamesGet">
            <summary>设置 OracleNotificationEventArgs.get_ResourceNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.SourceGet">
            <summary>设置 OracleNotificationEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.AllInstances.TypeGet">
            <summary>设置 OracleNotificationEventArgs.get_Type() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.Constructor">
            <summary>设置 OracleNotificationEventArgs.OracleNotificationEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.DetailsGet">
            <summary>设置 OracleNotificationEventArgs.get_Details() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.InfoGet">
            <summary>设置 OracleNotificationEventArgs.get_Info() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.ResourceNamesGet">
            <summary>设置 OracleNotificationEventArgs.get_ResourceNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.SourceGet">
            <summary>设置 OracleNotificationEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationEventArgs.TypeGet">
            <summary>设置 OracleNotificationEventArgs.get_Type() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest">
            <summary>Oracle.DataAccess.Client.OracleNotificationRequest 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.#ctor(Oracle.DataAccess.Client.OracleNotificationRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.IdGet">
            <summary>设置 OracleNotificationRequest.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.IsNotifiedOnceGet">
            <summary>设置 OracleNotificationRequest.get_IsNotifiedOnce() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.IsNotifiedOnceSetBoolean">
            <summary>设置 OracleNotificationRequest.set_IsNotifiedOnce(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.IsPersistentGet">
            <summary>设置 OracleNotificationRequest.get_IsPersistent() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.IsPersistentSetBoolean">
            <summary>设置 OracleNotificationRequest.set_IsPersistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.ServiceGet">
            <summary>设置 OracleNotificationRequest.get_Service() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.TimeoutGet">
            <summary>设置 OracleNotificationRequest.get_Timeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.AllInstances.TimeoutSetInt64">
            <summary>设置 OracleNotificationRequest.set_Timeout(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.IdGet">
            <summary>设置 OracleNotificationRequest.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.IsNotifiedOnceGet">
            <summary>设置 OracleNotificationRequest.get_IsNotifiedOnce() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.IsNotifiedOnceSetBoolean">
            <summary>设置 OracleNotificationRequest.set_IsNotifiedOnce(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.IsPersistentGet">
            <summary>设置 OracleNotificationRequest.get_IsPersistent() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.IsPersistentSetBoolean">
            <summary>设置 OracleNotificationRequest.set_IsPersistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.PopulateChgNTFNSubscrCtxOracleCommandBooleanOracleDependencyOut">
            <summary>设置 OracleNotificationRequest.PopulateChgNTFNSubscrCtx(OracleCommand cmd, Boolean isRowidReq, OracleDependency&amp; dep) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.ServiceGet">
            <summary>设置 OracleNotificationRequest.get_Service() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.StaticConstructor">
            <summary>设置 OracleNotificationRequest.OracleNotificationRequest() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.TimeoutGet">
            <summary>设置 OracleNotificationRequest.get_Timeout() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleNotificationRequest.TimeoutSetInt64">
            <summary>设置 OracleNotificationRequest.set_Timeout(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleParameter">
            <summary>Oracle.DataAccess.Client.OracleParameter 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.#ctor(Oracle.DataAccess.Client.OracleParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ArrayBindSizeGet">
            <summary>设置 OracleParameter.get_ArrayBindSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ArrayBindSizeSetInt32Array">
            <summary>设置 OracleParameter.set_ArrayBindSize(Int32[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ArrayBindStatusGet">
            <summary>设置 OracleParameter.get_ArrayBindStatus() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ArrayBindStatusSetOracleParameterStatusArray">
            <summary>设置 OracleParameter.set_ArrayBindStatus(OracleParameterStatus[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.Clone">
            <summary>设置 OracleParameter.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.CollectionTypeGet">
            <summary>设置 OracleParameter.get_CollectionType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.CollectionTypeSetOracleCollectionType">
            <summary>设置 OracleParameter.set_CollectionType(OracleCollectionType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.CreateCustomObjectOracleConnectionInt32">
            <summary>设置 OracleParameter.CreateCustomObject(OracleConnection conn, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.CreateOracleRefOracleConnectionInt32">
            <summary>设置 OracleParameter.CreateOracleRef(OracleConnection conn, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.DbTypeGet">
            <summary>设置 OracleParameter.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.DbTypeSetDbType">
            <summary>设置 OracleParameter.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.DirectionGet">
            <summary>设置 OracleParameter.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.DirectionSetParameterDirection">
            <summary>设置 OracleParameter.set_Direction(ParameterDirection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.Dispose">
            <summary>设置 OracleParameter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.DisposeBoolean">
            <summary>设置 OracleParameter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.FreeDataBuffer">
            <summary>设置 OracleParameter.FreeDataBuffer() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetBindingSizeArrayInt32">
            <summary>设置 OracleParameter.GetBindingSize(Array buffer, Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetBindingSizeInt32Int32">
            <summary>设置 OracleParameter.GetBindingSize(Int32 bufferLength, Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetBindingSize_CharInt32">
            <summary>设置 OracleParameter.GetBindingSize_Char(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetBindingSize_RawInt32">
            <summary>设置 OracleParameter.GetBindingSize_Raw(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetPreBindBuffer_CharInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Char(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetPreBindBuffer_RawInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Raw(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetPreBindBuffer_StrInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Str(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.GetPreBindStrObject">
            <summary>设置 OracleParameter.GetPreBindStr(Object bindValue) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.IsElemTypeTypeObjectInt32">
            <summary>设置 OracleParameter.IsElemType(Type type, Object value, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.IsNullableGet">
            <summary>设置 OracleParameter.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.IsNullableSetBoolean">
            <summary>设置 OracleParameter.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.IsProviderSpecificNullValueObject">
            <summary>设置 OracleParameter.IsProviderSpecificNullValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.OffsetGet">
            <summary>设置 OracleParameter.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.OffsetSetInt32">
            <summary>设置 OracleParameter.set_Offset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.OracleDbTypeGet">
            <summary>设置 OracleParameter.get_OracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.OracleDbTypeSetOracleDbType">
            <summary>设置 OracleParameter.set_OracleDbType(OracleDbType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ParameterNameGet">
            <summary>设置 OracleParameter.get_ParameterName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ParameterNameSetString">
            <summary>设置 OracleParameter.set_ParameterName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_BFileOracleConnection">
            <summary>设置 OracleParameter.PostBind_BFile(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_BlobOracleConnection">
            <summary>设置 OracleParameter.PostBind_Blob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Byte">
            <summary>设置 OracleParameter.PostBind_Byte() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Char">
            <summary>设置 OracleParameter.PostBind_Char() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_ClobOracleConnectionBoolean">
            <summary>设置 OracleParameter.PostBind_Clob(OracleConnection conn, Boolean isNClob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_CollectionOracleConnection">
            <summary>设置 OracleParameter.PostBind_Collection(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Date">
            <summary>设置 OracleParameter.PostBind_Date() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Decimal">
            <summary>设置 OracleParameter.PostBind_Decimal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Double">
            <summary>设置 OracleParameter.PostBind_Double() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Int16">
            <summary>设置 OracleParameter.PostBind_Int16() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Int32">
            <summary>设置 OracleParameter.PostBind_Int32() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Int64">
            <summary>设置 OracleParameter.PostBind_Int64() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_IntervalDS">
            <summary>设置 OracleParameter.PostBind_IntervalDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_IntervalYM">
            <summary>设置 OracleParameter.PostBind_IntervalYM() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_OracleObjectOracleConnection">
            <summary>设置 OracleParameter.PostBind_OracleObject(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_OracleRefOracleConnection">
            <summary>设置 OracleParameter.PostBind_OracleRef(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Raw">
            <summary>设置 OracleParameter.PostBind_Raw() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_Single">
            <summary>设置 OracleParameter.PostBind_Single() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_TimeStamp">
            <summary>设置 OracleParameter.PostBind_TimeStamp() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_TimeStampLTZ">
            <summary>设置 OracleParameter.PostBind_TimeStampLTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_TimeStampTZ">
            <summary>设置 OracleParameter.PostBind_TimeStampTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PostBind_XmlTypeOracleConnection">
            <summary>设置 OracleParameter.PostBind_XmlType(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBindFreeOracleConnectionInt32">
            <summary>设置 OracleParameter.PreBindFree(OracleConnection conn, Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBindOracleConnectionIntPtrInt32">
            <summary>设置 OracleParameter.PreBind(OracleConnection conn, IntPtr errCtx, Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_BFileOracleConnection">
            <summary>设置 OracleParameter.PreBind_BFile(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_BlobOracleConnection">
            <summary>设置 OracleParameter.PreBind_Blob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Byte">
            <summary>设置 OracleParameter.PreBind_Byte() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Char">
            <summary>设置 OracleParameter.PreBind_Char() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_ClobOracleConnection">
            <summary>设置 OracleParameter.PreBind_Clob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_CollectionOracleConnection">
            <summary>设置 OracleParameter.PreBind_Collection(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Date">
            <summary>设置 OracleParameter.PreBind_Date() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Decimal">
            <summary>设置 OracleParameter.PreBind_Decimal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_DoubleOracleConnectionOracleDbType">
            <summary>设置 OracleParameter.PreBind_Double(OracleConnection conn, OracleDbType OraDbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Int16">
            <summary>设置 OracleParameter.PreBind_Int16() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Int32">
            <summary>设置 OracleParameter.PreBind_Int32() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Int64">
            <summary>设置 OracleParameter.PreBind_Int64() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_IntervalDS">
            <summary>设置 OracleParameter.PreBind_IntervalDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_IntervalYM">
            <summary>设置 OracleParameter.PreBind_IntervalYM() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_ObjectOracleConnection">
            <summary>设置 OracleParameter.PreBind_Object(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_OracleObjectOracleConnection">
            <summary>设置 OracleParameter.PreBind_OracleObject(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_OracleRefOracleConnection">
            <summary>设置 OracleParameter.PreBind_OracleRef(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_Raw">
            <summary>设置 OracleParameter.PreBind_Raw() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_RefCursorOracleConnection">
            <summary>设置 OracleParameter.PreBind_RefCursor(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_SingleOracleConnectionOracleDbType">
            <summary>设置 OracleParameter.PreBind_Single(OracleConnection conn, OracleDbType OraDbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_TimeStampLTZOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStampLTZ(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_TimeStampOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStamp(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_TimeStampTZOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStampTZ(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PreBind_XmlTypeOracleConnection">
            <summary>设置 OracleParameter.PreBind_XmlType(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PrecisionGet">
            <summary>设置 OracleParameter.get_Precision() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.PrecisionSetByte">
            <summary>设置 OracleParameter.set_Precision(Byte value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ResetCtxInt32">
            <summary>设置 OracleParameter.ResetCtx(Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ResetDbType">
            <summary>设置 OracleParameter.ResetDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ResetOracleDbType">
            <summary>设置 OracleParameter.ResetOracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ResetUDTInd">
            <summary>设置 OracleParameter.ResetUDTInd() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ScaleGet">
            <summary>设置 OracleParameter.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ScaleSetByte">
            <summary>设置 OracleParameter.set_Scale(Byte value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetArrayOfLenInt32Int32Array">
            <summary>设置 OracleParameter.SetArrayOfLen(Int32 valueSize, Int32[] alenp) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxByteInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Byte b, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxDoubleInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Double d, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxInt16Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int16 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxInt32Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int32 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxInt64Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int64 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxIntPtrInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(IntPtr ip, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetPrmValCtxSingleInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Single s, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetSizeInt32">
            <summary>设置 OracleParameter.SetSize(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetStatusInt32">
            <summary>设置 OracleParameter.SetStatus(Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetUDTFromArrayOracleConnectionObjectInt32">
            <summary>设置 OracleParameter.SetUDTFromArray(OracleConnection conn, Object array, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetUDTFromCustomObjectOracleConnectionIOracleCustomTypeInt32">
            <summary>设置 OracleParameter.SetUDTFromCustomObject(OracleConnection conn, IOracleCustomType customObj, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SetUdtDescriptorOracleConnection">
            <summary>设置 OracleParameter.SetUdtDescriptor(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ShouldSerializeDbType">
            <summary>设置 OracleParameter.ShouldSerializeDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ShouldSerializeOracleDbType">
            <summary>设置 OracleParameter.ShouldSerializeOracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SizeGet">
            <summary>设置 OracleParameter.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SizeSetInt32">
            <summary>设置 OracleParameter.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceColumnGet">
            <summary>设置 OracleParameter.get_SourceColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceColumnNullMappingGet">
            <summary>设置 OracleParameter.get_SourceColumnNullMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceColumnNullMappingSetBoolean">
            <summary>设置 OracleParameter.set_SourceColumnNullMapping(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceColumnSetString">
            <summary>设置 OracleParameter.set_SourceColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceVersionGet">
            <summary>设置 OracleParameter.get_SourceVersion() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.SourceVersionSetDataRowVersion">
            <summary>设置 OracleParameter.set_SourceVersion(DataRowVersion value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.StatusGet">
            <summary>设置 OracleParameter.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.StatusSetOracleParameterStatus">
            <summary>设置 OracleParameter.set_Status(OracleParameterStatus value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ToString01">
            <summary>设置 OracleParameter.ToString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.UdtTypeNameGet">
            <summary>设置 OracleParameter.get_UdtTypeName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.UdtTypeNameSetString">
            <summary>设置 OracleParameter.set_UdtTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ValueGet">
            <summary>设置 OracleParameter.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.AllInstances.ValueSetObject">
            <summary>设置 OracleParameter.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ArrayBindSizeGet">
            <summary>设置 OracleParameter.get_ArrayBindSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ArrayBindSizeSetInt32Array">
            <summary>设置 OracleParameter.set_ArrayBindSize(Int32[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ArrayBindStatusGet">
            <summary>设置 OracleParameter.get_ArrayBindStatus() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ArrayBindStatusSetOracleParameterStatusArray">
            <summary>设置 OracleParameter.set_ArrayBindStatus(OracleParameterStatus[] value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Bind(System.Data.IDataParameter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Bind(System.Data.IDbDataParameter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Clone">
            <summary>设置 OracleParameter.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.CollectionTypeGet">
            <summary>设置 OracleParameter.get_CollectionType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.CollectionTypeSetOracleCollectionType">
            <summary>设置 OracleParameter.set_CollectionType(OracleCollectionType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Constructor">
            <summary>设置 OracleParameter.OracleParameter() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringObject">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbType">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType oraType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32ObjectParameterDirection">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Int32 size, Object obj, ParameterDirection direction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType oraType, Int32 size, ParameterDirection direction, Boolean isNullable, Byte precision, Byte scale, String srcColumn, DataRowVersion srcVersion, Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32String">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Int32 size, String srcColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32StringDataRowVersion">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Int32 size, String srcColumn, DataRowVersion version) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeInt32StringDataRowVersionObject">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Int32 size, String srcColumn, DataRowVersion version, Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeObjectParameterDirection">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, Object obj, ParameterDirection direction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ConstructorStringOracleDbTypeParameterDirection">
            <summary>设置 OracleParameter.OracleParameter(String parameterName, OracleDbType type, ParameterDirection direction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.CreateCustomObjectOracleConnectionInt32">
            <summary>设置 OracleParameter.CreateCustomObject(OracleConnection conn, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.CreateOracleRefOracleConnectionInt32">
            <summary>设置 OracleParameter.CreateOracleRef(OracleConnection conn, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.DbTypeGet">
            <summary>设置 OracleParameter.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.DbTypeSetDbType">
            <summary>设置 OracleParameter.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.DirectionGet">
            <summary>设置 OracleParameter.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.DirectionSetParameterDirection">
            <summary>设置 OracleParameter.set_Direction(ParameterDirection value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.Dispose">
            <summary>设置 OracleParameter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.DisposeBoolean">
            <summary>设置 OracleParameter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.FreeDataBuffer">
            <summary>设置 OracleParameter.FreeDataBuffer() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetBindingSizeArrayInt32">
            <summary>设置 OracleParameter.GetBindingSize(Array buffer, Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetBindingSizeInt32Int32">
            <summary>设置 OracleParameter.GetBindingSize(Int32 bufferLength, Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetBindingSize_CharInt32">
            <summary>设置 OracleParameter.GetBindingSize_Char(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetBindingSize_RawInt32">
            <summary>设置 OracleParameter.GetBindingSize_Raw(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetPreBindBuffer_CharInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Char(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetPreBindBuffer_RawInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Raw(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetPreBindBuffer_StrInt32">
            <summary>设置 OracleParameter.GetPreBindBuffer_Str(Int32 idx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.GetPreBindStrObject">
            <summary>设置 OracleParameter.GetPreBindStr(Object bindValue) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.IsElemTypeTypeObjectInt32">
            <summary>设置 OracleParameter.IsElemType(Type type, Object value, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.IsNullableGet">
            <summary>设置 OracleParameter.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.IsNullableSetBoolean">
            <summary>设置 OracleParameter.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.IsProviderSpecificNullValueObject">
            <summary>设置 OracleParameter.IsProviderSpecificNullValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.OffsetGet">
            <summary>设置 OracleParameter.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.OffsetSetInt32">
            <summary>设置 OracleParameter.set_Offset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.OracleDbTypeGet">
            <summary>设置 OracleParameter.get_OracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.OracleDbTypeSetOracleDbType">
            <summary>设置 OracleParameter.set_OracleDbType(OracleDbType value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ParameterNameGet">
            <summary>设置 OracleParameter.get_ParameterName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ParameterNameSetString">
            <summary>设置 OracleParameter.set_ParameterName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_BFileOracleConnection">
            <summary>设置 OracleParameter.PostBind_BFile(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_BlobOracleConnection">
            <summary>设置 OracleParameter.PostBind_Blob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Byte">
            <summary>设置 OracleParameter.PostBind_Byte() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Char">
            <summary>设置 OracleParameter.PostBind_Char() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_ClobOracleConnectionBoolean">
            <summary>设置 OracleParameter.PostBind_Clob(OracleConnection conn, Boolean isNClob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_CollectionOracleConnection">
            <summary>设置 OracleParameter.PostBind_Collection(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Date">
            <summary>设置 OracleParameter.PostBind_Date() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Decimal">
            <summary>设置 OracleParameter.PostBind_Decimal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Double">
            <summary>设置 OracleParameter.PostBind_Double() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Int16">
            <summary>设置 OracleParameter.PostBind_Int16() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Int32">
            <summary>设置 OracleParameter.PostBind_Int32() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Int64">
            <summary>设置 OracleParameter.PostBind_Int64() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_IntervalDS">
            <summary>设置 OracleParameter.PostBind_IntervalDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_IntervalYM">
            <summary>设置 OracleParameter.PostBind_IntervalYM() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_OracleObjectOracleConnection">
            <summary>设置 OracleParameter.PostBind_OracleObject(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_OracleRefOracleConnection">
            <summary>设置 OracleParameter.PostBind_OracleRef(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Raw">
            <summary>设置 OracleParameter.PostBind_Raw() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_Single">
            <summary>设置 OracleParameter.PostBind_Single() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_TimeStamp">
            <summary>设置 OracleParameter.PostBind_TimeStamp() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_TimeStampLTZ">
            <summary>设置 OracleParameter.PostBind_TimeStampLTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_TimeStampTZ">
            <summary>设置 OracleParameter.PostBind_TimeStampTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PostBind_XmlTypeOracleConnection">
            <summary>设置 OracleParameter.PostBind_XmlType(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBindFreeOracleConnectionInt32">
            <summary>设置 OracleParameter.PreBindFree(OracleConnection conn, Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBindOracleConnectionIntPtrInt32">
            <summary>设置 OracleParameter.PreBind(OracleConnection conn, IntPtr errCtx, Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_BFileOracleConnection">
            <summary>设置 OracleParameter.PreBind_BFile(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_BlobOracleConnection">
            <summary>设置 OracleParameter.PreBind_Blob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Byte">
            <summary>设置 OracleParameter.PreBind_Byte() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Char">
            <summary>设置 OracleParameter.PreBind_Char() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_ClobOracleConnection">
            <summary>设置 OracleParameter.PreBind_Clob(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_CollectionOracleConnection">
            <summary>设置 OracleParameter.PreBind_Collection(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Date">
            <summary>设置 OracleParameter.PreBind_Date() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Decimal">
            <summary>设置 OracleParameter.PreBind_Decimal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_DoubleOracleConnectionOracleDbType">
            <summary>设置 OracleParameter.PreBind_Double(OracleConnection conn, OracleDbType OraDbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Int16">
            <summary>设置 OracleParameter.PreBind_Int16() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Int32">
            <summary>设置 OracleParameter.PreBind_Int32() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Int64">
            <summary>设置 OracleParameter.PreBind_Int64() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_IntervalDS">
            <summary>设置 OracleParameter.PreBind_IntervalDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_IntervalYM">
            <summary>设置 OracleParameter.PreBind_IntervalYM() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_ObjectOracleConnection">
            <summary>设置 OracleParameter.PreBind_Object(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_OracleObjectOracleConnection">
            <summary>设置 OracleParameter.PreBind_OracleObject(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_OracleRefOracleConnection">
            <summary>设置 OracleParameter.PreBind_OracleRef(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_Raw">
            <summary>设置 OracleParameter.PreBind_Raw() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_RefCursorOracleConnection">
            <summary>设置 OracleParameter.PreBind_RefCursor(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_SingleOracleConnectionOracleDbType">
            <summary>设置 OracleParameter.PreBind_Single(OracleConnection conn, OracleDbType OraDbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_TimeStampLTZOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStampLTZ(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_TimeStampOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStamp(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_TimeStampTZOracleConnectionIntPtr">
            <summary>设置 OracleParameter.PreBind_TimeStampTZ(OracleConnection conn, IntPtr errCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PreBind_XmlTypeOracleConnection">
            <summary>设置 OracleParameter.PreBind_XmlType(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PrecisionGet">
            <summary>设置 OracleParameter.get_Precision() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.PrecisionSetByte">
            <summary>设置 OracleParameter.set_Precision(Byte value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ResetCtxInt32">
            <summary>设置 OracleParameter.ResetCtx(Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ResetDbType">
            <summary>设置 OracleParameter.ResetDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ResetOracleDbType">
            <summary>设置 OracleParameter.ResetOracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ResetUDTInd">
            <summary>设置 OracleParameter.ResetUDTInd() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ScaleGet">
            <summary>设置 OracleParameter.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ScaleSetByte">
            <summary>设置 OracleParameter.set_Scale(Byte value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetArrayOfLenInt32Int32Array">
            <summary>设置 OracleParameter.SetArrayOfLen(Int32 valueSize, Int32[] alenp) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxByteInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Byte b, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxDoubleInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Double d, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxInt16Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int16 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxInt32Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int32 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxInt64Int32">
            <summary>设置 OracleParameter.SetPrmValCtx(Int64 i, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxIntPtrInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(IntPtr ip, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetPrmValCtxSingleInt32">
            <summary>设置 OracleParameter.SetPrmValCtx(Single s, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetSizeInt32">
            <summary>设置 OracleParameter.SetSize(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetStatusInt32">
            <summary>设置 OracleParameter.SetStatus(Int32 arraySize) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetUDTFromArrayOracleConnectionObjectInt32">
            <summary>设置 OracleParameter.SetUDTFromArray(OracleConnection conn, Object array, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetUDTFromCustomObjectOracleConnectionIOracleCustomTypeInt32">
            <summary>设置 OracleParameter.SetUDTFromCustomObject(OracleConnection conn, IOracleCustomType customObj, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SetUdtDescriptorOracleConnection">
            <summary>设置 OracleParameter.SetUdtDescriptor(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ShouldSerializeDbType">
            <summary>设置 OracleParameter.ShouldSerializeDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ShouldSerializeOracleDbType">
            <summary>设置 OracleParameter.ShouldSerializeOracleDbType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SizeGet">
            <summary>设置 OracleParameter.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SizeSetInt32">
            <summary>设置 OracleParameter.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceColumnGet">
            <summary>设置 OracleParameter.get_SourceColumn() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceColumnNullMappingGet">
            <summary>设置 OracleParameter.get_SourceColumnNullMapping() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceColumnNullMappingSetBoolean">
            <summary>设置 OracleParameter.set_SourceColumnNullMapping(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceColumnSetString">
            <summary>设置 OracleParameter.set_SourceColumn(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceVersionGet">
            <summary>设置 OracleParameter.get_SourceVersion() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.SourceVersionSetDataRowVersion">
            <summary>设置 OracleParameter.set_SourceVersion(DataRowVersion value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.StatusGet">
            <summary>设置 OracleParameter.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.StatusSetOracleParameterStatus">
            <summary>设置 OracleParameter.set_Status(OracleParameterStatus value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ToString">
            <summary>设置 OracleParameter.ToString() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.UdtTypeNameGet">
            <summary>设置 OracleParameter.get_UdtTypeName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.UdtTypeNameSetString">
            <summary>设置 OracleParameter.set_UdtTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ValueGet">
            <summary>设置 OracleParameter.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameter.ValueSetObject">
            <summary>设置 OracleParameter.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection">
            <summary>Oracle.DataAccess.Client.OracleParameterCollection 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.#ctor(Oracle.DataAccess.Client.OracleParameterCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddObject">
            <summary>设置 OracleParameterCollection.Add(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddOracleParameter">
            <summary>设置 OracleParameterCollection.Add(OracleParameter param) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddRangeArray">
            <summary>设置 OracleParameterCollection.AddRange(Array paramArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringObject">
            <summary>设置 OracleParameterCollection.Add(String name, Object val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbType">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeInt32">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeInt32ObjectParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, Object val, ParameterDirection dir) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, ParameterDirection dir, Boolean isNullable, Byte precision, Byte scale, String srcColumn, DataRowVersion version, Object val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeInt32String">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, String srcColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeObjectParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Object val, ParameterDirection dir) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AddStringOracleDbTypeParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, ParameterDirection direction) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddObject">
            <summary>设置 OracleParameterCollection.Add(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddOracleParameter">
            <summary>设置 OracleParameterCollection.Add(OracleParameter param) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddRangeArray">
            <summary>设置 OracleParameterCollection.AddRange(Array paramArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringObject">
            <summary>设置 OracleParameterCollection.Add(String name, Object val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbType">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeInt32">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeInt32ObjectParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, Object val, ParameterDirection dir) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, ParameterDirection dir, Boolean isNullable, Byte precision, Byte scale, String srcColumn, DataRowVersion version, Object val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeInt32String">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Int32 size, String srcColumn) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeObjectParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, Object val, ParameterDirection dir) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.AddStringOracleDbTypeParameterDirection">
            <summary>设置 OracleParameterCollection.Add(String name, OracleDbType dbType, ParameterDirection direction) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.Clear">
            <summary>设置 OracleParameterCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ContainsObject">
            <summary>设置 OracleParameterCollection.Contains(Object item) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ContainsString">
            <summary>设置 OracleParameterCollection.Contains(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.CopyToArrayInt32">
            <summary>设置 OracleParameterCollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.CountGet">
            <summary>设置 OracleParameterCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.FindParamByNameString">
            <summary>设置 OracleParameterCollection.FindParamByName(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.GetEnumerator">
            <summary>设置 OracleParameterCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.GetParameterInt32">
            <summary>设置 OracleParameterCollection.GetParameter(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.GetParameterString">
            <summary>设置 OracleParameterCollection.GetParameter(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.IndexOfObject">
            <summary>设置 OracleParameterCollection.IndexOf(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.IndexOfString">
            <summary>设置 OracleParameterCollection.IndexOf(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.InsertInt32Object">
            <summary>设置 OracleParameterCollection.Insert(Int32 index, Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.IsFixedSizeGet">
            <summary>设置 OracleParameterCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.IsReadOnlyGet">
            <summary>设置 OracleParameterCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.IsSynchronizedGet">
            <summary>设置 OracleParameterCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ItemGetInt32">
            <summary>设置 OracleParameterCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ItemGetString">
            <summary>设置 OracleParameterCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ItemSetInt32OracleParameter">
            <summary>设置 OracleParameterCollection.set_Item(Int32 index, OracleParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.ItemSetStringOracleParameter">
            <summary>设置 OracleParameterCollection.set_Item(String name, OracleParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.RemoveAtInt32">
            <summary>设置 OracleParameterCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.RemoveAtString">
            <summary>设置 OracleParameterCollection.RemoveAt(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.RemoveObject">
            <summary>设置 OracleParameterCollection.Remove(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.SetParameterInt32DbParameter">
            <summary>设置 OracleParameterCollection.SetParameter(Int32 index, DbParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.SetParameterStringDbParameter">
            <summary>设置 OracleParameterCollection.SetParameter(String parameterName, DbParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.AllInstances.SyncRootGet">
            <summary>设置 OracleParameterCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Bind(System.Data.IDataParameterCollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Clear">
            <summary>设置 OracleParameterCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.Constructor">
            <summary>设置 OracleParameterCollection.OracleParameterCollection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ContainsObject">
            <summary>设置 OracleParameterCollection.Contains(Object item) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ContainsString">
            <summary>设置 OracleParameterCollection.Contains(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.CopyToArrayInt32">
            <summary>设置 OracleParameterCollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.CountGet">
            <summary>设置 OracleParameterCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.FindParamByNameString">
            <summary>设置 OracleParameterCollection.FindParamByName(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.GetEnumerator">
            <summary>设置 OracleParameterCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.GetParameterInt32">
            <summary>设置 OracleParameterCollection.GetParameter(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.GetParameterString">
            <summary>设置 OracleParameterCollection.GetParameter(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.IndexOfObject">
            <summary>设置 OracleParameterCollection.IndexOf(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.IndexOfString">
            <summary>设置 OracleParameterCollection.IndexOf(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.InsertInt32Object">
            <summary>设置 OracleParameterCollection.Insert(Int32 index, Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.IsFixedSizeGet">
            <summary>设置 OracleParameterCollection.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.IsReadOnlyGet">
            <summary>设置 OracleParameterCollection.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.IsSynchronizedGet">
            <summary>设置 OracleParameterCollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ItemGetInt32">
            <summary>设置 OracleParameterCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ItemGetString">
            <summary>设置 OracleParameterCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ItemSetInt32OracleParameter">
            <summary>设置 OracleParameterCollection.set_Item(Int32 index, OracleParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.ItemSetStringOracleParameter">
            <summary>设置 OracleParameterCollection.set_Item(String name, OracleParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.RemoveAtInt32">
            <summary>设置 OracleParameterCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.RemoveAtString">
            <summary>设置 OracleParameterCollection.RemoveAt(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.RemoveObject">
            <summary>设置 OracleParameterCollection.Remove(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.SetParameterInt32DbParameter">
            <summary>设置 OracleParameterCollection.SetParameter(Int32 index, DbParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.SetParameterStringDbParameter">
            <summary>设置 OracleParameterCollection.SetParameter(String parameterName, DbParameter value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleParameterCollection.SyncRootGet">
            <summary>设置 OracleParameterCollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs">
            <summary>Oracle.DataAccess.Client.OracleRowUpdatedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.#ctor(Oracle.DataAccess.Client.OracleRowUpdatedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.AllInstances.CommandGet">
            <summary>设置 OracleRowUpdatedEventArgs.get_Command() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.CommandGet">
            <summary>设置 OracleRowUpdatedEventArgs.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatedEventArgs.ConstructorDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleRowUpdatedEventArgs.OracleRowUpdatedEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs">
            <summary>Oracle.DataAccess.Client.OracleRowUpdatingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.#ctor(Oracle.DataAccess.Client.OracleRowUpdatingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.AllInstances.BaseCommandGet">
            <summary>设置 OracleRowUpdatingEventArgs.get_BaseCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.AllInstances.BaseCommandSetIDbCommand">
            <summary>设置 OracleRowUpdatingEventArgs.set_BaseCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.AllInstances.CommandGet">
            <summary>设置 OracleRowUpdatingEventArgs.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.AllInstances.CommandSetOracleCommand">
            <summary>设置 OracleRowUpdatingEventArgs.set_Command(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.BaseCommandGet">
            <summary>设置 OracleRowUpdatingEventArgs.get_BaseCommand() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.BaseCommandSetIDbCommand">
            <summary>设置 OracleRowUpdatingEventArgs.set_BaseCommand(IDbCommand value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.CommandGet">
            <summary>设置 OracleRowUpdatingEventArgs.get_Command() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.CommandSetOracleCommand">
            <summary>设置 OracleRowUpdatingEventArgs.set_Command(OracleCommand value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowUpdatingEventArgs.ConstructorDataRowIDbCommandStatementTypeDataTableMapping">
            <summary>设置 OracleRowUpdatingEventArgs.OracleRowUpdatingEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs">
            <summary>Oracle.DataAccess.Client.OracleRowsCopiedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.#ctor(Oracle.DataAccess.Client.OracleRowsCopiedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AbortGet">
            <summary>设置 OracleRowsCopiedEventArgs.get_Abort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AbortSetBoolean">
            <summary>设置 OracleRowsCopiedEventArgs.set_Abort(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AllInstances.AbortGet">
            <summary>设置 OracleRowsCopiedEventArgs.get_Abort() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AllInstances.AbortSetBoolean">
            <summary>设置 OracleRowsCopiedEventArgs.set_Abort(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.AllInstances.RowsCopiedGet">
            <summary>设置 OracleRowsCopiedEventArgs.get_RowsCopied() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.ConstructorInt64">
            <summary>设置 OracleRowsCopiedEventArgs.OracleRowsCopiedEventArgs(Int64 rowsCopied) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleRowsCopiedEventArgs.RowsCopiedGet">
            <summary>设置 OracleRowsCopiedEventArgs.get_RowsCopied() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction">
            <summary>Oracle.DataAccess.Client.OracleTransaction 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.#ctor(Oracle.DataAccess.Client.OracleTransaction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.Commit">
            <summary>设置 OracleTransaction.Commit() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.CompletedGet">
            <summary>设置 OracleTransaction.get_Completed() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.ConnectionGet">
            <summary>设置 OracleTransaction.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.DbConnectionGet">
            <summary>设置 OracleTransaction.get_DbConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.Dispose">
            <summary>设置 OracleTransaction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.DisposeBoolean">
            <summary>设置 OracleTransaction.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.IsolationLevelGet">
            <summary>设置 OracleTransaction.get_IsolationLevel() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.Rollback">
            <summary>设置 OracleTransaction.Rollback() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.RollbackString">
            <summary>设置 OracleTransaction.Rollback(String savepointName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.AllInstances.SaveString">
            <summary>设置 OracleTransaction.Save(String savepointName) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Bind(System.Data.IDbTransaction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Commit">
            <summary>设置 OracleTransaction.Commit() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.CompletedGet">
            <summary>设置 OracleTransaction.get_Completed() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.ConnectionGet">
            <summary>设置 OracleTransaction.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.ConstructorOracleConnectionIsolationLevelInt32">
            <summary>设置 OracleTransaction.OracleTransaction(OracleConnection connection, IsolationLevel isolationLevel, Int32 txnHndAllocated) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.DbConnectionGet">
            <summary>设置 OracleTransaction.get_DbConnection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Dispose">
            <summary>设置 OracleTransaction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.DisposeBoolean">
            <summary>设置 OracleTransaction.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.IsolationLevelGet">
            <summary>设置 OracleTransaction.get_IsolationLevel() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.Rollback">
            <summary>设置 OracleTransaction.Rollback() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.RollbackString">
            <summary>设置 OracleTransaction.Rollback(String savepointName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleTransaction.SaveString">
            <summary>设置 OracleTransaction.Save(String savepointName) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties">
            <summary>Oracle.DataAccess.Client.OracleXmlQueryProperties 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.#ctor(Oracle.DataAccess.Client.OracleXmlQueryProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.Clone">
            <summary>设置 OracleXmlQueryProperties.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.MaxRowsGet">
            <summary>设置 OracleXmlQueryProperties.get_MaxRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.MaxRowsSetInt32">
            <summary>设置 OracleXmlQueryProperties.set_MaxRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.RootTagGet">
            <summary>设置 OracleXmlQueryProperties.get_RootTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.RootTagSetString">
            <summary>设置 OracleXmlQueryProperties.set_RootTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.RowTagGet">
            <summary>设置 OracleXmlQueryProperties.get_RowTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.RowTagSetString">
            <summary>设置 OracleXmlQueryProperties.set_RowTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.XsltGet">
            <summary>设置 OracleXmlQueryProperties.get_Xslt() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.XsltParamsGet">
            <summary>设置 OracleXmlQueryProperties.get_XsltParams() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.XsltParamsSetString">
            <summary>设置 OracleXmlQueryProperties.set_XsltParams(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.AllInstances.XsltSetString">
            <summary>设置 OracleXmlQueryProperties.set_Xslt(String value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.Clone">
            <summary>设置 OracleXmlQueryProperties.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.Constructor">
            <summary>设置 OracleXmlQueryProperties.OracleXmlQueryProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.MaxRowsGet">
            <summary>设置 OracleXmlQueryProperties.get_MaxRows() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.MaxRowsSetInt32">
            <summary>设置 OracleXmlQueryProperties.set_MaxRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.RootTagGet">
            <summary>设置 OracleXmlQueryProperties.get_RootTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.RootTagSetString">
            <summary>设置 OracleXmlQueryProperties.set_RootTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.RowTagGet">
            <summary>设置 OracleXmlQueryProperties.get_RowTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.RowTagSetString">
            <summary>设置 OracleXmlQueryProperties.set_RowTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.XsltGet">
            <summary>设置 OracleXmlQueryProperties.get_Xslt() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.XsltParamsGet">
            <summary>设置 OracleXmlQueryProperties.get_XsltParams() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.XsltParamsSetString">
            <summary>设置 OracleXmlQueryProperties.set_XsltParams(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlQueryProperties.XsltSetString">
            <summary>设置 OracleXmlQueryProperties.set_Xslt(String value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties">
            <summary>Oracle.DataAccess.Client.OracleXmlSaveProperties 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.#ctor(Oracle.DataAccess.Client.OracleXmlSaveProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.Clone">
            <summary>设置 OracleXmlSaveProperties.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.KeyColumnsListGet">
            <summary>设置 OracleXmlSaveProperties.get_KeyColumnsList() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.KeyColumnsListSetStringArray">
            <summary>设置 OracleXmlSaveProperties.set_KeyColumnsList(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.RowTagGet">
            <summary>设置 OracleXmlSaveProperties.get_RowTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.RowTagSetString">
            <summary>设置 OracleXmlSaveProperties.set_RowTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.TableGet">
            <summary>设置 OracleXmlSaveProperties.get_Table() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.TableSetString">
            <summary>设置 OracleXmlSaveProperties.set_Table(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.UpdateColumnsListGet">
            <summary>设置 OracleXmlSaveProperties.get_UpdateColumnsList() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.UpdateColumnsListSetStringArray">
            <summary>设置 OracleXmlSaveProperties.set_UpdateColumnsList(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.XsltGet">
            <summary>设置 OracleXmlSaveProperties.get_Xslt() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.XsltParamsGet">
            <summary>设置 OracleXmlSaveProperties.get_XsltParams() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.XsltParamsSetString">
            <summary>设置 OracleXmlSaveProperties.set_XsltParams(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.AllInstances.XsltSetString">
            <summary>设置 OracleXmlSaveProperties.set_Xslt(String value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.Clone">
            <summary>设置 OracleXmlSaveProperties.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.Constructor">
            <summary>设置 OracleXmlSaveProperties.OracleXmlSaveProperties() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.KeyColumnsListGet">
            <summary>设置 OracleXmlSaveProperties.get_KeyColumnsList() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.KeyColumnsListSetStringArray">
            <summary>设置 OracleXmlSaveProperties.set_KeyColumnsList(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.RowTagGet">
            <summary>设置 OracleXmlSaveProperties.get_RowTag() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.RowTagSetString">
            <summary>设置 OracleXmlSaveProperties.set_RowTag(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.TableGet">
            <summary>设置 OracleXmlSaveProperties.get_Table() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.TableSetString">
            <summary>设置 OracleXmlSaveProperties.set_Table(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.UpdateColumnsListGet">
            <summary>设置 OracleXmlSaveProperties.get_UpdateColumnsList() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.UpdateColumnsListSetStringArray">
            <summary>设置 OracleXmlSaveProperties.set_UpdateColumnsList(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.XsltGet">
            <summary>设置 OracleXmlSaveProperties.get_Xslt() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.XsltParamsGet">
            <summary>设置 OracleXmlSaveProperties.get_XsltParams() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.XsltParamsSetString">
            <summary>设置 OracleXmlSaveProperties.set_XsltParams(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.ShimOracleXmlSaveProperties.XsltSetString">
            <summary>设置 OracleXmlSaveProperties.set_Xslt(String value) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.StubOracleDependency">
            <summary>Oracle.DataAccess.Client.OracleDependency 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleDependency.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleDependency.#ctor(Oracle.DataAccess.Client.OracleCommand)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleDependency.#ctor(Oracle.DataAccess.Client.OracleCommand,System.Boolean,System.Int64,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleDependency.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleDependency.InitializeStub">
            <summary>初始化 type StubOracleDependency 的新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleDependency.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleDependency.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs">
            <summary>Oracle.DataAccess.Client.OracleRowsCopiedEventArgs 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs.#ctor(System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs.InitializeStub">
            <summary>初始化 type StubOracleRowsCopiedEventArgs 的新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Client.Fakes.StubOracleRowsCopiedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute">
            <summary>Oracle.DataAccess.Types.OracleArrayMappingAttribute 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.#ctor(Oracle.DataAccess.Types.OracleArrayMappingAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleArrayMappingAttribute.Constructor">
            <summary>设置 OracleArrayMappingAttribute.OracleArrayMappingAttribute() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBFile">
            <summary>Oracle.DataAccess.Types.OracleBFile 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.#ctor(Oracle.DataAccess.Types.OracleBFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CanReadGet">
            <summary>设置 OracleBFile.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CanSeekGet">
            <summary>设置 OracleBFile.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CanWriteGet">
            <summary>设置 OracleBFile.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.Clone">
            <summary>设置 OracleBFile.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.Close">
            <summary>设置 OracleBFile.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CloseFile">
            <summary>设置 OracleBFile.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CompareInt64OracleBFileInt64Int64">
            <summary>设置 OracleBFile.Compare(Int64 src_offset, OracleBFile obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.ConnectionGet">
            <summary>设置 OracleBFile.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToInt64OracleBlobInt64Int64">
            <summary>设置 OracleBFile.CopyTo(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToInt64OracleClobInt64Int64">
            <summary>设置 OracleBFile.CopyTo(Int64 src_offset, OracleClob obj, Int64 amount, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToOracleBlob">
            <summary>设置 OracleBFile.CopyTo(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToOracleBlobInt64">
            <summary>设置 OracleBFile.CopyTo(OracleBlob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToOracleClob">
            <summary>设置 OracleBFile.CopyTo(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.CopyToOracleClobInt64">
            <summary>设置 OracleBFile.CopyTo(OracleClob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.DirectoryNameGet">
            <summary>设置 OracleBFile.get_DirectoryName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.DirectoryNameSetString">
            <summary>设置 OracleBFile.set_DirectoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.Dispose">
            <summary>设置 OracleBFile.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.DisposeBoolean">
            <summary>设置 OracleBFile.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.FileExistsGet">
            <summary>设置 OracleBFile.get_FileExists() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.FileNameGet">
            <summary>设置 OracleBFile.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.FileNameSetString">
            <summary>设置 OracleBFile.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.Flush">
            <summary>设置 OracleBFile.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.GetDFNames">
            <summary>设置 OracleBFile.GetDFNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.GetLobLocatorIntPtrOut">
            <summary>设置 OracleBFile.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.IsEmptyGet">
            <summary>设置 OracleBFile.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.IsEqualOracleBFile">
            <summary>设置 OracleBFile.IsEqual(OracleBFile obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.IsNullGet">
            <summary>设置 OracleBFile.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.IsOpenGet">
            <summary>设置 OracleBFile.get_IsOpen() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.KeepOciLobLoc">
            <summary>设置 OracleBFile.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.LengthGet">
            <summary>设置 OracleBFile.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.LobCtxGet">
            <summary>设置 OracleBFile.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.OpenFile">
            <summary>设置 OracleBFile.OpenFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.PositionGet">
            <summary>设置 OracleBFile.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.PositionSetInt64">
            <summary>设置 OracleBFile.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 OracleBFile.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.SearchByteArrayInt64Int64">
            <summary>设置 OracleBFile.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 OracleBFile.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.SetDFNames">
            <summary>设置 OracleBFile.SetDFNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.SetLengthInt64">
            <summary>设置 OracleBFile.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.ValueGet">
            <summary>设置 OracleBFile.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 OracleBFile.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CanReadGet">
            <summary>设置 OracleBFile.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CanSeekGet">
            <summary>设置 OracleBFile.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CanWriteGet">
            <summary>设置 OracleBFile.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Clone">
            <summary>设置 OracleBFile.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Close">
            <summary>设置 OracleBFile.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CloseFile">
            <summary>设置 OracleBFile.CloseFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CompareInt64OracleBFileInt64Int64">
            <summary>设置 OracleBFile.Compare(Int64 src_offset, OracleBFile obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConnectionGet">
            <summary>设置 OracleBFile.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Constructor">
            <summary>设置 OracleBFile.OracleBFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConstructorIntPtrInt32">
            <summary>设置 OracleBFile.OracleBFile(IntPtr opsLobLoc, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConstructorOracleConnection">
            <summary>设置 OracleBFile.OracleBFile(OracleConnection con) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConstructorOracleConnectionIntPtr">
            <summary>设置 OracleBFile.OracleBFile(OracleConnection con, IntPtr opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConstructorOracleConnectionIntPtrInt32">
            <summary>设置 OracleBFile.OracleBFile(OracleConnection con, IntPtr opsLobLoc, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ConstructorOracleConnectionStringString">
            <summary>设置 OracleBFile.OracleBFile(OracleConnection con, String directoryName, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToInt64OracleBlobInt64Int64">
            <summary>设置 OracleBFile.CopyTo(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToInt64OracleClobInt64Int64">
            <summary>设置 OracleBFile.CopyTo(Int64 src_offset, OracleClob obj, Int64 amount, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToOracleBlob">
            <summary>设置 OracleBFile.CopyTo(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToOracleBlobInt64">
            <summary>设置 OracleBFile.CopyTo(OracleBlob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToOracleClob">
            <summary>设置 OracleBFile.CopyTo(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.CopyToOracleClobInt64">
            <summary>设置 OracleBFile.CopyTo(OracleClob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.DirectoryNameGet">
            <summary>设置 OracleBFile.get_DirectoryName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.DirectoryNameSetString">
            <summary>设置 OracleBFile.set_DirectoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Dispose">
            <summary>设置 OracleBFile.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.DisposeBoolean">
            <summary>设置 OracleBFile.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.FileExistsGet">
            <summary>设置 OracleBFile.get_FileExists() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.FileNameGet">
            <summary>设置 OracleBFile.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.FileNameSetString">
            <summary>设置 OracleBFile.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.Flush">
            <summary>设置 OracleBFile.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.GetDFNames">
            <summary>设置 OracleBFile.GetDFNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.GetLobLocatorIntPtrOut">
            <summary>设置 OracleBFile.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.IsEmptyGet">
            <summary>设置 OracleBFile.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.IsEqualOracleBFile">
            <summary>设置 OracleBFile.IsEqual(OracleBFile obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.IsNullGet">
            <summary>设置 OracleBFile.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.IsOpenGet">
            <summary>设置 OracleBFile.get_IsOpen() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.KeepOciLobLoc">
            <summary>设置 OracleBFile.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.LengthGet">
            <summary>设置 OracleBFile.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.LobCtxGet">
            <summary>设置 OracleBFile.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.OpenFile">
            <summary>设置 OracleBFile.OpenFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.PositionGet">
            <summary>设置 OracleBFile.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.PositionSetInt64">
            <summary>设置 OracleBFile.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ReadByteArrayInt32Int32">
            <summary>设置 OracleBFile.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.SearchByteArrayInt64Int64">
            <summary>设置 OracleBFile.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.SeekInt64SeekOrigin">
            <summary>设置 OracleBFile.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.SetDFNames">
            <summary>设置 OracleBFile.SetDFNames() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.SetLengthInt64">
            <summary>设置 OracleBFile.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.StaticConstructor">
            <summary>设置 OracleBFile.OracleBFile() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.ValueGet">
            <summary>设置 OracleBFile.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBFile.WriteByteArrayInt32Int32">
            <summary>设置 OracleBFile.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBinary">
            <summary>Oracle.DataAccess.Types.OracleBinary 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.AdditionOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_Addition(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.ConcatOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.Concat(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.EqualityOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_Equality(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.EqualsOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.Equals(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.ExplicitOpOracleBinaryByteArray">
            <summary>设置 OracleBinary.op_Explicit(OracleBinary value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleBinary.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.GreaterThanOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_GreaterThan(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.GreaterThanOrEqualOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_GreaterThanOrEqual(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.GreaterThanOrEqualOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.GreaterThanOrEqual(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.GreaterThanOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.GreaterThan(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.ImplicitOpByteArrayOracleBinary">
            <summary>设置 OracleBinary.op_Implicit(Byte[] value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.InequalityOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_Inequality(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.LessThanOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_LessThan(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.LessThanOrEqualOpOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.op_LessThanOrEqual(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.LessThanOrEqualOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.LessThanOrEqual(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.LessThanOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.LessThan(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBinary.NotEqualsOracleBinaryOracleBinary">
            <summary>设置 OracleBinary.NotEquals(OracleBinary value1, OracleBinary value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBlob">
            <summary>Oracle.DataAccess.Types.OracleBlob 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.#ctor(Oracle.DataAccess.Types.OracleBlob)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.AppendByteArrayInt32Int32">
            <summary>设置 OracleBlob.Append(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.AppendOracleBlob">
            <summary>设置 OracleBlob.Append(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.BeginChunkWrite">
            <summary>设置 OracleBlob.BeginChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CanReadGet">
            <summary>设置 OracleBlob.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CanSeekGet">
            <summary>设置 OracleBlob.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CanWriteGet">
            <summary>设置 OracleBlob.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.Clone">
            <summary>设置 OracleBlob.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.Close">
            <summary>设置 OracleBlob.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CompareInt64OracleBlobInt64Int64">
            <summary>设置 OracleBlob.Compare(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.ConnectionGet">
            <summary>设置 OracleBlob.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CopyToInt64OracleBlobInt64Int64">
            <summary>设置 OracleBlob.CopyTo(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CopyToOracleBlob">
            <summary>设置 OracleBlob.CopyTo(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CopyToOracleBlobInt64">
            <summary>设置 OracleBlob.CopyTo(OracleBlob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.CreateTempLob">
            <summary>设置 OracleBlob.CreateTempLob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.Dispose">
            <summary>设置 OracleBlob.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.DisposeBoolean">
            <summary>设置 OracleBlob.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.EndChunkWrite">
            <summary>设置 OracleBlob.EndChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.Erase">
            <summary>设置 OracleBlob.Erase() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.EraseInt64Int64">
            <summary>设置 OracleBlob.Erase(Int64 offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.Flush">
            <summary>设置 OracleBlob.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.GetLobLocatorIntPtrOut">
            <summary>设置 OracleBlob.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.GetOptimumChunkSize">
            <summary>设置 OracleBlob.GetOptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.IsEmptyGet">
            <summary>设置 OracleBlob.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.IsEqualOracleBlob">
            <summary>设置 OracleBlob.IsEqual(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.IsInChunkWriteModeGet">
            <summary>设置 OracleBlob.get_IsInChunkWriteMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.IsNullGet">
            <summary>设置 OracleBlob.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.IsTemporaryGet">
            <summary>设置 OracleBlob.get_IsTemporary() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.KeepOciLobLoc">
            <summary>设置 OracleBlob.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.LengthGet">
            <summary>设置 OracleBlob.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.LobCtxGet">
            <summary>设置 OracleBlob.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.OptimumChunkSizeGet">
            <summary>设置 OracleBlob.get_OptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.PositionGet">
            <summary>设置 OracleBlob.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.PositionSetInt64">
            <summary>设置 OracleBlob.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 OracleBlob.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.SearchByteArrayInt64Int64">
            <summary>设置 OracleBlob.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 OracleBlob.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.SetLengthInt64">
            <summary>设置 OracleBlob.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.ValueGet">
            <summary>设置 OracleBlob.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 OracleBlob.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AppendByteArrayInt32Int32">
            <summary>设置 OracleBlob.Append(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.AppendOracleBlob">
            <summary>设置 OracleBlob.Append(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.BeginChunkWrite">
            <summary>设置 OracleBlob.BeginChunkWrite() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CanReadGet">
            <summary>设置 OracleBlob.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CanSeekGet">
            <summary>设置 OracleBlob.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CanWriteGet">
            <summary>设置 OracleBlob.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Clone">
            <summary>设置 OracleBlob.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Close">
            <summary>设置 OracleBlob.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CompareInt64OracleBlobInt64Int64">
            <summary>设置 OracleBlob.Compare(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConnectionGet">
            <summary>设置 OracleBlob.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Constructor">
            <summary>设置 OracleBlob.OracleBlob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorChar">
            <summary>设置 OracleBlob.OracleBlob(Char dummy) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorIntPtrBooleanBooleanInt32">
            <summary>设置 OracleBlob.OracleBlob(IntPtr opsLobLoc, Boolean bCaching, Boolean bTempLob, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorOracleConnection">
            <summary>设置 OracleBlob.OracleBlob(OracleConnection con) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorOracleConnectionBoolean">
            <summary>设置 OracleBlob.OracleBlob(OracleConnection con, Boolean bCaching) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorOracleConnectionIntPtrBooleanBoolean">
            <summary>设置 OracleBlob.OracleBlob(OracleConnection con, IntPtr opsLobCtx, Boolean bCaching, Boolean bTempLob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ConstructorOracleConnectionIntPtrBooleanBooleanInt32">
            <summary>设置 OracleBlob.OracleBlob(OracleConnection con, IntPtr opsLobLoc, Boolean bCaching, Boolean bTempLob, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CopyToInt64OracleBlobInt64Int64">
            <summary>设置 OracleBlob.CopyTo(Int64 src_offset, OracleBlob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CopyToOracleBlob">
            <summary>设置 OracleBlob.CopyTo(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CopyToOracleBlobInt64">
            <summary>设置 OracleBlob.CopyTo(OracleBlob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.CreateTempLob">
            <summary>设置 OracleBlob.CreateTempLob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Dispose">
            <summary>设置 OracleBlob.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.DisposeBoolean">
            <summary>设置 OracleBlob.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.EndChunkWrite">
            <summary>设置 OracleBlob.EndChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Erase">
            <summary>设置 OracleBlob.Erase() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.EraseInt64Int64">
            <summary>设置 OracleBlob.Erase(Int64 offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.Flush">
            <summary>设置 OracleBlob.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.GetLobLocatorIntPtrOut">
            <summary>设置 OracleBlob.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.GetOptimumChunkSize">
            <summary>设置 OracleBlob.GetOptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.IsEmptyGet">
            <summary>设置 OracleBlob.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.IsEqualOracleBlob">
            <summary>设置 OracleBlob.IsEqual(OracleBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.IsInChunkWriteModeGet">
            <summary>设置 OracleBlob.get_IsInChunkWriteMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.IsNullGet">
            <summary>设置 OracleBlob.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.IsTemporaryGet">
            <summary>设置 OracleBlob.get_IsTemporary() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.KeepOciLobLoc">
            <summary>设置 OracleBlob.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.LengthGet">
            <summary>设置 OracleBlob.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.LobCtxGet">
            <summary>设置 OracleBlob.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.OptimumChunkSizeGet">
            <summary>设置 OracleBlob.get_OptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.PositionGet">
            <summary>设置 OracleBlob.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.PositionSetInt64">
            <summary>设置 OracleBlob.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ReadByteArrayInt32Int32">
            <summary>设置 OracleBlob.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.SearchByteArrayInt64Int64">
            <summary>设置 OracleBlob.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.SeekInt64SeekOrigin">
            <summary>设置 OracleBlob.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.SetLengthInt64">
            <summary>设置 OracleBlob.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.StaticConstructor">
            <summary>设置 OracleBlob.OracleBlob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.ValueGet">
            <summary>设置 OracleBlob.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleBlob.WriteByteArrayInt32Int32">
            <summary>设置 OracleBlob.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleClob">
            <summary>Oracle.DataAccess.Types.OracleClob 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.#ctor(Oracle.DataAccess.Types.OracleClob)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.AppendByteArrayInt32Int32">
            <summary>设置 OracleClob.Append(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.AppendCharArrayInt32Int32">
            <summary>设置 OracleClob.Append(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.AppendOracleClob">
            <summary>设置 OracleClob.Append(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.BeginChunkWrite">
            <summary>设置 OracleClob.BeginChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CanReadGet">
            <summary>设置 OracleClob.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CanSeekGet">
            <summary>设置 OracleClob.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CanWriteGet">
            <summary>设置 OracleClob.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.Clone">
            <summary>设置 OracleClob.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.Close">
            <summary>设置 OracleClob.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CompareInt64OracleClobInt64Int64">
            <summary>设置 OracleClob.Compare(Int64 src_offset, OracleClob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.ConnectionGet">
            <summary>设置 OracleClob.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CopyToInt64OracleClobInt64Int64">
            <summary>设置 OracleClob.CopyTo(Int64 src_offset, OracleClob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CopyToOracleClob">
            <summary>设置 OracleClob.CopyTo(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CopyToOracleClobInt64">
            <summary>设置 OracleClob.CopyTo(OracleClob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.CreateTempLob">
            <summary>设置 OracleClob.CreateTempLob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.Dispose">
            <summary>设置 OracleClob.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.DisposeBoolean">
            <summary>设置 OracleClob.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.EndChunkWrite">
            <summary>设置 OracleClob.EndChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.Erase">
            <summary>设置 OracleClob.Erase() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.EraseInt64Int64">
            <summary>设置 OracleClob.Erase(Int64 offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.Flush">
            <summary>设置 OracleClob.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.GetLobLocatorIntPtrOut">
            <summary>设置 OracleClob.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.GetOptimumChunkSize">
            <summary>设置 OracleClob.GetOptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsEmptyGet">
            <summary>设置 OracleClob.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsEqualOracleClob">
            <summary>设置 OracleClob.IsEqual(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsInChunkWriteModeGet">
            <summary>设置 OracleClob.get_IsInChunkWriteMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsNClobGet">
            <summary>设置 OracleClob.get_IsNClob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsNullGet">
            <summary>设置 OracleClob.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.IsTemporaryGet">
            <summary>设置 OracleClob.get_IsTemporary() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.KeepOciLobLoc">
            <summary>设置 OracleClob.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.LengthGet">
            <summary>设置 OracleClob.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.LobCtxGet">
            <summary>设置 OracleClob.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.OptimumChunkSizeGet">
            <summary>设置 OracleClob.get_OptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.PositionGet">
            <summary>设置 OracleClob.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.PositionSetInt64">
            <summary>设置 OracleClob.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 OracleClob.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.ReadCharArrayInt32Int32">
            <summary>设置 OracleClob.Read(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.SearchByteArrayInt64Int64">
            <summary>设置 OracleClob.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.SearchCharArrayInt64Int64">
            <summary>设置 OracleClob.Search(Char[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 OracleClob.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.SetLengthInt64">
            <summary>设置 OracleClob.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.ValueGet">
            <summary>设置 OracleClob.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 OracleClob.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AllInstances.WriteCharArrayInt32Int32">
            <summary>设置 OracleClob.Write(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AppendByteArrayInt32Int32">
            <summary>设置 OracleClob.Append(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AppendCharArrayInt32Int32">
            <summary>设置 OracleClob.Append(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.AppendOracleClob">
            <summary>设置 OracleClob.Append(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.BeginChunkWrite">
            <summary>设置 OracleClob.BeginChunkWrite() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CanReadGet">
            <summary>设置 OracleClob.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CanSeekGet">
            <summary>设置 OracleClob.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CanWriteGet">
            <summary>设置 OracleClob.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Clone">
            <summary>设置 OracleClob.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Close">
            <summary>设置 OracleClob.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CompareInt64OracleClobInt64Int64">
            <summary>设置 OracleClob.Compare(Int64 src_offset, OracleClob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConnectionGet">
            <summary>设置 OracleClob.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Constructor">
            <summary>设置 OracleClob.OracleClob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorBooleanBoolean">
            <summary>设置 OracleClob.OracleClob(Boolean bCaching, Boolean bNClob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorIntPtrBooleanBooleanBooleanInt32">
            <summary>设置 OracleClob.OracleClob(IntPtr opsLobLoc, Boolean bCaching, Boolean bNClob, Boolean bTempLob, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorOracleConnection">
            <summary>设置 OracleClob.OracleClob(OracleConnection con) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorOracleConnectionBooleanBoolean">
            <summary>设置 OracleClob.OracleClob(OracleConnection con, Boolean bCaching, Boolean bNClob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorOracleConnectionIntPtrBooleanBooleanBoolean">
            <summary>设置 OracleClob.OracleClob(OracleConnection con, IntPtr opsLobCtx, Boolean bCaching, Boolean bNClob, Boolean bTempLob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ConstructorOracleConnectionIntPtrBooleanBooleanBooleanInt32">
            <summary>设置 OracleClob.OracleClob(OracleConnection con, IntPtr opsLobLoc, Boolean bCaching, Boolean bNClob, Boolean bTempLob, Int32 allocOciLobLoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CopyToInt64OracleClobInt64Int64">
            <summary>设置 OracleClob.CopyTo(Int64 src_offset, OracleClob obj, Int64 dst_offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CopyToOracleClob">
            <summary>设置 OracleClob.CopyTo(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CopyToOracleClobInt64">
            <summary>设置 OracleClob.CopyTo(OracleClob obj, Int64 dst_offset) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.CreateTempLob">
            <summary>设置 OracleClob.CreateTempLob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Dispose">
            <summary>设置 OracleClob.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.DisposeBoolean">
            <summary>设置 OracleClob.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.EndChunkWrite">
            <summary>设置 OracleClob.EndChunkWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Erase">
            <summary>设置 OracleClob.Erase() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.EraseInt64Int64">
            <summary>设置 OracleClob.Erase(Int64 offset, Int64 amount) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.Flush">
            <summary>设置 OracleClob.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.GetLobLocatorIntPtrOut">
            <summary>设置 OracleClob.GetLobLocator(IntPtr&amp; opsLobCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.GetOptimumChunkSize">
            <summary>设置 OracleClob.GetOptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsEmptyGet">
            <summary>设置 OracleClob.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsEqualOracleClob">
            <summary>设置 OracleClob.IsEqual(OracleClob obj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsInChunkWriteModeGet">
            <summary>设置 OracleClob.get_IsInChunkWriteMode() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsNClobGet">
            <summary>设置 OracleClob.get_IsNClob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsNullGet">
            <summary>设置 OracleClob.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.IsTemporaryGet">
            <summary>设置 OracleClob.get_IsTemporary() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.KeepOciLobLoc">
            <summary>设置 OracleClob.KeepOciLobLoc() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.LengthGet">
            <summary>设置 OracleClob.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.LobCtxGet">
            <summary>设置 OracleClob.get_LobCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.OptimumChunkSizeGet">
            <summary>设置 OracleClob.get_OptimumChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.PositionGet">
            <summary>设置 OracleClob.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.PositionSetInt64">
            <summary>设置 OracleClob.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ReadByteArrayInt32Int32">
            <summary>设置 OracleClob.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ReadCharArrayInt32Int32">
            <summary>设置 OracleClob.Read(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.SearchByteArrayInt64Int64">
            <summary>设置 OracleClob.Search(Byte[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.SearchCharArrayInt64Int64">
            <summary>设置 OracleClob.Search(Char[] val, Int64 offset, Int64 nth) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.SeekInt64SeekOrigin">
            <summary>设置 OracleClob.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.SetLengthInt64">
            <summary>设置 OracleClob.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.StaticConstructor">
            <summary>设置 OracleClob.OracleClob() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.ValueGet">
            <summary>设置 OracleClob.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.WriteByteArrayInt32Int32">
            <summary>设置 OracleClob.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleClob.WriteCharArrayInt32Int32">
            <summary>设置 OracleClob.Write(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute">
            <summary>Oracle.DataAccess.Types.OracleCustomTypeMappingAttribute 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.#ctor(Oracle.DataAccess.Types.OracleCustomTypeMappingAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.AllInstances.UdtTypeNameGet">
            <summary>设置 OracleCustomTypeMappingAttribute.get_UdtTypeName() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.ConstructorString">
            <summary>设置 OracleCustomTypeMappingAttribute.OracleCustomTypeMappingAttribute(String udtTypeName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleCustomTypeMappingAttribute.UdtTypeNameGet">
            <summary>设置 OracleCustomTypeMappingAttribute.get_UdtTypeName() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleDate">
            <summary>Oracle.DataAccess.Types.OracleDate 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleDate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.EqualityOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_Equality(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.EqualsOracleDateOracleDate">
            <summary>设置 OracleDate.Equals(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.ExplicitOpDateTimeOracleDate">
            <summary>设置 OracleDate.op_Explicit(DateTime value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.ExplicitOpOracleDateDateTime">
            <summary>设置 OracleDate.op_Explicit(OracleDate value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.ExplicitOpOracleTimeStampOracleDate">
            <summary>设置 OracleDate.op_Explicit(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.ExplicitOpStringOracleDate">
            <summary>设置 OracleDate.op_Explicit(String dateStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GetSysDate">
            <summary>设置 OracleDate.GetSysDate() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleDate.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GreaterThanOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_GreaterThan(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GreaterThanOrEqualOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_GreaterThanOrEqual(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GreaterThanOrEqualOracleDateOracleDate">
            <summary>设置 OracleDate.GreaterThanOrEqual(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.GreaterThanOracleDateOracleDate">
            <summary>设置 OracleDate.GreaterThan(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.InequalityOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_Inequality(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.LessThanOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_LessThan(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.LessThanOrEqualOpOracleDateOracleDate">
            <summary>设置 OracleDate.op_LessThanOrEqual(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.LessThanOrEqualOracleDateOracleDate">
            <summary>设置 OracleDate.LessThanOrEqual(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.LessThanOracleDateOracleDate">
            <summary>设置 OracleDate.LessThan(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.NotEqualsOracleDateOracleDate">
            <summary>设置 OracleDate.NotEquals(OracleDate value1, OracleDate value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.ParseString">
            <summary>设置 OracleDate.Parse(String datStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDate.StaticConstructor">
            <summary>设置 OracleDate.OracleDate() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal">
            <summary>Oracle.DataAccess.Types.OracleDecimal 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AbsOracleDecimal">
            <summary>设置 OracleDecimal.Abs(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AcosOracleDecimal">
            <summary>设置 OracleDecimal.Acos(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AddOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Add(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AdditionOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Addition(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AdjustScaleOracleDecimalInt32Boolean">
            <summary>设置 OracleDecimal.AdjustScale(OracleDecimal value1, Int32 digits, Boolean fRound) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AllocValCtxObject">
            <summary>设置 OracleDecimal.AllocValCtx(Object methodParam) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AsinOracleDecimal">
            <summary>设置 OracleDecimal.Asin(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.Atan2OracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Atan2(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.AtanOracleDecimal">
            <summary>设置 OracleDecimal.Atan(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.CeilingOracleDecimal">
            <summary>设置 OracleDecimal.Ceiling(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ConvertToIntObject">
            <summary>设置 OracleDecimal.ConvertToInt(Object methodParam) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ConvertToPrecScaleOracleDecimalInt32Int32">
            <summary>设置 OracleDecimal.ConvertToPrecScale(OracleDecimal value1, Int32 precision, Int32 scale) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.CosOracleDecimal">
            <summary>设置 OracleDecimal.Cos(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.CoshOracleDecimal">
            <summary>设置 OracleDecimal.Cosh(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.DivideOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Divide(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.DivisionOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Division(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.EqualityOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Equality(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.EqualsOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Equals(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExpOracleDecimal">
            <summary>设置 OracleDecimal.Exp(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpDoubleOracleDecimal">
            <summary>设置 OracleDecimal.op_Explicit(Double value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalByte">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalDecimal">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalDouble">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalInt16">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalInt32">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalInt64">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpOracleDecimalSingle">
            <summary>设置 OracleDecimal.op_Explicit(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ExplicitOpStringOracleDecimal">
            <summary>设置 OracleDecimal.op_Explicit(String numStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.FloorOracleDecimal">
            <summary>设置 OracleDecimal.Floor(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GetMaxValue">
            <summary>设置 OracleDecimal.GetMaxValue() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GetMinValue">
            <summary>设置 OracleDecimal.GetMinValue() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GetNegInfinity">
            <summary>设置 OracleDecimal.GetNegInfinity() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GetPosInfinity">
            <summary>设置 OracleDecimal.GetPosInfinity() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleDecimal.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GreaterThanOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_GreaterThan(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GreaterThanOrEqualOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_GreaterThanOrEqual(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GreaterThanOrEqualOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.GreaterThanOrEqual(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.GreaterThanOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.GreaterThan(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ImplicitOpDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Implicit(Decimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ImplicitOpInt32OracleDecimal">
            <summary>设置 OracleDecimal.op_Implicit(Int32 value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ImplicitOpInt64OracleDecimal">
            <summary>设置 OracleDecimal.op_Implicit(Int64 value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.InequalityOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Inequality(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LessThanOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_LessThan(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LessThanOrEqualOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_LessThanOrEqual(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LessThanOrEqualOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.LessThanOrEqual(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LessThanOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.LessThan(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LogOracleDecimal">
            <summary>设置 OracleDecimal.Log(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LogOracleDecimalInt32">
            <summary>设置 OracleDecimal.Log(OracleDecimal value1, Int32 logBase) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.LogOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Log(OracleDecimal value1, OracleDecimal logBase) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.MaxOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Max(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.MinOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Min(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ModOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Mod(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ModulusOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Modulus(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.MultiplyOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Multiply(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.MultiplyOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Multiply(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.NegateOracleDecimal">
            <summary>设置 OracleDecimal.Negate(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.NotEqualsOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.NotEquals(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ParseString">
            <summary>设置 OracleDecimal.Parse(String numStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.PowOracleDecimalInt32">
            <summary>设置 OracleDecimal.Pow(OracleDecimal value1, Int32 power) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.PowOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Pow(OracleDecimal value1, OracleDecimal power) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.RoundOracleDecimalInt32">
            <summary>设置 OracleDecimal.Round(OracleDecimal value1, Int32 decplace) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SetPi">
            <summary>设置 OracleDecimal.SetPi() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SetPrecisionNoRoundOracleDecimalInt32">
            <summary>设置 OracleDecimal.SetPrecisionNoRound(OracleDecimal value1, Int32 precision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SetPrecisionOracleDecimalInt32">
            <summary>设置 OracleDecimal.SetPrecision(OracleDecimal value1, Int32 precision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.ShiftOracleDecimalInt32">
            <summary>设置 OracleDecimal.Shift(OracleDecimal value1, Int32 decplace) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SignOracleDecimal">
            <summary>设置 OracleDecimal.Sign(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SinOracleDecimal">
            <summary>设置 OracleDecimal.Sin(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SinhOracleDecimal">
            <summary>设置 OracleDecimal.Sinh(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SqrtOracleDecimal">
            <summary>设置 OracleDecimal.Sqrt(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.StaticConstructor">
            <summary>设置 OracleDecimal.OracleDecimal() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SubtractOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.Subtract(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.SubtractionOpOracleDecimalOracleDecimal">
            <summary>设置 OracleDecimal.op_Subtraction(OracleDecimal value1, OracleDecimal value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.TanOracleDecimal">
            <summary>设置 OracleDecimal.Tan(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.TanhOracleDecimal">
            <summary>设置 OracleDecimal.Tanh(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.TruncateOracleDecimalInt32">
            <summary>设置 OracleDecimal.Truncate(OracleDecimal value1, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleDecimal.UnaryNegationOpOracleDecimal">
            <summary>设置 OracleDecimal.op_UnaryNegation(OracleDecimal value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS">
            <summary>Oracle.DataAccess.Types.OracleIntervalDS 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.AdditionOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Addition(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.DivisionOpOracleIntervalDSInt32">
            <summary>设置 OracleIntervalDS.op_Division(OracleIntervalDS value1, Int32 divisor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.EqualityOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Equality(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.EqualsOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.Equals(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.ExplicitOpOracleIntervalDSTimeSpan">
            <summary>设置 OracleIntervalDS.op_Explicit(OracleIntervalDS value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.ExplicitOpStringOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Explicit(String intervalStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleIntervalDS.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.GreaterThanOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_GreaterThan(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.GreaterThanOrEqualOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_GreaterThanOrEqual(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.GreaterThanOrEqualOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.GreaterThanOrEqual(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.GreaterThanOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.GreaterThan(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.ImplicitOpTimeSpanOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Implicit(TimeSpan value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.InequalityOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Inequality(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.LessThanOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_LessThan(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.LessThanOrEqualOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_LessThanOrEqual(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.LessThanOrEqualOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.LessThanOrEqual(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.LessThanOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.LessThan(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.MultiplyOpOracleIntervalDSInt32">
            <summary>设置 OracleIntervalDS.op_Multiply(OracleIntervalDS value1, Int32 multiplier) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.NotEqualsOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.NotEquals(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.ParseString">
            <summary>设置 OracleIntervalDS.Parse(String intervalStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.SetPrecisionOracleIntervalDSInt32Int32">
            <summary>设置 OracleIntervalDS.SetPrecision(OracleIntervalDS value1, Int32 dayPrecision, Int32 fracSecPrecision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.StaticConstructor">
            <summary>设置 OracleIntervalDS.OracleIntervalDS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.SubtractionOpOracleIntervalDSOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_Subtraction(OracleIntervalDS value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalDS.UnaryNegationOpOracleIntervalDS">
            <summary>设置 OracleIntervalDS.op_UnaryNegation(OracleIntervalDS value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM">
            <summary>Oracle.DataAccess.Types.OracleIntervalYM 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.AdditionOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Addition(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.DivisionOpOracleIntervalYMInt32">
            <summary>设置 OracleIntervalYM.op_Division(OracleIntervalYM value1, Int32 divisor) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.EqualityOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Equality(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.EqualsOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.Equals(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.ExplicitOpOracleIntervalYMInt64">
            <summary>设置 OracleIntervalYM.op_Explicit(OracleIntervalYM value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.ExplicitOpStringOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Explicit(String intervalStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleIntervalYM.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.GreaterThanOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_GreaterThan(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.GreaterThanOrEqualOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_GreaterThanOrEqual(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.GreaterThanOrEqualOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.GreaterThanOrEqual(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.GreaterThanOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.GreaterThan(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.ImplicitOpInt64OracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Implicit(Int64 months) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.InequalityOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Inequality(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.LessThanOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_LessThan(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.LessThanOrEqualOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_LessThanOrEqual(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.LessThanOrEqualOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.LessThanOrEqual(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.LessThanOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.LessThan(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.MultiplyOpOracleIntervalYMInt32">
            <summary>设置 OracleIntervalYM.op_Multiply(OracleIntervalYM value1, Int32 multiplier) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.NotEqualsOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.NotEquals(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.ParseString">
            <summary>设置 OracleIntervalYM.Parse(String intervalStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.SetPrecisionOracleIntervalYMInt32">
            <summary>设置 OracleIntervalYM.SetPrecision(OracleIntervalYM value1, Int32 yearPrecision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.StaticConstructor">
            <summary>设置 OracleIntervalYM.OracleIntervalYM() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.SubtractionOpOracleIntervalYMOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_Subtraction(OracleIntervalYM value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleIntervalYM.UnaryNegationOpOracleIntervalYM">
            <summary>设置 OracleIntervalYM.op_UnaryNegation(OracleIntervalYM value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException">
            <summary>Oracle.DataAccess.Types.OracleNullValueException 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.#ctor(Oracle.DataAccess.Types.OracleNullValueException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.Constructor">
            <summary>设置 OracleNullValueException.OracleNullValueException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleNullValueException.ConstructorString">
            <summary>设置 OracleNullValueException.OracleNullValueException(String message) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute">
            <summary>Oracle.DataAccess.Types.OracleObjectMappingAttribute 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.#ctor(Oracle.DataAccess.Types.OracleObjectMappingAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.AllInstances.AttributeIndexGet">
            <summary>设置 OracleObjectMappingAttribute.get_AttributeIndex() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.AllInstances.AttributeNameGet">
            <summary>设置 OracleObjectMappingAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.AttributeIndexGet">
            <summary>设置 OracleObjectMappingAttribute.get_AttributeIndex() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.AttributeNameGet">
            <summary>设置 OracleObjectMappingAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.ConstructorInt32">
            <summary>设置 OracleObjectMappingAttribute.OracleObjectMappingAttribute(Int32 attrIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleObjectMappingAttribute.ConstructorString">
            <summary>设置 OracleObjectMappingAttribute.OracleObjectMappingAttribute(String attrName) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleRef">
            <summary>Oracle.DataAccess.Types.OracleRef 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.#ctor(Oracle.DataAccess.Types.OracleRef)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.Clone">
            <summary>设置 OracleRef.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.ConnectionGet">
            <summary>设置 OracleRef.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.CreateCustomObject">
            <summary>设置 OracleRef.CreateCustomObject() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.DeleteBoolean">
            <summary>设置 OracleRef.Delete(Boolean bFlush) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.Dispose">
            <summary>设置 OracleRef.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.DisposeBoolean">
            <summary>设置 OracleRef.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.Flush">
            <summary>设置 OracleRef.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.GetCustomObjectForUpdateBoolean">
            <summary>设置 OracleRef.GetCustomObjectForUpdate(Boolean bWait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.GetCustomObjectForUpdateBooleanInt32">
            <summary>设置 OracleRef.GetCustomObjectForUpdate(Boolean bWait, Int32 depthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.GetCustomObjectOracleUdtFetchOption">
            <summary>设置 OracleRef.GetCustomObject(OracleUdtFetchOption fetchOption) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.GetCustomObjectOracleUdtFetchOptionInt32">
            <summary>设置 OracleRef.GetCustomObject(OracleUdtFetchOption fetchOption, Int32 depthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.HasChangesGet">
            <summary>设置 OracleRef.get_HasChanges() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.Initialize">
            <summary>设置 OracleRef.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.IsEqualOracleRef">
            <summary>设置 OracleRef.IsEqual(OracleRef oraRef) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.IsLockedGet">
            <summary>设置 OracleRef.get_IsLocked() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.IsNullGet">
            <summary>设置 OracleRef.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.LockBoolean">
            <summary>设置 OracleRef.Lock(Boolean wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.ObjectTableNameGet">
            <summary>设置 OracleRef.get_ObjectTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.PinAndLockBooleanInt32">
            <summary>设置 OracleRef.PinAndLock(Boolean wait, Int32 depthlevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.PinObjOracleUdtFetchOptionInt32">
            <summary>设置 OracleRef.PinObj(OracleUdtFetchOption fetchOption, Int32 nDepthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.UnPinObj">
            <summary>设置 OracleRef.UnPinObj() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.UpdateFromCustomObjectIOracleCustomType">
            <summary>设置 OracleRef.UpdateFromCustomObject(IOracleCustomType customObj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.UpdateObjectBoolean">
            <summary>设置 OracleRef.Update(Object customObject, Boolean bFlush) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.AllInstances.ValueGet">
            <summary>设置 OracleRef.get_Value() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Clone">
            <summary>设置 OracleRef.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.ConnectionGet">
            <summary>设置 OracleRef.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Constructor">
            <summary>设置 OracleRef.OracleRef() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.ConstructorOracleConnectionString">
            <summary>设置 OracleRef.OracleRef(OracleConnection con, String hexStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.ConstructorOracleConnectionStringString">
            <summary>设置 OracleRef.OracleRef(OracleConnection con, String udtTypeName, String objTabName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.CreateCustomObject">
            <summary>设置 OracleRef.CreateCustomObject() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.DeleteBoolean">
            <summary>设置 OracleRef.Delete(Boolean bFlush) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Dispose">
            <summary>设置 OracleRef.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.DisposeBoolean">
            <summary>设置 OracleRef.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Flush">
            <summary>设置 OracleRef.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.GetCustomObjectForUpdateBoolean">
            <summary>设置 OracleRef.GetCustomObjectForUpdate(Boolean bWait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.GetCustomObjectForUpdateBooleanInt32">
            <summary>设置 OracleRef.GetCustomObjectForUpdate(Boolean bWait, Int32 depthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.GetCustomObjectOracleUdtFetchOption">
            <summary>设置 OracleRef.GetCustomObject(OracleUdtFetchOption fetchOption) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.GetCustomObjectOracleUdtFetchOptionInt32">
            <summary>设置 OracleRef.GetCustomObject(OracleUdtFetchOption fetchOption, Int32 depthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.HasChangesGet">
            <summary>设置 OracleRef.get_HasChanges() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.Initialize">
            <summary>设置 OracleRef.Initialize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.IsEqualOracleRef">
            <summary>设置 OracleRef.IsEqual(OracleRef oraRef) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.IsLockedGet">
            <summary>设置 OracleRef.get_IsLocked() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.IsNullGet">
            <summary>设置 OracleRef.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.LockBoolean">
            <summary>设置 OracleRef.Lock(Boolean wait) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.ObjectTableNameGet">
            <summary>设置 OracleRef.get_ObjectTableName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.PinAndLockBooleanInt32">
            <summary>设置 OracleRef.PinAndLock(Boolean wait, Int32 depthlevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.PinObjOracleUdtFetchOptionInt32">
            <summary>设置 OracleRef.PinObj(OracleUdtFetchOption fetchOption, Int32 nDepthLevel) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.StaticConstructor">
            <summary>设置 OracleRef.OracleRef() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.UnPinObj">
            <summary>设置 OracleRef.UnPinObj() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.UpdateFromCustomObjectIOracleCustomType">
            <summary>设置 OracleRef.UpdateFromCustomObject(IOracleCustomType customObj) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.UpdateObjectBoolean">
            <summary>设置 OracleRef.Update(Object customObject, Boolean bFlush) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRef.ValueGet">
            <summary>设置 OracleRef.get_Value() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor">
            <summary>Oracle.DataAccess.Types.OracleRefCursor 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.#ctor(Oracle.DataAccess.Types.OracleRefCursor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.ConnectionGet">
            <summary>设置 OracleRefCursor.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.Dispose">
            <summary>设置 OracleRefCursor.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.DisposeBoolean">
            <summary>设置 OracleRefCursor.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.FetchSizeGet">
            <summary>设置 OracleRefCursor.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.FetchSizeSetInt64">
            <summary>设置 OracleRefCursor.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.FreeSqlCtxGet">
            <summary>设置 OracleRefCursor.get_FreeSqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.FreeSqlCtxSetInt32">
            <summary>设置 OracleRefCursor.set_FreeSqlCtx(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.GetDataReader">
            <summary>设置 OracleRefCursor.GetDataReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.GetDataReaderBoolean">
            <summary>设置 OracleRefCursor.GetDataReader(Boolean fillRequest) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.IsNullGet">
            <summary>设置 OracleRefCursor.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.RowSizeGet">
            <summary>设置 OracleRefCursor.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.SqlCtxGet">
            <summary>设置 OracleRefCursor.get_SqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.AllInstances.SqlCtxSetIntPtr">
            <summary>设置 OracleRefCursor.set_SqlCtx(IntPtr value) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.ConnectionGet">
            <summary>设置 OracleRefCursor.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.Constructor">
            <summary>设置 OracleRefCursor.OracleRefCursor() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.Dispose">
            <summary>设置 OracleRefCursor.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.DisposeBoolean">
            <summary>设置 OracleRefCursor.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.FetchSizeGet">
            <summary>设置 OracleRefCursor.get_FetchSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.FetchSizeSetInt64">
            <summary>设置 OracleRefCursor.set_FetchSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.FreeSqlCtxGet">
            <summary>设置 OracleRefCursor.get_FreeSqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.FreeSqlCtxSetInt32">
            <summary>设置 OracleRefCursor.set_FreeSqlCtx(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.GetDataReader">
            <summary>设置 OracleRefCursor.GetDataReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.GetDataReaderBoolean">
            <summary>设置 OracleRefCursor.GetDataReader(Boolean fillRequest) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.IsNullGet">
            <summary>设置 OracleRefCursor.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.RowSizeGet">
            <summary>设置 OracleRefCursor.get_RowSize() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.SqlCtxGet">
            <summary>设置 OracleRefCursor.get_SqlCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.SqlCtxSetIntPtr">
            <summary>设置 OracleRefCursor.set_SqlCtx(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleRefCursor.StaticConstructor">
            <summary>设置 OracleRefCursor.OracleRefCursor() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleString">
            <summary>Oracle.DataAccess.Types.OracleString 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleString.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.AdditionOpOracleStringOracleString">
            <summary>设置 OracleString.op_Addition(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleString.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleString.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleString.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.ConcatOracleStringOracleString">
            <summary>设置 OracleString.Concat(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.EqualityOpOracleStringOracleString">
            <summary>设置 OracleString.op_Equality(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.EqualsOracleStringOracleString">
            <summary>设置 OracleString.Equals(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.ExplicitOpOracleStringString">
            <summary>设置 OracleString.op_Explicit(OracleString value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GetValueIntPtrInt32Boolean">
            <summary>设置 OracleString.GetValue(IntPtr data, Int32 count, Boolean isUnicode) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleString.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GreaterThanOpOracleStringOracleString">
            <summary>设置 OracleString.op_GreaterThan(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GreaterThanOrEqualOpOracleStringOracleString">
            <summary>设置 OracleString.op_GreaterThanOrEqual(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GreaterThanOrEqualOracleStringOracleString">
            <summary>设置 OracleString.GreaterThanOrEqual(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.GreaterThanOracleStringOracleString">
            <summary>设置 OracleString.GreaterThan(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.ImplicitOpStringOracleString">
            <summary>设置 OracleString.op_Implicit(String value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.InequalityOpOracleStringOracleString">
            <summary>设置 OracleString.op_Inequality(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.LessThanOpOracleStringOracleString">
            <summary>设置 OracleString.op_LessThan(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.LessThanOrEqualOpOracleStringOracleString">
            <summary>设置 OracleString.op_LessThanOrEqual(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.LessThanOrEqualOracleStringOracleString">
            <summary>设置 OracleString.LessThanOrEqual(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.LessThanOracleStringOracleString">
            <summary>设置 OracleString.LessThan(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.NotEqualsOracleStringOracleString">
            <summary>设置 OracleString.NotEquals(OracleString value1, OracleString value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleString.StringCompareOracleStringOracleStringBoolean">
            <summary>设置 OracleString.StringCompare(OracleString oraStr1, OracleString oraStr2, Boolean fCaseInsensitive) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp">
            <summary>Oracle.DataAccess.Types.OracleTimeStamp 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.AdditionOpOracleTimeStampOracleIntervalDS">
            <summary>设置 OracleTimeStamp.op_Addition(OracleTimeStamp value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.AdditionOpOracleTimeStampOracleIntervalYM">
            <summary>设置 OracleTimeStamp.op_Addition(OracleTimeStamp value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.AdditionOpOracleTimeStampTimeSpan">
            <summary>设置 OracleTimeStamp.op_Addition(OracleTimeStamp value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.AllocValCtxObject">
            <summary>设置 OracleTimeStamp.AllocValCtx(Object methodParam) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.EqualityOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Equality(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.EqualsOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.Equals(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ExplicitOpOracleTimeStampDateTime">
            <summary>设置 OracleTimeStamp.op_Explicit(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ExplicitOpOracleTimeStampLTZOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Explicit(OracleTimeStampLTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ExplicitOpOracleTimeStampTZOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Explicit(OracleTimeStampTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ExplicitOpStringOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Explicit(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GetSysDate">
            <summary>设置 OracleTimeStamp.GetSysDate() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleTimeStamp.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GreaterThanOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_GreaterThan(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GreaterThanOrEqualOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_GreaterThanOrEqual(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GreaterThanOrEqualOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.GreaterThanOrEqual(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.GreaterThanOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.GreaterThan(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ImplicitOpDateTimeOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Implicit(DateTime value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ImplicitOpOracleDateOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Implicit(OracleDate value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.InequalityOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_Inequality(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.LessThanOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_LessThan(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.LessThanOrEqualOpOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.op_LessThanOrEqual(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.LessThanOrEqualOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.LessThanOrEqual(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.LessThanOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.LessThan(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.NotEqualsOracleTimeStampOracleTimeStamp">
            <summary>设置 OracleTimeStamp.NotEquals(OracleTimeStamp value1, OracleTimeStamp value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ParseString">
            <summary>设置 OracleTimeStamp.Parse(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.SetPrecisionOracleTimeStampInt32">
            <summary>设置 OracleTimeStamp.SetPrecision(OracleTimeStamp value1, Int32 fracSecPrecision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.StaticConstructor">
            <summary>设置 OracleTimeStamp.OracleTimeStamp() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.SubtractionOpOracleTimeStampOracleIntervalDS">
            <summary>设置 OracleTimeStamp.op_Subtraction(OracleTimeStamp value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.SubtractionOpOracleTimeStampOracleIntervalYM">
            <summary>设置 OracleTimeStamp.op_Subtraction(OracleTimeStamp value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.SubtractionOpOracleTimeStampTimeSpan">
            <summary>设置 OracleTimeStamp.op_Subtraction(OracleTimeStamp value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ToTSLOracleTimeStamp">
            <summary>设置 OracleTimeStamp.ToTSL(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStamp.ToTSZOracleTimeStamp">
            <summary>设置 OracleTimeStamp.ToTSZ(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ">
            <summary>Oracle.DataAccess.Types.OracleTimeStampLTZ 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.AdditionOpOracleTimeStampLTZOracleIntervalDS">
            <summary>设置 OracleTimeStampLTZ.op_Addition(OracleTimeStampLTZ value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.AdditionOpOracleTimeStampLTZOracleIntervalYM">
            <summary>设置 OracleTimeStampLTZ.op_Addition(OracleTimeStampLTZ value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.AdditionOpOracleTimeStampLTZTimeSpan">
            <summary>设置 OracleTimeStampLTZ.op_Addition(OracleTimeStampLTZ value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.AllocValCtxObject">
            <summary>设置 OracleTimeStampLTZ.AllocValCtx(Object methodParam) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.EqualityOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Equality(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.EqualsOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.Equals(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ExplicitOpOracleTimeStampLTZDateTime">
            <summary>设置 OracleTimeStampLTZ.op_Explicit(OracleTimeStampLTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ExplicitOpOracleTimeStampOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Explicit(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ExplicitOpOracleTimeStampTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Explicit(OracleTimeStampTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ExplicitOpStringOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Explicit(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GetLocalTimeZoneName">
            <summary>设置 OracleTimeStampLTZ.GetLocalTimeZoneName() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GetLocalTimeZoneOffset">
            <summary>设置 OracleTimeStampLTZ.GetLocalTimeZoneOffset() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GetSysDate">
            <summary>设置 OracleTimeStampLTZ.GetSysDate() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleTimeStampLTZ.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GreaterThanOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_GreaterThan(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GreaterThanOrEqualOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_GreaterThanOrEqual(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GreaterThanOrEqualOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.GreaterThanOrEqual(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.GreaterThanOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.GreaterThan(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ImplicitOpDateTimeOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Implicit(DateTime value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ImplicitOpOracleDateOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Implicit(OracleDate value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.InequalityOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_Inequality(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.LessThanOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_LessThan(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.LessThanOrEqualOpOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.op_LessThanOrEqual(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.LessThanOrEqualOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.LessThanOrEqual(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.LessThanOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.LessThan(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.NotEqualsOracleTimeStampLTZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.NotEquals(OracleTimeStampLTZ value1, OracleTimeStampLTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ParseString">
            <summary>设置 OracleTimeStampLTZ.Parse(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.SetPrecisionOracleTimeStampLTZInt32">
            <summary>设置 OracleTimeStampLTZ.SetPrecision(OracleTimeStampLTZ value1, Int32 fracSecPrecision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.StaticConstructor">
            <summary>设置 OracleTimeStampLTZ.OracleTimeStampLTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.SubtractionOpOracleTimeStampLTZOracleIntervalDS">
            <summary>设置 OracleTimeStampLTZ.op_Subtraction(OracleTimeStampLTZ value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.SubtractionOpOracleTimeStampLTZOracleIntervalYM">
            <summary>设置 OracleTimeStampLTZ.op_Subtraction(OracleTimeStampLTZ value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.SubtractionOpOracleTimeStampLTZTimeSpan">
            <summary>设置 OracleTimeStampLTZ.op_Subtraction(OracleTimeStampLTZ value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ToTSOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.ToTS(OracleTimeStampLTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampLTZ.ToTSZOracleTimeStampLTZ">
            <summary>设置 OracleTimeStampLTZ.ToTSZ(OracleTimeStampLTZ value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ">
            <summary>Oracle.DataAccess.Types.OracleTimeStampTZ 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.AdditionOpOracleTimeStampTZOracleIntervalDS">
            <summary>设置 OracleTimeStampTZ.op_Addition(OracleTimeStampTZ value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.AdditionOpOracleTimeStampTZOracleIntervalYM">
            <summary>设置 OracleTimeStampTZ.op_Addition(OracleTimeStampTZ value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.AdditionOpOracleTimeStampTZTimeSpan">
            <summary>设置 OracleTimeStampTZ.op_Addition(OracleTimeStampTZ value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.AllocValCtxObject">
            <summary>设置 OracleTimeStampTZ.AllocValCtx(Object methodParam) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.EqualityOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Equality(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.EqualsOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.Equals(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ExplicitOpOracleTimeStampLTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Explicit(OracleTimeStampLTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ExplicitOpOracleTimeStampOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Explicit(OracleTimeStamp value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ExplicitOpOracleTimeStampTZDateTime">
            <summary>设置 OracleTimeStampTZ.op_Explicit(OracleTimeStampTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ExplicitOpStringOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Explicit(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GetMaxValueInt32Int32Int32Int32Int32Int32Int32Int32Int32">
            <summary>设置 OracleTimeStampTZ.GetMaxValue(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second, Int32 nanosecond, Int32 tzHours, Int32 tzMinutes) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GetMinValueInt32Int32Int32Int32Int32Int32Int32Int32Int32">
            <summary>设置 OracleTimeStampTZ.GetMinValue(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second, Int32 nanosecond, Int32 tzHours, Int32 tzMinutes) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GetSysDate">
            <summary>设置 OracleTimeStampTZ.GetSysDate() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GetXsdTypeXmlSchemaSet">
            <summary>设置 OracleTimeStampTZ.GetXsdType(XmlSchemaSet schemaSet) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GreaterThanOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_GreaterThan(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GreaterThanOrEqualOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_GreaterThanOrEqual(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GreaterThanOrEqualOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.GreaterThanOrEqual(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.GreaterThanOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.GreaterThan(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ImplicitOpDateTimeOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Implicit(DateTime value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ImplicitOpOracleDateOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Implicit(OracleDate value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.InequalityOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_Inequality(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.LessThanOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_LessThan(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.LessThanOrEqualOpOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.op_LessThanOrEqual(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.LessThanOrEqualOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.LessThanOrEqual(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.LessThanOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.LessThan(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.NotEqualsOracleTimeStampTZOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.NotEquals(OracleTimeStampTZ value1, OracleTimeStampTZ value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ParseString">
            <summary>设置 OracleTimeStampTZ.Parse(String tsStr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.SetPrecisionOracleTimeStampTZInt32">
            <summary>设置 OracleTimeStampTZ.SetPrecision(OracleTimeStampTZ value1, Int32 fracSecPrecision) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.StaticConstructor">
            <summary>设置 OracleTimeStampTZ.OracleTimeStampTZ() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.SubtractionOpOracleTimeStampTZOracleIntervalDS">
            <summary>设置 OracleTimeStampTZ.op_Subtraction(OracleTimeStampTZ value1, OracleIntervalDS value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.SubtractionOpOracleTimeStampTZOracleIntervalYM">
            <summary>设置 OracleTimeStampTZ.op_Subtraction(OracleTimeStampTZ value1, OracleIntervalYM value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.SubtractionOpOracleTimeStampTZTimeSpan">
            <summary>设置 OracleTimeStampTZ.op_Subtraction(OracleTimeStampTZ value1, TimeSpan value2) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ToTSLOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.ToTSL(OracleTimeStampTZ value1) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTimeStampTZ.ToTSOracleTimeStampTZ">
            <summary>设置 OracleTimeStampTZ.ToTS(OracleTimeStampTZ value1) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException">
            <summary>Oracle.DataAccess.Types.OracleTruncateException 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.#ctor(Oracle.DataAccess.Types.OracleTruncateException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.Constructor">
            <summary>设置 OracleTruncateException.OracleTruncateException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.ConstructorString">
            <summary>设置 OracleTruncateException.OracleTruncateException(String message) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.GetDefMesg">
            <summary>设置 OracleTruncateException.GetDefMesg() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTruncateException.StaticConstructor">
            <summary>设置 OracleTruncateException.OracleTruncateException() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException">
            <summary>Oracle.DataAccess.Types.OracleTypeException 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.#ctor(Oracle.DataAccess.Types.OracleTypeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.AllInstances.MessageGet">
            <summary>设置 OracleTypeException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.AllInstances.NumberGet">
            <summary>设置 OracleTypeException.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.AllInstances.SourceGet">
            <summary>设置 OracleTypeException.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.AllInstances.ToString01">
            <summary>设置 OracleTypeException.ToString() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.Constructor">
            <summary>设置 OracleTypeException.OracleTypeException() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.ConstructorInt32ObjectArray">
            <summary>设置 OracleTypeException.OracleTypeException(Int32 mesgNum, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 OracleTypeException.OracleTypeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.ConstructorString">
            <summary>设置 OracleTypeException.OracleTypeException(String message) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.GetTypeMsgInt32ObjectArray">
            <summary>设置 OracleTypeException.GetTypeMsg(Int32 errCode, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.MessageGet">
            <summary>设置 OracleTypeException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.NumberGet">
            <summary>设置 OracleTypeException.get_Number() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.SourceGet">
            <summary>设置 OracleTypeException.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleTypeException.ToString">
            <summary>设置 OracleTypeException.ToString() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleUdt">
            <summary>Oracle.DataAccess.Types.OracleUdt 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.#ctor(Oracle.DataAccess.Types.OracleUdt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.Constructor">
            <summary>设置 OracleUdt.OracleUdt() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetAllReferencedAssemblies">
            <summary>设置 OracleUdt.GetAllReferencedAssemblies() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetArrDataOracleConnectionIntPtrOracleUdtStatusOutObjectOut">
            <summary>设置 OracleUdt.GetArrData(OracleConnection con, IntPtr pUdt, OracleUdtStatus&amp; status, Object&amp; statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetBFileDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetBFileData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetBlobDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetBlobData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetClobDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetClobData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetDatDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetDatData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetDataOracleConnectionIntPtrInt32OracleUdtStatusOutObjectOut">
            <summary>设置 OracleUdt.GetData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status, Object&amp; statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetDblDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetDblData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetFltDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetFltData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetIDSDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetIDSData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetIYMDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetIYMData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetNumArrDataOracleConnectionIntPtrOracleUdtStatusOutObjectOut">
            <summary>设置 OracleUdt.GetNumArrData(OracleConnection con, IntPtr pUdt, OracleUdtStatus&amp; status, Object&amp; statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetNumDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetNumData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetObjDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetObjData(OracleConnection con, IntPtr pUdt, Int32 attrIndex, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetRawDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetRawData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetRefDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetRefData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetStrDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetStrData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetTSDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetTSData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetUdtNameStringString">
            <summary>设置 OracleUdt.GetUdtName(String customTypeName, String dataSource) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetValueOracleConnectionIntPtrInt32">
            <summary>设置 OracleUdt.GetValue(OracleConnection con, IntPtr pUdt, Int32 attrIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetValueOracleConnectionIntPtrInt32ObjectOut">
            <summary>设置 OracleUdt.GetValue(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object&amp; statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetValueOracleConnectionIntPtrString">
            <summary>设置 OracleUdt.GetValue(OracleConnection con, IntPtr pUdt, String attrName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetValueOracleConnectionIntPtrStringObjectOut">
            <summary>设置 OracleUdt.GetValue(OracleConnection con, IntPtr pUdt, String attrName, Object&amp; statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.GetXmlDataOracleConnectionIntPtrInt32OracleUdtStatusOut">
            <summary>设置 OracleUdt.GetXmlData(OracleConnection con, IntPtr pUdt, Int32 index, OracleUdtStatus&amp; status) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.IsDBNullOracleConnectionIntPtrInt32">
            <summary>设置 OracleUdt.IsDBNull(OracleConnection con, IntPtr pUdt, Int32 attrIndex) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.IsDBNullOracleConnectionIntPtrString">
            <summary>设置 OracleUdt.IsDBNull(OracleConnection con, IntPtr pUdt, String attrName) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetArrayDataOracleConnectionIntPtrInt32ObjectObject">
            <summary>设置 OracleUdt.SetArrayData(OracleConnection conn, IntPtr pUdt, Int32 attrIndex, Object value, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetArrayValueOracleConnectionIntPtrInt32ObjectObject">
            <summary>设置 OracleUdt.SetArrayValue(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetBFileIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetBFile(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetBinaryIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetBinary(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetBlobOracleConnectionIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetBlob(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetClobOracleConnectionIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetClob(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetCustomTypeMappings">
            <summary>设置 OracleUdt.SetCustomTypeMappings() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetDateIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetDate(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetIntervalDSIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetIntervalDS(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetIntervalYMIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetIntervalYM(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetNumArrDataIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetNumArrData(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetNumDataIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetNumData(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetObjDataOracleConnectionIntPtrInt32ObjectObject">
            <summary>设置 OracleUdt.SetObjData(OracleConnection conn, IntPtr pUdt, Int32 attrIndex, Object value, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetREFOracleConnectionIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetREF(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetStringArrDataIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetStringArrData(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetStringDataIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetStringData(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetTimeStampIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetTimeStamp(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetTimeStampLTZIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetTimeStampLTZ(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetTimeStampTZIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetTimeStampTZ(IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetValueOracleConnectionIntPtrInt32Object">
            <summary>设置 OracleUdt.SetValue(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetValueOracleConnectionIntPtrInt32ObjectObject">
            <summary>设置 OracleUdt.SetValue(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetValueOracleConnectionIntPtrStringObject">
            <summary>设置 OracleUdt.SetValue(OracleConnection con, IntPtr pUdt, String attrName, Object value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetValueOracleConnectionIntPtrStringObjectObject">
            <summary>设置 OracleUdt.SetValue(OracleConnection con, IntPtr pUdt, String attrName, Object value, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.SetXmlOracleConnectionIntPtrInt32ObjectIntPtrObject">
            <summary>设置 OracleUdt.SetXml(OracleConnection con, IntPtr pUdt, Int32 attrIndex, Object value, IntPtr pAttrMeta, Object statusArray) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleUdt.StaticConstructor">
            <summary>设置 OracleUdt.OracleUdt() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream">
            <summary>Oracle.DataAccess.Types.OracleXmlStream 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.#ctor(Oracle.DataAccess.Types.OracleXmlStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.CanReadGet">
            <summary>设置 OracleXmlStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.CanSeekGet">
            <summary>设置 OracleXmlStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.CanWriteGet">
            <summary>设置 OracleXmlStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.Clone">
            <summary>设置 OracleXmlStream.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.Close">
            <summary>设置 OracleXmlStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.ConnectionGet">
            <summary>设置 OracleXmlStream.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.Dispose">
            <summary>设置 OracleXmlStream.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.Flush">
            <summary>设置 OracleXmlStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.LengthGet">
            <summary>设置 OracleXmlStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.PositionGet">
            <summary>设置 OracleXmlStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.PositionSetInt64">
            <summary>设置 OracleXmlStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 OracleXmlStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.ReadCharArrayInt32Int32">
            <summary>设置 OracleXmlStream.Read(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 OracleXmlStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.SetLengthInt64">
            <summary>设置 OracleXmlStream.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.ValueGet">
            <summary>设置 OracleXmlStream.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 OracleXmlStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.CanReadGet">
            <summary>设置 OracleXmlStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.CanSeekGet">
            <summary>设置 OracleXmlStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.CanWriteGet">
            <summary>设置 OracleXmlStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Clone">
            <summary>设置 OracleXmlStream.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Close">
            <summary>设置 OracleXmlStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ConnectionGet">
            <summary>设置 OracleXmlStream.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ConstructorOracleConnectionIntPtr">
            <summary>设置 OracleXmlStream.OracleXmlStream(OracleConnection con, IntPtr opsXmlTypeCtx) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ConstructorOracleXmlType">
            <summary>设置 OracleXmlStream.OracleXmlStream(OracleXmlType xmlType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Dispose">
            <summary>设置 OracleXmlStream.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.Flush">
            <summary>设置 OracleXmlStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.LengthGet">
            <summary>设置 OracleXmlStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.PositionGet">
            <summary>设置 OracleXmlStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.PositionSetInt64">
            <summary>设置 OracleXmlStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ReadByteArrayInt32Int32">
            <summary>设置 OracleXmlStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ReadCharArrayInt32Int32">
            <summary>设置 OracleXmlStream.Read(Char[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.SeekInt64SeekOrigin">
            <summary>设置 OracleXmlStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.SetLengthInt64">
            <summary>设置 OracleXmlStream.SetLength(Int64 newLength) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.ValueGet">
            <summary>设置 OracleXmlStream.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlStream.WriteByteArrayInt32Int32">
            <summary>设置 OracleXmlStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType">
            <summary>Oracle.DataAccess.Types.OracleXmlType 的填充码类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.#ctor(Oracle.DataAccess.Types.OracleXmlType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.Clone">
            <summary>设置 OracleXmlType.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.ConnectionGet">
            <summary>设置 OracleXmlType.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.Dispose">
            <summary>设置 OracleXmlType.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.ExtractStringString">
            <summary>设置 OracleXmlType.Extract(String xpathExpr, String nsMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.ExtractStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.Extract(String xpathExpr, XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.GetOCIXMLTypeIntPtrOut">
            <summary>设置 OracleXmlType.GetOCIXMLType(IntPtr&amp; ociXMLType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.GetSchemaFromOPS">
            <summary>设置 OracleXmlType.GetSchemaFromOPS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.GetStream">
            <summary>设置 OracleXmlType.GetStream() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.GetXmlDocument">
            <summary>设置 OracleXmlType.GetXmlDocument() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.GetXmlReader">
            <summary>设置 OracleXmlType.GetXmlReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.HandleErrorInt32OracleConnectionIntPtrObject">
            <summary>设置 OracleXmlType.HandleError(Int32 errCode, OracleConnection conn, IntPtr opsErrCtx, Object src) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.InitializeOracleConnectionStringOracleClobInt32">
            <summary>设置 OracleXmlType.Initialize(OracleConnection con, String xmlData, OracleClob clob, Int32 flag) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsEmptyGet">
            <summary>设置 OracleXmlType.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsExistsStringString">
            <summary>设置 OracleXmlType.IsExists(String xpathExpr, String nsMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsExistsStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.IsExists(String xpathExpr, XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsFragmentGet">
            <summary>设置 OracleXmlType.get_IsFragment() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsNullGet">
            <summary>设置 OracleXmlType.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.IsSchemaBasedGet">
            <summary>设置 OracleXmlType.get_IsSchemaBased() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.KeepOciXmlType">
            <summary>设置 OracleXmlType.KeepOciXmlType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.NsMgrToStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.NsMgrToString(XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.OpsXmlTypeCtxGet">
            <summary>设置 OracleXmlType.get_OpsXmlTypeCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.RootElementGet">
            <summary>设置 OracleXmlType.get_RootElement() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.SchemaGet">
            <summary>设置 OracleXmlType.get_Schema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.SchemaUrlGet">
            <summary>设置 OracleXmlType.get_SchemaUrl() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.TransformOracleXmlTypeString">
            <summary>设置 OracleXmlType.Transform(OracleXmlType xsldoc, String paramMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.TransformStringString">
            <summary>设置 OracleXmlType.Transform(String xsldoc, String paramMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.UpdateStringStringOracleXmlType">
            <summary>设置 OracleXmlType.Update(String xpathExpr, String nsMap, OracleXmlType val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.UpdateStringStringString">
            <summary>设置 OracleXmlType.Update(String xpathExpr, String nsMap, String val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.UpdateStringXmlNamespaceManagerOracleXmlType">
            <summary>设置 OracleXmlType.Update(String xpathExpr, XmlNamespaceManager nsMgr, OracleXmlType val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.UpdateStringXmlNamespaceManagerString">
            <summary>设置 OracleXmlType.Update(String xpathExpr, XmlNamespaceManager nsMgr, String val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.ValidateString">
            <summary>设置 OracleXmlType.Validate(String schemaUrl) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.AllInstances.ValueGet">
            <summary>设置 OracleXmlType.get_Value() 的 填充码</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Bind(Oracle.DataAccess.Types.INullable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Clone">
            <summary>设置 OracleXmlType.Clone() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConnectionGet">
            <summary>设置 OracleXmlType.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Constructor">
            <summary>设置 OracleXmlType.OracleXmlType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorIntPtrBooleanInt32">
            <summary>设置 OracleXmlType.OracleXmlType(IntPtr pOciXmlType, Boolean addRef, Int32 allocOciXmlType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleClob">
            <summary>设置 OracleXmlType.OracleXmlType(OracleClob clob) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnection">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionIntPtrBoolean">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, IntPtr pOpsXmlTypeCtx, Boolean flag) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionIntPtrBooleanInt32">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, IntPtr pOciXmlType, Boolean addRef, Int32 allocOciXmlType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionString">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, String xmlData) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionStringString">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, String rootElement, String schemaUrl) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionXmlDocument">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, XmlDocument domDoc) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorOracleConnectionXmlReader">
            <summary>设置 OracleXmlType.OracleXmlType(OracleConnection con, XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ConstructorString">
            <summary>设置 OracleXmlType.OracleXmlType(String xmlData) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.Dispose">
            <summary>设置 OracleXmlType.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ExtractStringString">
            <summary>设置 OracleXmlType.Extract(String xpathExpr, String nsMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ExtractStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.Extract(String xpathExpr, XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.GetOCIXMLTypeIntPtrOut">
            <summary>设置 OracleXmlType.GetOCIXMLType(IntPtr&amp; ociXMLType) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.GetSchemaFromOPS">
            <summary>设置 OracleXmlType.GetSchemaFromOPS() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.GetStream">
            <summary>设置 OracleXmlType.GetStream() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.GetXmlDocument">
            <summary>设置 OracleXmlType.GetXmlDocument() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.GetXmlReader">
            <summary>设置 OracleXmlType.GetXmlReader() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.HandleErrorInt32OracleConnectionIntPtrObject">
            <summary>设置 OracleXmlType.HandleError(Int32 errCode, OracleConnection conn, IntPtr opsErrCtx, Object src) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.InitializeOracleConnectionStringOracleClobInt32">
            <summary>设置 OracleXmlType.Initialize(OracleConnection con, String xmlData, OracleClob clob, Int32 flag) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsEmptyGet">
            <summary>设置 OracleXmlType.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsExistsStringString">
            <summary>设置 OracleXmlType.IsExists(String xpathExpr, String nsMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsExistsStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.IsExists(String xpathExpr, XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsFragmentGet">
            <summary>设置 OracleXmlType.get_IsFragment() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsNullGet">
            <summary>设置 OracleXmlType.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.IsSchemaBasedGet">
            <summary>设置 OracleXmlType.get_IsSchemaBased() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.KeepOciXmlType">
            <summary>设置 OracleXmlType.KeepOciXmlType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.NsMgrToStringXmlNamespaceManager">
            <summary>设置 OracleXmlType.NsMgrToString(XmlNamespaceManager nsMgr) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.OpsXmlTypeCtxGet">
            <summary>设置 OracleXmlType.get_OpsXmlTypeCtx() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.RootElementGet">
            <summary>设置 OracleXmlType.get_RootElement() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.SchemaGet">
            <summary>设置 OracleXmlType.get_Schema() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.SchemaUrlGet">
            <summary>设置 OracleXmlType.get_SchemaUrl() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.StaticConstructor">
            <summary>设置 OracleXmlType.OracleXmlType() 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.TransformOracleXmlTypeString">
            <summary>设置 OracleXmlType.Transform(OracleXmlType xsldoc, String paramMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.TransformStringString">
            <summary>设置 OracleXmlType.Transform(String xsldoc, String paramMap) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.UpdateStringStringOracleXmlType">
            <summary>设置 OracleXmlType.Update(String xpathExpr, String nsMap, OracleXmlType val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.UpdateStringStringString">
            <summary>设置 OracleXmlType.Update(String xpathExpr, String nsMap, String val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.UpdateStringXmlNamespaceManagerOracleXmlType">
            <summary>设置 OracleXmlType.Update(String xpathExpr, XmlNamespaceManager nsMgr, OracleXmlType val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.UpdateStringXmlNamespaceManagerString">
            <summary>设置 OracleXmlType.Update(String xpathExpr, XmlNamespaceManager nsMgr, String val) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ValidateString">
            <summary>设置 OracleXmlType.Validate(String schemaUrl) 的 填充码</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.ShimOracleXmlType.ValueGet">
            <summary>设置 OracleXmlType.get_Value() 的 填充码</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubINullable">
            <summary>Oracle.DataAccess.Types.INullable 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubINullable.#ctor">
            <summary>初始化 type StubINullable 的新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubINullable.Oracle#DataAccess#Types#INullable#IsNull">
            <summary>设置 INullable.get_IsNull() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubINullable.IsNullGet">
            <summary>设置 INullable.get_IsNull() 的 stub</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory">
            <summary>Oracle.DataAccess.Types.IOracleArrayTypeFactory 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory.#ctor">
            <summary>初始化 type StubIOracleArrayTypeFactory 的新实例</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory.CreateArrayInt32">
            <summary>设置 IOracleArrayTypeFactory.CreateArray(Int32 numElems) 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory.CreateStatusArrayInt32">
            <summary>设置 IOracleArrayTypeFactory.CreateStatusArray(Int32 numElems) 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory.Oracle#DataAccess#Types#IOracleArrayTypeFactory#CreateArray(System.Int32)">
            <summary>设置 IOracleArrayTypeFactory.CreateArray(Int32 numElems) 的 存根</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleArrayTypeFactory.Oracle#DataAccess#Types#IOracleArrayTypeFactory#CreateStatusArray(System.Int32)">
            <summary>设置 IOracleArrayTypeFactory.CreateStatusArray(Int32 numElems) 的 存根</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType">
            <summary>Oracle.DataAccess.Types.IOracleCustomType 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType.#ctor">
            <summary>初始化 type StubIOracleCustomType 的新实例</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType.FromCustomObjectOracleConnectionIntPtr">
            <summary>设置 IOracleCustomType.FromCustomObject(OracleConnection con, IntPtr pUdt) 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType.Oracle#DataAccess#Types#IOracleCustomType#FromCustomObject(Oracle.DataAccess.Client.OracleConnection,System.IntPtr)">
            <summary>设置 IOracleCustomType.FromCustomObject(OracleConnection con, IntPtr pUdt) 的 存根</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType.Oracle#DataAccess#Types#IOracleCustomType#ToCustomObject(Oracle.DataAccess.Client.OracleConnection,System.IntPtr)">
            <summary>设置 IOracleCustomType.ToCustomObject(OracleConnection con, IntPtr pUdt) 的 存根</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubIOracleCustomType.ToCustomObjectOracleConnectionIntPtr">
            <summary>设置 IOracleCustomType.ToCustomObject(OracleConnection con, IntPtr pUdt) 的 stub</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubIOracleCustomTypeFactory">
            <summary>Oracle.DataAccess.Types.IOracleCustomTypeFactory 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleCustomTypeFactory.#ctor">
            <summary>初始化 type StubIOracleCustomTypeFactory 的新实例</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubIOracleCustomTypeFactory.CreateObject">
            <summary>设置 IOracleCustomTypeFactory.CreateObject() 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubIOracleCustomTypeFactory.Oracle#DataAccess#Types#IOracleCustomTypeFactory#CreateObject">
            <summary>设置 IOracleCustomTypeFactory.CreateObject() 的 存根</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubOracleTypeException">
            <summary>Oracle.DataAccess.Types.OracleTypeException 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubOracleTypeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.InitializeStub">
            <summary>初始化 type StubOracleTypeException 的新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.Message">
            <summary>设置 OracleTypeException.get_Message() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.MessageGet">
            <summary>设置 OracleTypeException.get_Message() 的 stub</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.Source">
            <summary>设置 OracleTypeException.get_Source() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.SourceGet">
            <summary>设置 OracleTypeException.get_Source() 的 stub</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.ToString">
            <summary>设置 OracleTypeException.ToString() 的 存根</summary>
        </member>
        <member name="F:Oracle.DataAccess.Types.Fakes.StubOracleTypeException.ToString01">
            <summary>设置 OracleTypeException.ToString() 的 stub</summary>
        </member>
        <member name="T:Oracle.DataAccess.Types.Fakes.StubOracleUdt">
            <summary>Oracle.DataAccess.Types.OracleUdt 的存根类型</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleUdt.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleUdt.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:Oracle.DataAccess.Types.Fakes.StubOracleUdt.InitializeStub">
            <summary>初始化 type StubOracleUdt 的新实例</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleUdt.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Oracle.DataAccess.Types.Fakes.StubOracleUdt.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
